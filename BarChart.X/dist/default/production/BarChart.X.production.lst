

Microchip Technology PIC18 LITE Macro Assembler V1.20 build 52243 
                                                                                               Thu Jan 30 17:52:37 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           	psect	smallconst
    39  001000                     __psmallconst:
    40                           	opt stack 0
    41  001000                     exp@coeff:
    42                           	opt stack 0
    43  001000  00                 	db	0
    44  001001  80                 	db	128
    45  001002  3F                 	db	63
    46  001003  72                 	db	114
    47  001004  31                 	db	49
    48  001005  3F                 	db	63
    49  001006  FE                 	db	254
    50  001007  75                 	db	117
    51  001008  3E                 	db	62
    52  001009  58                 	db	88
    53  00100A  63                 	db	99
    54  00100B  3D                 	db	61
    55  00100C  95                 	db	149
    56  00100D  1D                 	db	29
    57  00100E  3C                 	db	60
    58  00100F  C5                 	db	197
    59  001010  AE                 	db	174
    60  001011  3A                 	db	58
    61  001012  79                 	db	121
    62  001013  21                 	db	33
    63  001014  39                 	db	57
    64  001015  94                 	db	148
    65  001016  80                 	db	128
    66  001017  37                 	db	55
    67  001018  93                 	db	147
    68  001019  A7                 	db	167
    69  00101A  35                 	db	53
    70  00101B  56                 	db	86
    71  00101C  15                 	db	21
    72  00101D  34                 	db	52
    73  00101E                     __end_ofexp@coeff:
    74                           	opt stack 0
    75  00101E                     log@coeff:
    76                           	opt stack 0
    77  00101E  00                 	db	0
    78  00101F  00                 	db	0
    79  001020  00                 	db	0
    80  001021  00                 	db	0
    81  001022  80                 	db	128
    82  001023  3F                 	db	63
    83  001024  F0                 	db	240
    84  001025  FF                 	db	255
    85  001026  BE                 	db	190
    86  001027  E2                 	db	226
    87  001028  A9                 	db	169
    88  001029  3E                 	db	62
    89  00102A  83                 	db	131
    90  00102B  76                 	db	118
    91  00102C  BE                 	db	190
    92  00102D  AE                 	db	174
    93  00102E  2B                 	db	43
    94  00102F  3E                 	db	62
    95  001030  3C                 	db	60
    96  001031  C3                 	db	195
    97  001032  BD                 	db	189
    98  001033  D2                 	db	210
    99  001034  13                 	db	19
   100  001035  3D                 	db	61
   101  001036  78                 	db	120
   102  001037  D3                 	db	211
   103  001038  BB                 	db	187
   104  001039                     __end_oflog@coeff:
   105                           	opt stack 0
   106  0000                     _LATA	set	3977
   107  0000                     _LATE	set	3981
   108  0000                     _TRISA	set	3986
   109  0000                     _TRISE	set	3990
   110                           
   111                           ; #config settings
   112  001039  00                 	db	0	; dummy byte at the end
   113  0000                     
   114                           	psect	cinit
   115  0021E4                     __pcinit:
   116                           	opt stack 0
   117  0021E4                     start_initialization:
   118                           	opt stack 0
   119  0021E4                     __initialization:
   120                           	opt stack 0
   121                           
   122                           ; Clear objects allocated to BANK0 (2 bytes)
   123  0021E4  0100               	movlb	0
   124  0021E6  6B7D               	clrf	(__pbssBANK0+1)& (0+255),b
   125  0021E8  6B7C               	clrf	__pbssBANK0& (0+255),b
   126  0021EA                     end_of_initialization:
   127                           	opt stack 0
   128  0021EA                     __end_of__initialization:
   129                           	opt stack 0
   130  0021EA  0100               	movlb	0
   131  0021EC  EFF8  F010         	goto	_main	;jump to C main() function
   132                           
   133                           	psect	bssBANK0
   134  00007C                     __pbssBANK0:
   135                           	opt stack 0
   136  00007C                     _errno:
   137                           	opt stack 0
   138  00007C                     	ds	2
   139                           
   140                           	psect	cstackBANK0
   141  000060                     __pcstackBANK0:
   142                           	opt stack 0
   143  000060                     _pow$666:
   144                           	opt stack 0
   145                           
   146                           ; 3 bytes @ 0x0
   147  000060                     	ds	3
   148  000063                     _pow$667:
   149                           	opt stack 0
   150                           
   151                           ; 3 bytes @ 0x3
   152  000063                     	ds	3
   153  000066                     pow@sign:
   154                           	opt stack 0
   155                           
   156                           ; 1 bytes @ 0x6
   157  000066                     	ds	1
   158  000067                     pow@yi:
   159                           	opt stack 0
   160                           
   161                           ; 4 bytes @ 0x7
   162  000067                     	ds	4
   163  00006B                     ??_program:
   164                           
   165                           ; 0 bytes @ 0xB
   166  00006B                     	ds	1
   167  00006C                     program@Leds:
   168                           	opt stack 0
   169                           
   170                           ; 1 bytes @ 0xC
   171  00006C                     	ds	1
   172  00006D                     program@Sens:
   173                           	opt stack 0
   174                           
   175                           ; 1 bytes @ 0xD
   176  00006D                     	ds	1
   177  00006E                     _program$664:
   178                           	opt stack 0
   179                           
   180                           ; 3 bytes @ 0xE
   181  00006E                     	ds	3
   182  000071                     _program$665:
   183                           	opt stack 0
   184                           
   185                           ; 3 bytes @ 0x11
   186  000071                     	ds	3
   187  000074                     program@imLed:
   188                           	opt stack 0
   189                           
   190                           ; 1 bytes @ 0x14
   191  000074                     	ds	1
   192  000075                     program@i:
   193                           	opt stack 0
   194                           
   195                           ; 2 bytes @ 0x15
   196  000075                     	ds	2
   197  000077                     
   198                           ; 2 bytes @ 0x17
   199  000077                     	ds	2
   200  000079                     
   201                           ; 3 bytes @ 0x19
   202  000079                     	ds	3
   203                           
   204                           	psect	cstackCOMRAM
   205  000001                     __pcstackCOMRAM:
   206                           	opt stack 0
   207  000001                     ?_leds:
   208                           	opt stack 0
   209  000001                     ?___ftge:
   210                           	opt stack 0
   211  000001                     ?___wmul:
   212                           	opt stack 0
   213  000001                     ?___ftpack:
   214                           	opt stack 0
   215  000001                     ?_frexp:
   216                           	opt stack 0
   217  000001                     ?___ftneg:
   218                           	opt stack 0
   219  000001                     leds@port:
   220                           	opt stack 0
   221  000001                     ___wmul@multiplier:
   222                           	opt stack 0
   223  000001                     ___ftpack@arg:
   224                           	opt stack 0
   225  000001                     ___ftge@ff1:
   226                           	opt stack 0
   227  000001                     ___ftneg@f1:
   228                           	opt stack 0
   229  000001                     frexp@value:
   230                           	opt stack 0
   231                           
   232                           ; 3 bytes @ 0x0
   233  000001                     	ds	1
   234  000002                     ??_leds:
   235                           
   236                           ; 0 bytes @ 0x1
   237  000002                     	ds	1
   238  000003                     ___wmul@multiplicand:
   239                           	opt stack 0
   240                           
   241                           ; 2 bytes @ 0x2
   242  000003                     	ds	1
   243  000004                     ___ftpack@exp:
   244                           	opt stack 0
   245  000004                     frexp@eptr:
   246                           	opt stack 0
   247  000004                     ___ftge@ff2:
   248                           	opt stack 0
   249                           
   250                           ; 3 bytes @ 0x3
   251  000004                     	ds	1
   252  000005                     ___ftpack@sign:
   253                           	opt stack 0
   254  000005                     ___wmul@product:
   255                           	opt stack 0
   256                           
   257                           ; 2 bytes @ 0x4
   258  000005                     	ds	1
   259  000006                     ??___ftpack:
   260  000006                     ??_frexp:
   261                           
   262                           ; 0 bytes @ 0x5
   263  000006                     	ds	1
   264  000007                     ??___ftge:
   265                           
   266                           ; 0 bytes @ 0x6
   267  000007                     	ds	2
   268  000009                     ?___ftdiv:
   269                           	opt stack 0
   270  000009                     ?_ldexp:
   271                           	opt stack 0
   272  000009                     ?___lltoft:
   273                           	opt stack 0
   274  000009                     ?___fttol:
   275                           	opt stack 0
   276  000009                     ___ftdiv@f1:
   277                           	opt stack 0
   278  000009                     ___fttol@f1:
   279                           	opt stack 0
   280  000009                     ldexp@value:
   281                           	opt stack 0
   282  000009                     ___lltoft@c:
   283                           	opt stack 0
   284                           
   285                           ; 4 bytes @ 0x8
   286  000009                     	ds	3
   287  00000C                     ldexp@newexp:
   288                           	opt stack 0
   289  00000C                     ___ftdiv@f2:
   290                           	opt stack 0
   291                           
   292                           ; 3 bytes @ 0xB
   293  00000C                     	ds	1
   294  00000D                     ??___fttol:
   295  00000D                     ??___lltoft:
   296                           
   297                           ; 0 bytes @ 0xC
   298  00000D                     	ds	1
   299  00000E                     ??_ldexp:
   300                           
   301                           ; 0 bytes @ 0xD
   302  00000E                     	ds	1
   303  00000F                     ??___ftdiv:
   304                           
   305                           ; 0 bytes @ 0xE
   306  00000F                     	ds	2
   307  000011                     ___lltoft@exp:
   308                           	opt stack 0
   309                           
   310                           ; 1 bytes @ 0x10
   311  000011                     	ds	1
   312  000012                     ___fttol@sign1:
   313                           	opt stack 0
   314                           
   315                           ; 1 bytes @ 0x11
   316  000012                     	ds	1
   317  000013                     ___fttol@lval:
   318                           	opt stack 0
   319                           
   320                           ; 4 bytes @ 0x12
   321  000013                     	ds	1
   322  000014                     ___ftdiv@cntr:
   323                           	opt stack 0
   324                           
   325                           ; 1 bytes @ 0x13
   326  000014                     	ds	1
   327  000015                     ___ftdiv@f3:
   328                           	opt stack 0
   329                           
   330                           ; 3 bytes @ 0x14
   331  000015                     	ds	2
   332  000017                     ___fttol@exp1:
   333                           	opt stack 0
   334                           
   335                           ; 1 bytes @ 0x16
   336  000017                     	ds	1
   337  000018                     ?___altoft:
   338                           	opt stack 0
   339  000018                     ?___awtoft:
   340                           	opt stack 0
   341  000018                     ___ftdiv@exp:
   342                           	opt stack 0
   343  000018                     ___awtoft@c:
   344                           	opt stack 0
   345  000018                     ___altoft@c:
   346                           	opt stack 0
   347                           
   348                           ; 4 bytes @ 0x17
   349  000018                     	ds	1
   350  000019                     ___ftdiv@sign:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x18
   354  000019                     	ds	2
   355  00001B                     ??___awtoft:
   356                           
   357                           ; 0 bytes @ 0x1A
   358  00001B                     	ds	1
   359  00001C                     ??___altoft:
   360  00001C                     ___awtoft@sign:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x1B
   364  00001C                     	ds	1
   365  00001D                     ?___ftmul:
   366                           	opt stack 0
   367  00001D                     ___ftmul@f1:
   368                           	opt stack 0
   369                           
   370                           ; 3 bytes @ 0x1C
   371  00001D                     	ds	3
   372  000020                     ___altoft@exp:
   373                           	opt stack 0
   374  000020                     ___ftmul@f2:
   375                           	opt stack 0
   376                           
   377                           ; 3 bytes @ 0x1F
   378  000020                     	ds	1
   379  000021                     ___altoft@sign:
   380                           	opt stack 0
   381                           
   382                           ; 1 bytes @ 0x20
   383  000021                     	ds	2
   384  000023                     ??___ftmul:
   385                           
   386                           ; 0 bytes @ 0x22
   387  000023                     	ds	5
   388  000028                     ___ftmul@exp:
   389                           	opt stack 0
   390                           
   391                           ; 1 bytes @ 0x27
   392  000028                     	ds	1
   393  000029                     ___ftmul@f3_as_product:
   394                           	opt stack 0
   395                           
   396                           ; 3 bytes @ 0x28
   397  000029                     	ds	3
   398  00002C                     ___ftmul@cntr:
   399                           	opt stack 0
   400                           
   401                           ; 1 bytes @ 0x2B
   402  00002C                     	ds	1
   403  00002D                     ___ftmul@sign:
   404                           	opt stack 0
   405                           
   406                           ; 1 bytes @ 0x2C
   407  00002D                     	ds	1
   408  00002E                     ?___ftadd:
   409                           	opt stack 0
   410  00002E                     ?___asftmul:
   411                           	opt stack 0
   412  00002E                     ___asftmul@f1p:
   413                           	opt stack 0
   414  00002E                     ___ftadd@f1:
   415                           	opt stack 0
   416                           
   417                           ; 3 bytes @ 0x2D
   418  00002E                     	ds	2
   419  000030                     ___asftmul@f2:
   420                           	opt stack 0
   421                           
   422                           ; 3 bytes @ 0x2F
   423  000030                     	ds	1
   424  000031                     ___ftadd@f2:
   425                           	opt stack 0
   426                           
   427                           ; 3 bytes @ 0x30
   428  000031                     	ds	2
   429  000033                     
   430                           ; 0 bytes @ 0x32
   431  000033                     	ds	1
   432  000034                     ??___ftadd:
   433                           
   434                           ; 0 bytes @ 0x33
   435  000034                     	ds	5
   436  000039                     ___ftadd@sign:
   437                           	opt stack 0
   438                           
   439                           ; 1 bytes @ 0x38
   440  000039                     	ds	1
   441  00003A                     ___ftadd@exp2:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x39
   445  00003A                     	ds	1
   446  00003B                     ___ftadd@exp1:
   447                           	opt stack 0
   448                           
   449                           ; 1 bytes @ 0x3A
   450  00003B                     	ds	1
   451  00003C                     ?___ftsub:
   452                           	opt stack 0
   453  00003C                     ?_floor:
   454                           	opt stack 0
   455  00003C                     ?_eval_poly:
   456                           	opt stack 0
   457  00003C                     ___ftsub@f1:
   458                           	opt stack 0
   459  00003C                     floor@x:
   460                           	opt stack 0
   461  00003C                     eval_poly@x:
   462                           	opt stack 0
   463                           
   464                           ; 3 bytes @ 0x3B
   465  00003C                     	ds	3
   466  00003F                     eval_poly@d:
   467                           	opt stack 0
   468  00003F                     ___ftsub@f2:
   469                           	opt stack 0
   470  00003F                     floor@i:
   471                           	opt stack 0
   472                           
   473                           ; 3 bytes @ 0x3E
   474  00003F                     	ds	2
   475  000041                     eval_poly@n:
   476                           	opt stack 0
   477                           
   478                           ; 2 bytes @ 0x40
   479  000041                     	ds	1
   480  000042                     ?___asftsub:
   481                           	opt stack 0
   482  000042                     ___asftsub@f1p:
   483                           	opt stack 0
   484  000042                     floor@expon:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x41
   488  000042                     	ds	1
   489  000043                     ??_eval_poly:
   490                           
   491                           ; 0 bytes @ 0x42
   492  000043                     	ds	1
   493  000044                     ___asftsub@f2:
   494                           	opt stack 0
   495                           
   496                           ; 3 bytes @ 0x43
   497  000044                     	ds	3
   498  000047                     
   499                           ; 0 bytes @ 0x46
   500  000047                     	ds	1
   501  000048                     eval_poly@res:
   502                           	opt stack 0
   503                           
   504                           ; 3 bytes @ 0x47
   505  000048                     	ds	3
   506  00004B                     ?_log:
   507                           	opt stack 0
   508  00004B                     log@x:
   509                           	opt stack 0
   510                           
   511                           ; 3 bytes @ 0x4A
   512  00004B                     	ds	3
   513  00004E                     log@exponent:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x4D
   517  00004E                     	ds	2
   518  000050                     ?_exp:
   519                           	opt stack 0
   520  000050                     exp@x:
   521                           	opt stack 0
   522                           
   523                           ; 3 bytes @ 0x4F
   524  000050                     	ds	3
   525  000053                     _exp$668:
   526                           	opt stack 0
   527                           
   528                           ; 3 bytes @ 0x52
   529  000053                     	ds	3
   530  000056                     exp@exponent:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x55
   534  000056                     	ds	2
   535  000058                     exp@sign:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0x57
   539  000058                     	ds	1
   540  000059                     ?_pow:
   541                           	opt stack 0
   542  000059                     pow@x:
   543                           	opt stack 0
   544                           
   545                           ; 3 bytes @ 0x58
   546  000059                     	ds	3
   547  00005C                     pow@y:
   548                           	opt stack 0
   549                           
   550                           ; 3 bytes @ 0x5B
   551  00005C                     	ds	3
   552  00005F                     ??_pow:
   553                           
   554                           ; 0 bytes @ 0x5E
   555  00005F                     	ds	1
   556  000060                     
   557                           ; 0 bytes @ 0x5F
   558 ;;
   559 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   560 ;;
   561 ;; *************** function _main *****************
   562 ;; Defined at:
   563 ;;		line 52 in file "main.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;  argc            2   23[BANK0 ] int 
   566 ;;  argv            3   25[BANK0 ] PTR PTR unsigned char 
   567 ;; Auto vars:     Size  Location     Type
   568 ;;		None
   569 ;; Return value:  Size  Location     Type
   570 ;;                  2   23[BANK0 ] int 
   571 ;; Registers used:
   572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   573 ;; Tracked objects:
   574 ;;		On entry : 0/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   578 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   581 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   582 ;;Total ram usage:        5 bytes
   583 ;; Hardware stack levels required when called:    7
   584 ;; This function calls:
   585 ;;		_setup
   586 ;;		_program
   587 ;; This function is called by:
   588 ;;		Startup code after reset
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           	psect	text0
   593  0021F0                     __ptext0:
   594                           	opt stack 0
   595  0021F0                     _main:
   596                           	opt stack 24
   597                           
   598                           ;main.c: 53: setup();
   599                           
   600                           ;incstack = 0
   601                           ;incstack = 0
   602  0021F0  ECFD  F010         	call	_setup	;wreg free
   603  0021F4                     l2348:
   604                           
   605                           ;main.c: 55: program();
   606  0021F4  EC5D  F00E         	call	_program	;wreg free
   607  0021F8  D7FD               	goto	l2348
   608  0021FA                     __end_of_main:
   609                           	opt stack 0
   610                           
   611 ;; *************** function _program *****************
   612 ;; Defined at:
   613 ;;		line 32 in file "main.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  i               2   21[BANK0 ] int 
   618 ;;  imLed           1   20[BANK0 ] unsigned char 
   619 ;;  Sens            1   13[BANK0 ] unsigned char 
   620 ;;  Leds            1   12[BANK0 ] unsigned char 
   621 ;; Return value:  Size  Location     Type
   622 ;;		None               void
   623 ;; Registers used:
   624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   631 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   632 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   633 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   634 ;;Total ram usage:       12 bytes
   635 ;; Hardware stack levels used:    1
   636 ;; Hardware stack levels required when called:    6
   637 ;; This function calls:
   638 ;;		_leds
   639 ;;		_pow
   640 ;;		___awtoft
   641 ;;		___fttol
   642 ;; This function is called by:
   643 ;;		_main
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           	psect	text1
   648  001CBA                     __ptext1:
   649                           	opt stack 0
   650  001CBA                     _program:
   651                           	opt stack 24
   652                           
   653                           ;main.c: 33: unsigned char Leds=0x00;
   654                           
   655                           ;incstack = 0
   656                           ;incstack = 0
   657  001CBA  0100               	movlb	0	; () banked
   658  001CBC  6F6B               	movwf	??_program& (0+255),b
   659  001CBE  0E00               	movlw	0
   660  001CC0  0100               	movlb	0	; () banked
   661  001CC2  0100               	movlb	0	; () banked
   662  001CC4  6F6C               	movwf	program@Leds& (0+255),b
   663  001CC6  0100               	movlb	0	; () banked
   664  001CC8  516B               	movf	??_program& (0+255),w,b
   665                           
   666                           ;main.c: 34: unsigned char Sens=0;
   667  001CCA  0100               	movlb	0	; () banked
   668  001CCC  6F6B               	movwf	??_program& (0+255),b
   669  001CCE  0E00               	movlw	0
   670  001CD0  0100               	movlb	0	; () banked
   671  001CD2  0100               	movlb	0	; () banked
   672  001CD4  6F6D               	movwf	program@Sens& (0+255),b
   673  001CD6  0100               	movlb	0	; () banked
   674  001CD8  516B               	movf	??_program& (0+255),w,b
   675                           
   676                           ;main.c: 35: unsigned char imLed=0x00;
   677  001CDA  0100               	movlb	0	; () banked
   678  001CDC  6F6B               	movwf	??_program& (0+255),b
   679  001CDE  0E00               	movlw	0
   680  001CE0  0100               	movlb	0	; () banked
   681  001CE2  0100               	movlb	0	; () banked
   682  001CE4  6F74               	movwf	program@imLed& (0+255),b
   683  001CE6  0100               	movlb	0	; () banked
   684  001CE8  516B               	movf	??_program& (0+255),w,b
   685                           
   686                           ; BSR set to: 0
   687                           ;main.c: 36: int i=0;
   688  001CEA  0E00               	movlw	0
   689  001CEC  0100               	movlb	0	; () banked
   690  001CEE  0100               	movlb	0	; () banked
   691  001CF0  6F76               	movwf	(program@i+1)& (0+255),b
   692  001CF2  0E00               	movlw	0
   693  001CF4  0100               	movlb	0	; () banked
   694  001CF6  6F75               	movwf	program@i& (0+255),b
   695                           
   696                           ; BSR set to: 0
   697                           ;main.c: 38: for(i=0;i<9;i++){
   698  001CF8  0E00               	movlw	0
   699  001CFA  0100               	movlb	0	; () banked
   700  001CFC  0100               	movlb	0	; () banked
   701  001CFE  6F76               	movwf	(program@i+1)& (0+255),b
   702  001D00  0E00               	movlw	0
   703  001D02  0100               	movlb	0	; () banked
   704  001D04  6F75               	movwf	program@i& (0+255),b
   705  001D06                     
   706                           ; BSR set to: 0
   707  001D06  0100               	movlb	0	; () banked
   708  001D08  0100               	movlb	0	; () banked
   709  001D0A  5176               	movf	(program@i+1)& (0+255),w,b
   710  001D0C  0A80               	xorlw	128
   711  001D0E  0F80               	addlw	-128
   712  001D10  0E09               	movlw	9
   713  001D12  B4D8               	btfsc	status,2,c
   714  001D14  5D75               	subwf	program@i& (0+255),w,b
   715  001D16  B0D8               	btfsc	status,0,c
   716  001D18  0012               	return	
   717                           
   718                           ; BSR set to: 0
   719                           ;main.c: 39: leds(imLed);
   720                           
   721                           ; BSR set to: 0
   722                           
   723                           ; BSR set to: 0
   724  001D1A  C074  F001         	movff	program@imLed,?_leds
   725  001D1E  ECC4  F010         	call	_leds	;wreg free
   726                           
   727                           ;main.c: 40: imLed=imLed+((unsigned char)pow((double)2,(double)i));
   728  001D22  C075  F018         	movff	program@i,?___awtoft
   729  001D26  C076  F019         	movff	program@i+1,?___awtoft+1
   730  001D2A  EC2E  F010         	call	___awtoft	;wreg free
   731  001D2E  C01A  F070         	movff	?___awtoft+2,_program$664+2
   732  001D32  C019  F06F         	movff	?___awtoft+1,_program$664+1
   733  001D36  C018  F06E         	movff	?___awtoft,_program$664
   734                           
   735                           ;main.c: 40: imLed=imLed+((unsigned char)pow((double)2,(double)i));
   736  001D3A  C06E  F05C         	movff	_program$664,?_pow+3
   737  001D3E  C06F  F05D         	movff	_program$664+1,?_pow+4
   738  001D42  C070  F05E         	movff	_program$664+2,?_pow+5
   739  001D46  0E00               	movlw	0
   740  001D48  6E59               	movwf	?_pow,c
   741  001D4A  0E00               	movlw	0
   742  001D4C  6E5A               	movwf	?_pow+1,c
   743  001D4E  0E40               	movlw	64
   744  001D50  6E5B               	movwf	?_pow+2,c
   745  001D52  ECF6  F009         	call	_pow	;wreg free
   746  001D56  C05B  F073         	movff	?_pow+2,_program$665+2
   747  001D5A  C05A  F072         	movff	?_pow+1,_program$665+1
   748  001D5E  C059  F071         	movff	?_pow,_program$665
   749                           
   750                           ;main.c: 40: imLed=imLed+((unsigned char)pow((double)2,(double)i));
   751  001D62  C071  F009         	movff	_program$665,?___fttol
   752  001D66  C072  F00A         	movff	_program$665+1,?___fttol+1
   753  001D6A  C073  F00B         	movff	_program$665+2,?___fttol+2
   754  001D6E  EC7A  F00C         	call	___fttol	;wreg free
   755  001D72  5009               	movf	?___fttol,w,c
   756  001D74  0100               	movlb	0	; () banked
   757  001D76  0100               	movlb	0	; () banked
   758  001D78  2574               	addwf	program@imLed& (0+255),w,b
   759  001D7A  0100               	movlb	0	; () banked
   760  001D7C  0100               	movlb	0	; () banked
   761  001D7E  6F74               	movwf	program@imLed& (0+255),b
   762                           
   763                           ; BSR set to: 0
   764                           ;main.c: 41: _delay((unsigned long)((100)*(4000000/4000.0)));
   765  001D80  0E82               	movlw	130
   766  001D82  0100               	movlb	0	; () banked
   767  001D84  6F6B               	movwf	??_program& (0+255),b
   768  001D86  0EDD               	movlw	221
   769  001D88                     u1697:
   770  001D88  2EE8               	decfsz	wreg,f,c
   771  001D8A  D7FE               	goto	u1697
   772  001D8C  2F6B               	decfsz	??_program& (0+255),f,b
   773  001D8E  D7FC               	goto	u1697
   774  001D90  D000               	nop2	
   775  001D92  0100               	movlb	0	; () banked
   776  001D94  0100               	movlb	0	; () banked
   777  001D96  4B75               	infsnz	program@i& (0+255),f,b
   778  001D98  2B76               	incf	(program@i+1)& (0+255),f,b
   779  001D9A  D7B5               	goto	L1
   780  001D9C                     __end_of_program:
   781                           	opt stack 0
   782                           wreg	equ	0xFE8
   783                           status	equ	0xFD8
   784                           
   785 ;; *************** function _pow *****************
   786 ;; Defined at:
   787 ;;		line 6 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\pow.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;  x               3   88[COMRAM] unsigned char 
   790 ;;  y               3   91[COMRAM] unsigned char 
   791 ;; Auto vars:     Size  Location     Type
   792 ;;  yi              4    7[BANK0 ] unsigned long 
   793 ;;  sign            1    6[BANK0 ] unsigned char 
   794 ;; Return value:  Size  Location     Type
   795 ;;                  3   88[COMRAM] unsigned char 
   796 ;; Registers used:
   797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   803 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   805 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   806 ;;      Totals:         7      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   807 ;;Total ram usage:       18 bytes
   808 ;; Hardware stack levels used:    1
   809 ;; Hardware stack levels required when called:    5
   810 ;; This function calls:
   811 ;;		___ftmul
   812 ;;		___ftge
   813 ;;		___ftneg
   814 ;;		___fttol
   815 ;;		___lltoft
   816 ;;		_log
   817 ;;		_exp
   818 ;; This function is called by:
   819 ;;		_program
   820 ;; This function uses a non-reentrant model
   821 ;;
   822                           
   823                           	psect	text2
   824  0013EC                     __ptext2:
   825                           	opt stack 0
   826  0013EC                     _pow:
   827                           	opt stack 24
   828                           
   829                           ; BSR set to: 0
   830                           ;incstack = 0
   831                           ;incstack = 0
   832  0013EC  6E5F               	movwf	??_pow& (0+255),c
   833  0013EE  0E00               	movlw	0
   834  0013F0  0100               	movlb	0	; () banked
   835  0013F2  0100               	movlb	0	; () banked
   836  0013F4  6F66               	movwf	pow@sign& (0+255),b
   837  0013F6  505F               	movf	??_pow& (0+255),w,c
   838                           
   839                           ; BSR set to: 0
   840  0013F8  0E7F               	movlw	127
   841  0013FA  145B               	andwf	pow@x+2,w,c
   842  0013FC  105A               	iorwf	pow@x+1,w,c
   843  0013FE  1059               	iorwf	pow@x,w,c
   844  001400  A4D8               	btfss	status,2,c
   845  001402  D01E               	goto	l2294
   846                           
   847                           ; BSR set to: 0
   848  001404  0E00               	movlw	0
   849  001406  6E01               	movwf	?___ftge,c
   850  001408  0E00               	movlw	0
   851  00140A  6E02               	movwf	?___ftge+1,c
   852  00140C  0E00               	movlw	0
   853  00140E  6E03               	movwf	?___ftge+2,c
   854  001410  C05C  F004         	movff	pow@y,?___ftge+3
   855  001414  C05D  F005         	movff	pow@y+1,?___ftge+4
   856  001418  C05E  F006         	movff	pow@y+2,?___ftge+5
   857  00141C  EC2A  F00F         	call	___ftge	;wreg free
   858  001420  A0D8               	btfss	status,0,c
   859  001422  D007               	goto	l576
   860  001424  0E00               	movlw	0
   861  001426  0100               	movlb	0	; () banked
   862  001428  0100               	movlb	0	; () banked
   863  00142A  6F7D               	movwf	(_errno+1)& (0+255),b
   864  00142C  0E21               	movlw	33
   865  00142E  0100               	movlb	0	; () banked
   866  001430  6F7C               	movwf	_errno& (0+255),b
   867  001432                     l576:
   868  001432  0E00               	movlw	0
   869  001434  6E59               	movwf	?_pow,c
   870  001436  0E00               	movlw	0
   871  001438  6E5A               	movwf	?_pow+1,c
   872  00143A  0E00               	movlw	0
   873  00143C  6E5B               	movwf	?_pow+2,c
   874  00143E  0012               	return	
   875  001440                     l2294:
   876  001440  0E7F               	movlw	127
   877  001442  145E               	andwf	pow@y+2,w,c
   878  001444  105D               	iorwf	pow@y+1,w,c
   879  001446  105C               	iorwf	pow@y,w,c
   880  001448  A4D8               	btfss	status,2,c
   881  00144A  D007               	goto	l2300
   882  00144C  0E00               	movlw	0
   883  00144E  6E59               	movwf	?_pow,c
   884  001450  0E80               	movlw	128
   885  001452  6E5A               	movwf	?_pow+1,c
   886  001454  0E3F               	movlw	63
   887  001456  6E5B               	movwf	?_pow+2,c
   888  001458  0012               	return	
   889  00145A                     l2300:
   890  00145A  505B               	movf	pow@x+2,w,c
   891  00145C  0A80               	xorlw	128
   892  00145E  0F80               	addlw	128
   893  001460  E105               	bnz	u1645
   894  001462  0E00               	movlw	0
   895  001464  5C5A               	subwf	pow@x+1,w,c
   896  001466  E102               	bnz	u1645
   897  001468  0E00               	movlw	0
   898  00146A  5C59               	subwf	pow@x,w,c
   899  00146C                     u1645:
   900  00146C  B0D8               	btfsc	status,0,c
   901  00146E  D047               	goto	l2312
   902  001470  C05C  F009         	movff	pow@y,?___fttol
   903  001474  C05D  F00A         	movff	pow@y+1,?___fttol+1
   904  001478  C05E  F00B         	movff	pow@y+2,?___fttol+2
   905  00147C  EC7A  F00C         	call	___fttol	;wreg free
   906  001480  C00C  F06A         	movff	?___fttol+3,pow@yi+3
   907  001484  C00B  F069         	movff	?___fttol+2,pow@yi+2
   908  001488  C00A  F068         	movff	?___fttol+1,pow@yi+1
   909  00148C  C009  F067         	movff	?___fttol,pow@yi
   910  001490  C067  F009         	movff	pow@yi,?___lltoft
   911  001494  C068  F00A         	movff	pow@yi+1,?___lltoft+1
   912  001498  C069  F00B         	movff	pow@yi+2,?___lltoft+2
   913  00149C  C06A  F00C         	movff	pow@yi+3,?___lltoft+3
   914  0014A0  ECFC  F00F         	call	___lltoft	;wreg free
   915  0014A4  505E               	movf	pow@y+2,w,c
   916  0014A6  180B               	xorwf	?___lltoft+2,w,c
   917  0014A8  E105               	bnz	u1655
   918  0014AA  505D               	movf	pow@y+1,w,c
   919  0014AC  180A               	xorwf	?___lltoft+1,w,c
   920  0014AE  E102               	bnz	u1655
   921  0014B0  505C               	movf	pow@y,w,c
   922  0014B2  1809               	xorwf	?___lltoft,w,c
   923  0014B4                     u1655:
   924  0014B4  B4D8               	btfsc	status,2,c
   925  0014B6  D00E               	goto	l2308
   926  0014B8  0E00               	movlw	0
   927  0014BA  0100               	movlb	0	; () banked
   928  0014BC  0100               	movlb	0	; () banked
   929  0014BE  6F7D               	movwf	(_errno+1)& (0+255),b
   930  0014C0  0E21               	movlw	33
   931  0014C2  0100               	movlb	0	; () banked
   932  0014C4  6F7C               	movwf	_errno& (0+255),b
   933  0014C6  0E00               	movlw	0
   934  0014C8  6E59               	movwf	?_pow,c
   935  0014CA  0E00               	movlw	0
   936  0014CC  6E5A               	movwf	?_pow+1,c
   937  0014CE  0E00               	movlw	0
   938  0014D0  6E5B               	movwf	?_pow+2,c
   939  0014D2  0012               	return	
   940  0014D4                     l2308:
   941  0014D4  0100               	movlb	0	; () banked
   942  0014D6  0100               	movlb	0	; () banked
   943  0014D8  5167               	movf	pow@yi& (0+255),w,b
   944  0014DA  0B01               	andlw	1
   945  0014DC  0100               	movlb	0	; () banked
   946  0014DE  0100               	movlb	0	; () banked
   947  0014E0  6F66               	movwf	pow@sign& (0+255),b
   948                           
   949                           ; BSR set to: 0
   950  0014E2  C059  F001         	movff	pow@x,?___ftneg
   951  0014E6  C05A  F002         	movff	pow@x+1,?___ftneg+1
   952  0014EA  C05B  F003         	movff	pow@x+2,?___ftneg+2
   953  0014EE  ECDF  F010         	call	___ftneg	;wreg free
   954  0014F2  C003  F05B         	movff	?___ftneg+2,pow@x+2
   955  0014F6  C002  F05A         	movff	?___ftneg+1,pow@x+1
   956  0014FA  C001  F059         	movff	?___ftneg,pow@x
   957  0014FE                     l2312:
   958  0014FE  C059  F04B         	movff	pow@x,?_log
   959  001502  C05A  F04C         	movff	pow@x+1,?_log+1
   960  001506  C05B  F04D         	movff	pow@x+2,?_log+2
   961  00150A  ECCA  F00A         	call	_log	;wreg free
   962  00150E  C04D  F062         	movff	?_log+2,_pow$666+2
   963  001512  C04C  F061         	movff	?_log+1,_pow$666+1
   964  001516  C04B  F060         	movff	?_log,_pow$666
   965  00151A  C060  F01D         	movff	_pow$666,?___ftmul
   966  00151E  C061  F01E         	movff	_pow$666+1,?___ftmul+1
   967  001522  C062  F01F         	movff	_pow$666+2,?___ftmul+2
   968  001526  C05C  F020         	movff	pow@y,?___ftmul+3
   969  00152A  C05D  F021         	movff	pow@y+1,?___ftmul+4
   970  00152E  C05E  F022         	movff	pow@y+2,?___ftmul+5
   971  001532  EC67  F00B         	call	___ftmul	;wreg free
   972  001536  C01F  F065         	movff	?___ftmul+2,_pow$667+2
   973  00153A  C01E  F064         	movff	?___ftmul+1,_pow$667+1
   974  00153E  C01D  F063         	movff	?___ftmul,_pow$667
   975  001542  C063  F050         	movff	_pow$667,?_exp
   976  001546  C064  F051         	movff	_pow$667+1,?_exp+1
   977  00154A  C065  F052         	movff	_pow$667+2,?_exp+2
   978  00154E  EC1D  F008         	call	_exp	;wreg free
   979  001552  C052  F05B         	movff	?_exp+2,pow@x+2
   980  001556  C051  F05A         	movff	?_exp+1,pow@x+1
   981  00155A  C050  F059         	movff	?_exp,pow@x
   982  00155E  0100               	movlb	0	; () banked
   983  001560  0100               	movlb	0	; () banked
   984  001562  5166               	movf	pow@sign& (0+255),w,b
   985  001564  B4D8               	btfsc	status,2,c
   986  001566  D00F               	goto	l581
   987                           
   988                           ; BSR set to: 0
   989  001568  C059  F001         	movff	pow@x,?___ftneg
   990  00156C  C05A  F002         	movff	pow@x+1,?___ftneg+1
   991  001570  C05B  F003         	movff	pow@x+2,?___ftneg+2
   992  001574  ECDF  F010         	call	___ftneg	;wreg free
   993  001578  C003  F05B         	movff	?___ftneg+2,?_pow+2
   994  00157C  C002  F05A         	movff	?___ftneg+1,?_pow+1
   995  001580  C001  F059         	movff	?___ftneg,?_pow
   996  001584  0012               	return	
   997  001586                     l581:
   998                           
   999                           ; BSR set to: 0
  1000  001586  C059  F059         	movff	pow@x,?_pow
  1001  00158A  C05A  F05A         	movff	pow@x+1,?_pow+1
  1002  00158E  C05B  F05B         	movff	pow@x+2,?_pow+2
  1003  001592  0012               	return	
  1004  001594                     __end_of_pow:
  1005                           	opt stack 0
  1006                           wreg	equ	0xFE8
  1007                           status	equ	0xFD8
  1008                           
  1009 ;; *************** function _exp *****************
  1010 ;; Defined at:
  1011 ;;		line 13 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\exp.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;  x               3   79[COMRAM] unsigned char 
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;  exponent        2   85[COMRAM] int 
  1016 ;;  sign            1   87[COMRAM] unsigned char 
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  3   79[COMRAM] unsigned char 
  1019 ;; Registers used:
  1020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1026 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1027 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1029 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1030 ;;Total ram usage:        9 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; Hardware stack levels required when called:    4
  1033 ;; This function calls:
  1034 ;;		___ftdiv
  1035 ;;		___asftmul
  1036 ;;		___asftsub
  1037 ;;		___awtoft
  1038 ;;		___ftge
  1039 ;;		___ftneg
  1040 ;;		___fttol
  1041 ;;		_floor
  1042 ;;		_eval_poly
  1043 ;;		_ldexp
  1044 ;; This function is called by:
  1045 ;;		_pow
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text3
  1050  00103A                     __ptext3:
  1051                           	opt stack 0
  1052  00103A                     _exp:
  1053                           	opt stack 24
  1054                           
  1055                           ;incstack = 0
  1056                           ;incstack = 0
  1057  00103A  0E7F               	movlw	127
  1058  00103C  1452               	andwf	exp@x+2,w,c
  1059  00103E  1051               	iorwf	exp@x+1,w,c
  1060  001040  1050               	iorwf	exp@x,w,c
  1061  001042  A4D8               	btfss	status,2,c
  1062  001044  D007               	goto	l2246
  1063  001046  0E00               	movlw	0
  1064  001048  6E50               	movwf	?_exp,c
  1065  00104A  0E80               	movlw	128
  1066  00104C  6E51               	movwf	?_exp+1,c
  1067  00104E  0E3F               	movlw	63
  1068  001050  6E52               	movwf	?_exp+2,c
  1069  001052  0012               	return	
  1070  001054                     l2246:
  1071  001054  0E72               	movlw	114
  1072  001056  6E01               	movwf	?___ftge,c
  1073  001058  0E31               	movlw	49
  1074  00105A  6E02               	movwf	?___ftge+1,c
  1075  00105C  0E44               	movlw	68
  1076  00105E  6E03               	movwf	?___ftge+2,c
  1077  001060  C050  F004         	movff	exp@x,?___ftge+3
  1078  001064  C051  F005         	movff	exp@x+1,?___ftge+4
  1079  001068  C052  F006         	movff	exp@x+2,?___ftge+5
  1080  00106C  EC2A  F00F         	call	___ftge	;wreg free
  1081  001070  B0D8               	btfsc	status,0,c
  1082  001072  D00E               	goto	l2252
  1083  001074  0E00               	movlw	0
  1084  001076  0100               	movlb	0	; () banked
  1085  001078  0100               	movlb	0	; () banked
  1086  00107A  6F7D               	movwf	(_errno+1)& (0+255),b
  1087  00107C  0E22               	movlw	34
  1088  00107E  0100               	movlb	0	; () banked
  1089  001080  6F7C               	movwf	_errno& (0+255),b
  1090  001082  0EFF               	movlw	255
  1091  001084  6E50               	movwf	?_exp,c
  1092  001086  0E7F               	movlw	127
  1093  001088  6E51               	movwf	?_exp+1,c
  1094  00108A  0E7F               	movlw	127
  1095  00108C  6E52               	movwf	?_exp+2,c
  1096  00108E  0012               	return	
  1097  001090                     l2252:
  1098  001090  C050  F001         	movff	exp@x,?___ftge
  1099  001094  C051  F002         	movff	exp@x+1,?___ftge+1
  1100  001098  C052  F003         	movff	exp@x+2,?___ftge+2
  1101  00109C  0E49               	movlw	73
  1102  00109E  6E04               	movwf	?___ftge+3,c
  1103  0010A0  0E3A               	movlw	58
  1104  0010A2  6E05               	movwf	?___ftge+4,c
  1105  0010A4  0EC4               	movlw	196
  1106  0010A6  6E06               	movwf	?___ftge+5,c
  1107  0010A8  EC2A  F00F         	call	___ftge	;wreg free
  1108  0010AC  B0D8               	btfsc	status,0,c
  1109  0010AE  D00E               	goto	l2258
  1110  0010B0  0E00               	movlw	0
  1111  0010B2  0100               	movlb	0	; () banked
  1112  0010B4  0100               	movlb	0	; () banked
  1113  0010B6  6F7D               	movwf	(_errno+1)& (0+255),b
  1114  0010B8  0E22               	movlw	34
  1115  0010BA  0100               	movlb	0	; () banked
  1116  0010BC  6F7C               	movwf	_errno& (0+255),b
  1117  0010BE  0E00               	movlw	0
  1118  0010C0  6E50               	movwf	?_exp,c
  1119  0010C2  0E00               	movlw	0
  1120  0010C4  6E51               	movwf	?_exp+1,c
  1121  0010C6  0E00               	movlw	0
  1122  0010C8  6E52               	movwf	?_exp+2,c
  1123  0010CA  0012               	return	
  1124  0010CC                     l2258:
  1125  0010CC  5052               	movf	exp@x+2,w,c
  1126  0010CE  0A80               	xorlw	128
  1127  0010D0  0F80               	addlw	128
  1128  0010D2  E105               	bnz	u1575
  1129  0010D4  0E00               	movlw	0
  1130  0010D6  5C51               	subwf	exp@x+1,w,c
  1131  0010D8  E102               	bnz	u1575
  1132  0010DA  0E00               	movlw	0
  1133  0010DC  5C50               	subwf	exp@x,w,c
  1134  0010DE                     u1575:
  1135  0010DE  B0D8               	btfsc	status,0,c
  1136  0010E0  D002               	goto	u1570
  1137  0010E2  0E01               	movlw	1
  1138  0010E4  D001               	goto	u1576
  1139  0010E6                     u1570:
  1140  0010E6  0E00               	movlw	0
  1141  0010E8                     u1576:
  1142  0010E8  6E58               	movwf	exp@sign,c
  1143  0010EA  5058               	movf	exp@sign,w,c
  1144  0010EC  B4D8               	btfsc	status,2,c
  1145  0010EE  D00E               	goto	l2264
  1146  0010F0  C050  F001         	movff	exp@x,?___ftneg
  1147  0010F4  C051  F002         	movff	exp@x+1,?___ftneg+1
  1148  0010F8  C052  F003         	movff	exp@x+2,?___ftneg+2
  1149  0010FC  ECDF  F010         	call	___ftneg	;wreg free
  1150  001100  C003  F052         	movff	?___ftneg+2,exp@x+2
  1151  001104  C002  F051         	movff	?___ftneg+1,exp@x+1
  1152  001108  C001  F050         	movff	?___ftneg,exp@x
  1153  00110C                     l2264:
  1154  00110C  0E00               	movlw	high exp@x
  1155  00110E  6E2F               	movwf	?___asftmul+1,c
  1156  001110  0E50               	movlw	low exp@x
  1157  001112  6E2E               	movwf	?___asftmul,c
  1158  001114  0EAA               	movlw	170
  1159  001116  6E30               	movwf	?___asftmul+2,c
  1160  001118  0EB8               	movlw	184
  1161  00111A  6E31               	movwf	?___asftmul+3,c
  1162  00111C  0E3F               	movlw	63
  1163  00111E  6E32               	movwf	?___asftmul+4,c
  1164  001120  EC6E  F010         	call	___asftmul	;wreg free
  1165  001124  C050  F03C         	movff	exp@x,?_floor
  1166  001128  C051  F03D         	movff	exp@x+1,?_floor+1
  1167  00112C  C052  F03E         	movff	exp@x+2,?_floor+2
  1168  001130  ECFB  F00C         	call	_floor	;wreg free
  1169  001134  C03E  F055         	movff	?_floor+2,_exp$668+2
  1170  001138  C03D  F054         	movff	?_floor+1,_exp$668+1
  1171  00113C  C03C  F053         	movff	?_floor,_exp$668
  1172  001140  C053  F009         	movff	_exp$668,?___fttol
  1173  001144  C054  F00A         	movff	_exp$668+1,?___fttol+1
  1174  001148  C055  F00B         	movff	_exp$668+2,?___fttol+2
  1175  00114C  EC7A  F00C         	call	___fttol	;wreg free
  1176  001150  C009  F056         	movff	?___fttol,exp@exponent
  1177  001154  C00A  F057         	movff	?___fttol+1,exp@exponent+1
  1178  001158  0E00               	movlw	high exp@x
  1179  00115A  6E43               	movwf	?___asftsub+1,c
  1180  00115C  0E50               	movlw	low exp@x
  1181  00115E  6E42               	movwf	?___asftsub,c
  1182  001160  C056  F018         	movff	exp@exponent,?___awtoft
  1183  001164  C057  F019         	movff	exp@exponent+1,?___awtoft+1
  1184  001168  EC2E  F010         	call	___awtoft	;wreg free
  1185  00116C  C01A  F046         	movff	?___awtoft+2,?___asftsub+4
  1186  001170  C019  F045         	movff	?___awtoft+1,?___asftsub+3
  1187  001174  C018  F044         	movff	?___awtoft,?___asftsub+2
  1188  001178  EC50  F010         	call	___asftsub	;wreg free
  1189  00117C  C050  F03C         	movff	exp@x,?_eval_poly
  1190  001180  C051  F03D         	movff	exp@x+1,?_eval_poly+1
  1191  001184  C052  F03E         	movff	exp@x+2,?_eval_poly+2
  1192  001188  0E10               	movlw	high exp@coeff
  1193  00118A  6E40               	movwf	?_eval_poly+4,c
  1194  00118C  0E00               	movlw	low exp@coeff
  1195  00118E  6E3F               	movwf	?_eval_poly+3,c
  1196  001190  0E00               	movlw	0
  1197  001192  6E42               	movwf	?_eval_poly+6,c
  1198  001194  0E09               	movlw	9
  1199  001196  6E41               	movwf	?_eval_poly+5,c
  1200  001198  ECE8  F00D         	call	_eval_poly	;wreg free
  1201  00119C  C03E  F00B         	movff	?_eval_poly+2,?_ldexp+2
  1202  0011A0  C03D  F00A         	movff	?_eval_poly+1,?_ldexp+1
  1203  0011A4  C03C  F009         	movff	?_eval_poly,?_ldexp
  1204  0011A8  C056  F00C         	movff	exp@exponent,?_ldexp+3
  1205  0011AC  C057  F00D         	movff	exp@exponent+1,?_ldexp+4
  1206  0011B0  EC73  F00D         	call	_ldexp	;wreg free
  1207  0011B4  C00B  F052         	movff	?_ldexp+2,exp@x+2
  1208  0011B8  C00A  F051         	movff	?_ldexp+1,exp@x+1
  1209  0011BC  C009  F050         	movff	?_ldexp,exp@x
  1210  0011C0  5058               	movf	exp@sign,w,c
  1211  0011C2  B4D8               	btfsc	status,2,c
  1212  0011C4  D026               	goto	l610
  1213  0011C6  0EFF               	movlw	255
  1214  0011C8  1850               	xorwf	exp@x,w,c
  1215  0011CA  0E7F               	movlw	127
  1216  0011CC  B4D8               	btfsc	status,2,c
  1217  0011CE  1851               	xorwf	exp@x+1,w,c
  1218  0011D0  0E7F               	movlw	127
  1219  0011D2  B4D8               	btfsc	status,2,c
  1220  0011D4  1852               	xorwf	exp@x+2,w,c
  1221  0011D6  A4D8               	btfss	status,2,c
  1222  0011D8  D007               	goto	l2280
  1223  0011DA  0E00               	movlw	0
  1224  0011DC  6E50               	movwf	?_exp,c
  1225  0011DE  0E00               	movlw	0
  1226  0011E0  6E51               	movwf	?_exp+1,c
  1227  0011E2  0E00               	movlw	0
  1228  0011E4  6E52               	movwf	?_exp+2,c
  1229  0011E6  0012               	return	
  1230  0011E8                     l2280:
  1231  0011E8  0E00               	movlw	0
  1232  0011EA  6E09               	movwf	?___ftdiv,c
  1233  0011EC  0E80               	movlw	128
  1234  0011EE  6E0A               	movwf	?___ftdiv+1,c
  1235  0011F0  0E3F               	movlw	63
  1236  0011F2  6E0B               	movwf	?___ftdiv+2,c
  1237  0011F4  C050  F00C         	movff	exp@x,?___ftdiv+3
  1238  0011F8  C051  F00D         	movff	exp@x+1,?___ftdiv+4
  1239  0011FC  C052  F00E         	movff	exp@x+2,?___ftdiv+5
  1240  001200  ECF5  F00B         	call	___ftdiv	;wreg free
  1241  001204  C00B  F052         	movff	?___ftdiv+2,?_exp+2
  1242  001208  C00A  F051         	movff	?___ftdiv+1,?_exp+1
  1243  00120C  C009  F050         	movff	?___ftdiv,?_exp
  1244  001210  0012               	return	
  1245  001212                     l610:
  1246  001212  C050  F050         	movff	exp@x,?_exp
  1247  001216  C051  F051         	movff	exp@x+1,?_exp+1
  1248  00121A  C052  F052         	movff	exp@x+2,?_exp+2
  1249  00121E  0012               	return	
  1250  001220                     __end_of_exp:
  1251                           	opt stack 0
  1252                           wreg	equ	0xFE8
  1253                           status	equ	0xFD8
  1254                           
  1255 ;; *************** function _ldexp *****************
  1256 ;; Defined at:
  1257 ;;		line 278 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\frexp.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  value           3    8[COMRAM] unsigned char 
  1260 ;;  newexp          2   11[COMRAM] int 
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;		None
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  3    8[COMRAM] int 
  1265 ;; Registers used:
  1266 ;;		wreg, status,2, status,0
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1272 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1275 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;Total ram usage:        8 bytes
  1277 ;; Hardware stack levels used:    1
  1278 ;; This function calls:
  1279 ;;		Nothing
  1280 ;; This function is called by:
  1281 ;;		_exp
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text4
  1286  001AE6                     __ptext4:
  1287                           	opt stack 0
  1288  001AE6                     _ldexp:
  1289                           	opt stack 27
  1290                           
  1291                           ;incstack = 0
  1292                           ;incstack = 0
  1293  001AE6  0E7F               	movlw	127
  1294  001AE8  140B               	andwf	ldexp@value+2,w,c
  1295  001AEA  100A               	iorwf	ldexp@value+1,w,c
  1296  001AEC  1009               	iorwf	ldexp@value,w,c
  1297  001AEE  A4D8               	btfss	status,2,c
  1298  001AF0  D007               	goto	l2024
  1299  001AF2  0E00               	movlw	0
  1300  001AF4  6E09               	movwf	?_ldexp,c
  1301  001AF6  0E00               	movlw	0
  1302  001AF8  6E0A               	movwf	?_ldexp+1,c
  1303  001AFA  0E00               	movlw	0
  1304  001AFC  6E0B               	movwf	?_ldexp+2,c
  1305  001AFE  0012               	return	
  1306  001B00                     l2024:
  1307  001B00  500B               	movf	ldexp@value+2,w,c
  1308  001B02  0B7F               	andlw	127
  1309  001B04  6E0E               	movwf	??_ldexp& (0+255),c
  1310  001B06  90D8               	bcf	status,0,c
  1311  001B08  340E               	rlcf	??_ldexp,w,c
  1312  001B0A  6E0F               	movwf	(??_ldexp+1)& (0+255),c
  1313  001B0C  6A10               	clrf	(??_ldexp+2)& (0+255),c
  1314  001B0E  3610               	rlcf	(??_ldexp+2)& (0+255),f,c
  1315  001B10  500F               	movf	??_ldexp+1,w,c
  1316  001B12  260C               	addwf	ldexp@newexp,f,c
  1317  001B14  5010               	movf	??_ldexp+2,w,c
  1318  001B16  220D               	addwfc	ldexp@newexp+1,f,c
  1319  001B18  340A               	rlcf	ldexp@value+1,w,c
  1320  001B1A  36E8               	rlcf	wreg,f,c
  1321  001B1C  0B01               	andlw	1
  1322  001B1E  6E0E               	movwf	??_ldexp& (0+255),c
  1323  001B20  500E               	movf	??_ldexp,w,c
  1324  001B22  260C               	addwf	ldexp@newexp,f,c
  1325  001B24  0E00               	movlw	0
  1326  001B26  220D               	addwfc	ldexp@newexp+1,f,c
  1327  001B28  AE0D               	btfss	ldexp@newexp+1,7,c
  1328  001B2A  D00E               	goto	l2034
  1329  001B2C  0E00               	movlw	0
  1330  001B2E  0100               	movlb	0	; () banked
  1331  001B30  0100               	movlb	0	; () banked
  1332  001B32  6F7D               	movwf	(_errno+1)& (0+255),b
  1333  001B34  0E22               	movlw	34
  1334  001B36  0100               	movlb	0	; () banked
  1335  001B38  6F7C               	movwf	_errno& (0+255),b
  1336  001B3A  0E00               	movlw	0
  1337  001B3C  6E09               	movwf	?_ldexp,c
  1338  001B3E  0E00               	movlw	0
  1339  001B40  6E0A               	movwf	?_ldexp+1,c
  1340  001B42  0E00               	movlw	0
  1341  001B44  6E0B               	movwf	?_ldexp+2,c
  1342  001B46  0012               	return	
  1343  001B48                     l2034:
  1344  001B48  500D               	movf	ldexp@newexp+1,w,c
  1345  001B4A  0A80               	xorlw	128
  1346  001B4C  0F7F               	addlw	-129
  1347  001B4E  0E00               	movlw	0
  1348  001B50  B4D8               	btfsc	status,2,c
  1349  001B52  5C0C               	subwf	ldexp@newexp,w,c
  1350  001B54  A0D8               	btfss	status,0,c
  1351  001B56  D020               	goto	l2050
  1352  001B58  0E00               	movlw	0
  1353  001B5A  0100               	movlb	0	; () banked
  1354  001B5C  0100               	movlb	0	; () banked
  1355  001B5E  6F7D               	movwf	(_errno+1)& (0+255),b
  1356  001B60  0E22               	movlw	34
  1357  001B62  0100               	movlb	0	; () banked
  1358  001B64  6F7C               	movwf	_errno& (0+255),b
  1359                           
  1360                           ; BSR set to: 0
  1361  001B66  500B               	movf	ldexp@value+2,w,c
  1362  001B68  0A80               	xorlw	128
  1363  001B6A  0F80               	addlw	128
  1364  001B6C  E105               	bnz	u1195
  1365  001B6E  0E00               	movlw	0
  1366  001B70  5C0A               	subwf	ldexp@value+1,w,c
  1367  001B72  E102               	bnz	u1195
  1368  001B74  0E00               	movlw	0
  1369  001B76  5C09               	subwf	ldexp@value,w,c
  1370  001B78                     u1195:
  1371  001B78  B0D8               	btfsc	status,0,c
  1372  001B7A  D007               	goto	l2046
  1373                           
  1374                           ; BSR set to: 0
  1375  001B7C  0EFF               	movlw	255
  1376  001B7E  6E09               	movwf	?_ldexp,c
  1377  001B80  0E7F               	movlw	127
  1378  001B82  6E0A               	movwf	?_ldexp+1,c
  1379  001B84  0EFF               	movlw	255
  1380  001B86  6E0B               	movwf	?_ldexp+2,c
  1381  001B88  0012               	return	
  1382  001B8A                     l2046:
  1383                           
  1384                           ; BSR set to: 0
  1385  001B8A  0EFF               	movlw	255
  1386  001B8C  6E09               	movwf	?_ldexp,c
  1387  001B8E  0E7F               	movlw	127
  1388  001B90  6E0A               	movwf	?_ldexp+1,c
  1389  001B92  0E7F               	movlw	127
  1390  001B94  6E0B               	movwf	?_ldexp+2,c
  1391  001B96  0012               	return	
  1392  001B98                     l2050:
  1393  001B98  340D               	rlcf	ldexp@newexp+1,w,c
  1394  001B9A  300D               	rrcf	ldexp@newexp+1,w,c
  1395  001B9C  6E0F               	movwf	(??_ldexp+1)& (0+255),c
  1396  001B9E  300C               	rrcf	ldexp@newexp,w,c
  1397  001BA0  6E0E               	movwf	??_ldexp& (0+255),c
  1398  001BA2  500B               	movf	ldexp@value+2,w,c
  1399  001BA4  180E               	xorwf	??_ldexp,w,c
  1400  001BA6  0B80               	andlw	-128
  1401  001BA8  180E               	xorwf	??_ldexp,w,c
  1402  001BAA  6E0B               	movwf	ldexp@value+2,c
  1403  001BAC  C00C  F00E         	movff	ldexp@newexp,??_ldexp
  1404  001BB0  0E01               	movlw	1
  1405  001BB2  160E               	andwf	??_ldexp,f,c
  1406  001BB4  320E               	rrcf	??_ldexp,f,c
  1407  001BB6  320E               	rrcf	??_ldexp,f,c
  1408  001BB8  500A               	movf	ldexp@value+1,w,c
  1409  001BBA  180E               	xorwf	??_ldexp,w,c
  1410  001BBC  0B7F               	andlw	-129
  1411  001BBE  180E               	xorwf	??_ldexp,w,c
  1412  001BC0  6E0A               	movwf	ldexp@value+1,c
  1413  001BC2  C009  F009         	movff	ldexp@value,?_ldexp
  1414  001BC6  C00A  F00A         	movff	ldexp@value+1,?_ldexp+1
  1415  001BCA  C00B  F00B         	movff	ldexp@value+2,?_ldexp+2
  1416  001BCE  0012               	return	
  1417  001BD0                     __end_of_ldexp:
  1418                           	opt stack 0
  1419                           wreg	equ	0xFE8
  1420                           status	equ	0xFD8
  1421                           
  1422 ;; *************** function _floor *****************
  1423 ;; Defined at:
  1424 ;;		line 14 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\floor.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;  x               3   59[COMRAM] int 
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  i               3   62[COMRAM] int 
  1429 ;;  expon           2   65[COMRAM] int 
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  3   59[COMRAM] int 
  1432 ;; Registers used:
  1433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1439 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1440 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1442 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1443 ;;Total ram usage:        8 bytes
  1444 ;; Hardware stack levels used:    1
  1445 ;; Hardware stack levels required when called:    2
  1446 ;; This function calls:
  1447 ;;		___altoft
  1448 ;;		___ftadd
  1449 ;;		___ftge
  1450 ;;		___fttol
  1451 ;;		_frexp
  1452 ;; This function is called by:
  1453 ;;		_exp
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           	psect	text5
  1458  0019F6                     __ptext5:
  1459                           	opt stack 0
  1460  0019F6                     _floor:
  1461                           	opt stack 25
  1462                           
  1463                           ;incstack = 0
  1464                           ;incstack = 0
  1465  0019F6  C03C  F001         	movff	floor@x,?_frexp
  1466  0019FA  C03D  F002         	movff	floor@x+1,?_frexp+1
  1467  0019FE  C03E  F003         	movff	floor@x+2,?_frexp+2
  1468  001A02  0E00               	movlw	high floor@expon
  1469  001A04  6E05               	movwf	?_frexp+4,c
  1470  001A06  0E42               	movlw	low floor@expon
  1471  001A08  6E04               	movwf	?_frexp+3,c
  1472  001A0A  EC72  F00F         	call	_frexp	;wreg free
  1473  001A0E  AE43               	btfss	floor@expon+1,7,c
  1474  001A10  D019               	goto	l2198
  1475  001A12  503E               	movf	floor@x+2,w,c
  1476  001A14  0A80               	xorlw	128
  1477  001A16  0F80               	addlw	128
  1478  001A18  E105               	bnz	u1485
  1479  001A1A  0E00               	movlw	0
  1480  001A1C  5C3D               	subwf	floor@x+1,w,c
  1481  001A1E  E102               	bnz	u1485
  1482  001A20  0E00               	movlw	0
  1483  001A22  5C3C               	subwf	floor@x,w,c
  1484  001A24                     u1485:
  1485  001A24  B0D8               	btfsc	status,0,c
  1486  001A26  D007               	goto	l2194
  1487  001A28  0E00               	movlw	0
  1488  001A2A  6E3C               	movwf	?_floor,c
  1489  001A2C  0E80               	movlw	128
  1490  001A2E  6E3D               	movwf	?_floor+1,c
  1491  001A30  0EBF               	movlw	191
  1492  001A32  6E3E               	movwf	?_floor+2,c
  1493  001A34  0012               	return	
  1494  001A36                     l2194:
  1495  001A36  0E00               	movlw	0
  1496  001A38  6E3C               	movwf	?_floor,c
  1497  001A3A  0E00               	movlw	0
  1498  001A3C  6E3D               	movwf	?_floor+1,c
  1499  001A3E  0E00               	movlw	0
  1500  001A40  6E3E               	movwf	?_floor+2,c
  1501  001A42  0012               	return	
  1502  001A44                     l2198:
  1503  001A44  0E15               	movlw	21
  1504  001A46  5C42               	subwf	floor@expon,w,c
  1505  001A48  0E00               	movlw	0
  1506  001A4A  5843               	subwfb	floor@expon+1,w,c
  1507  001A4C  A0D8               	btfss	status,0,c
  1508  001A4E  D007               	goto	l2202
  1509  001A50  C03C  F03C         	movff	floor@x,?_floor
  1510  001A54  C03D  F03D         	movff	floor@x+1,?_floor+1
  1511  001A58  C03E  F03E         	movff	floor@x+2,?_floor+2
  1512  001A5C  0012               	return	
  1513  001A5E                     l2202:
  1514  001A5E  C03C  F009         	movff	floor@x,?___fttol
  1515  001A62  C03D  F00A         	movff	floor@x+1,?___fttol+1
  1516  001A66  C03E  F00B         	movff	floor@x+2,?___fttol+2
  1517  001A6A  EC7A  F00C         	call	___fttol	;wreg free
  1518  001A6E  C00C  F01B         	movff	?___fttol+3,?___altoft+3
  1519  001A72  C00B  F01A         	movff	?___fttol+2,?___altoft+2
  1520  001A76  C00A  F019         	movff	?___fttol+1,?___altoft+1
  1521  001A7A  C009  F018         	movff	?___fttol,?___altoft
  1522  001A7E  ECBA  F00F         	call	___altoft	;wreg free
  1523  001A82  C01A  F041         	movff	?___altoft+2,floor@i+2
  1524  001A86  C019  F040         	movff	?___altoft+1,floor@i+1
  1525  001A8A  C018  F03F         	movff	?___altoft,floor@i
  1526  001A8E  C03C  F001         	movff	floor@x,?___ftge
  1527  001A92  C03D  F002         	movff	floor@x+1,?___ftge+1
  1528  001A96  C03E  F003         	movff	floor@x+2,?___ftge+2
  1529  001A9A  C03F  F004         	movff	floor@i,?___ftge+3
  1530  001A9E  C040  F005         	movff	floor@i+1,?___ftge+4
  1531  001AA2  C041  F006         	movff	floor@i+2,?___ftge+5
  1532  001AA6  EC2A  F00F         	call	___ftge	;wreg free
  1533  001AAA  B0D8               	btfsc	status,0,c
  1534  001AAC  D015               	goto	l620
  1535  001AAE  C03F  F02E         	movff	floor@i,?___ftadd
  1536  001AB2  C040  F02F         	movff	floor@i+1,?___ftadd+1
  1537  001AB6  C041  F030         	movff	floor@i+2,?___ftadd+2
  1538  001ABA  0E00               	movlw	0
  1539  001ABC  6E31               	movwf	?___ftadd+3,c
  1540  001ABE  0E80               	movlw	128
  1541  001AC0  6E32               	movwf	?___ftadd+4,c
  1542  001AC2  0EBF               	movlw	191
  1543  001AC4  6E33               	movwf	?___ftadd+5,c
  1544  001AC6  EC10  F009         	call	___ftadd	;wreg free
  1545  001ACA  C030  F03E         	movff	?___ftadd+2,?_floor+2
  1546  001ACE  C02F  F03D         	movff	?___ftadd+1,?_floor+1
  1547  001AD2  C02E  F03C         	movff	?___ftadd,?_floor
  1548  001AD6  0012               	return	
  1549  001AD8                     l620:
  1550  001AD8  C03F  F03C         	movff	floor@i,?_floor
  1551  001ADC  C040  F03D         	movff	floor@i+1,?_floor+1
  1552  001AE0  C041  F03E         	movff	floor@i+2,?_floor+2
  1553  001AE4  0012               	return	
  1554  001AE6                     __end_of_floor:
  1555                           	opt stack 0
  1556                           wreg	equ	0xFE8
  1557                           status	equ	0xFD8
  1558                           
  1559 ;; *************** function ___fttol *****************
  1560 ;; Defined at:
  1561 ;;		line 45 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\fttol.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  f1              3    8[COMRAM] float 
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;  lval            4   18[COMRAM] unsigned long 
  1566 ;;  exp1            1   22[COMRAM] unsigned char 
  1567 ;;  sign1           1   17[COMRAM] unsigned char 
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  4    8[COMRAM] long 
  1570 ;; Registers used:
  1571 ;;		wreg, status,2, status,0
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1577 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1578 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1579 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1580 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1581 ;;Total ram usage:       15 bytes
  1582 ;; Hardware stack levels used:    1
  1583 ;; This function calls:
  1584 ;;		Nothing
  1585 ;; This function is called by:
  1586 ;;		_program
  1587 ;;		_pow
  1588 ;;		_exp
  1589 ;;		_floor
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           	psect	text6
  1594  0018F4                     __ptext6:
  1595                           	opt stack 0
  1596  0018F4                     ___fttol:
  1597                           	opt stack 29
  1598                           
  1599                           ;incstack = 0
  1600                           ;incstack = 0
  1601  0018F4  0E0F               	movlw	15
  1602  0018F6  6E0D               	movwf	??___fttol& (0+255),c
  1603  0018F8  C009  F00E         	movff	___fttol@f1,??___fttol+1
  1604  0018FC  C00A  F00F         	movff	___fttol@f1+1,??___fttol+2
  1605  001900  C00B  F010         	movff	___fttol@f1+2,??___fttol+3
  1606  001904  280D               	incf	??___fttol,w,c
  1607  001906  6E11               	movwf	(??___fttol+4)& (0+255),c
  1608  001908  D004               	goto	u1070
  1609  00190A                     u1075:
  1610  00190A  90D8               	bcf	status,0,c
  1611  00190C  3210               	rrcf	??___fttol+3,f,c
  1612  00190E  320F               	rrcf	??___fttol+2,f,c
  1613  001910  320E               	rrcf	??___fttol+1,f,c
  1614  001912                     u1070:
  1615  001912  2E11               	decfsz	(??___fttol+4)& (0+255),f,c
  1616  001914  D7FA               	goto	u1075
  1617  001916  500E               	movf	??___fttol+1,w,c
  1618  001918  6E17               	movwf	___fttol@exp1,c
  1619  00191A  6617               	tstfsz	___fttol@exp1& (0+255),c
  1620  00191C  D009               	goto	l1968
  1621  00191E  0E00               	movlw	0
  1622  001920  6E09               	movwf	?___fttol,c
  1623  001922  0E00               	movlw	0
  1624  001924  6E0A               	movwf	?___fttol+1,c
  1625  001926  0E00               	movlw	0
  1626  001928  6E0B               	movwf	?___fttol+2,c
  1627  00192A  0E00               	movlw	0
  1628  00192C  6E0C               	movwf	?___fttol+3,c
  1629  00192E  0012               	return	
  1630  001930                     l1968:
  1631  001930  0E17               	movlw	23
  1632  001932  6E0D               	movwf	??___fttol& (0+255),c
  1633  001934  C009  F00E         	movff	___fttol@f1,??___fttol+1
  1634  001938  C00A  F00F         	movff	___fttol@f1+1,??___fttol+2
  1635  00193C  C00B  F010         	movff	___fttol@f1+2,??___fttol+3
  1636  001940  280D               	incf	??___fttol,w,c
  1637  001942  6E11               	movwf	(??___fttol+4)& (0+255),c
  1638  001944  D004               	goto	u1090
  1639  001946                     u1095:
  1640  001946  90D8               	bcf	status,0,c
  1641  001948  3210               	rrcf	??___fttol+3,f,c
  1642  00194A  320F               	rrcf	??___fttol+2,f,c
  1643  00194C  320E               	rrcf	??___fttol+1,f,c
  1644  00194E                     u1090:
  1645  00194E  2E11               	decfsz	(??___fttol+4)& (0+255),f,c
  1646  001950  D7FA               	goto	u1095
  1647  001952  500E               	movf	??___fttol+1,w,c
  1648  001954  6E12               	movwf	___fttol@sign1,c
  1649  001956  8E0A               	bsf	___fttol@f1+1,7,c
  1650  001958  0EFF               	movlw	255
  1651  00195A  1609               	andwf	___fttol@f1,f,c
  1652  00195C  0EFF               	movlw	255
  1653  00195E  160A               	andwf	___fttol@f1+1,f,c
  1654  001960  0E00               	movlw	0
  1655  001962  160B               	andwf	___fttol@f1+2,f,c
  1656  001964  5009               	movf	___fttol@f1,w,c
  1657  001966  6E13               	movwf	___fttol@lval,c
  1658  001968  500A               	movf	___fttol@f1+1,w,c
  1659  00196A  6E14               	movwf	___fttol@lval+1,c
  1660  00196C  500B               	movf	___fttol@f1+2,w,c
  1661  00196E  6E15               	movwf	___fttol@lval+2,c
  1662  001970  6A16               	clrf	___fttol@lval+3,c
  1663  001972  0E8E               	movlw	142
  1664  001974  5E17               	subwf	___fttol@exp1,f,c
  1665  001976  AE17               	btfss	___fttol@exp1,7,c
  1666  001978  D016               	goto	l1990
  1667  00197A  5017               	movf	___fttol@exp1,w,c
  1668  00197C  0A80               	xorlw	128
  1669  00197E  0F8F               	addlw	143
  1670  001980  B0D8               	btfsc	status,0,c
  1671  001982  D009               	goto	l1986
  1672  001984  0E00               	movlw	0
  1673  001986  6E09               	movwf	?___fttol,c
  1674  001988  0E00               	movlw	0
  1675  00198A  6E0A               	movwf	?___fttol+1,c
  1676  00198C  0E00               	movlw	0
  1677  00198E  6E0B               	movwf	?___fttol+2,c
  1678  001990  0E00               	movlw	0
  1679  001992  6E0C               	movwf	?___fttol+3,c
  1680  001994  0012               	return	
  1681  001996                     l1986:
  1682  001996  90D8               	bcf	status,0,c
  1683  001998  3216               	rrcf	___fttol@lval+3,f,c
  1684  00199A  3215               	rrcf	___fttol@lval+2,f,c
  1685  00199C  3214               	rrcf	___fttol@lval+1,f,c
  1686  00199E  3213               	rrcf	___fttol@lval,f,c
  1687  0019A0  3E17               	incfsz	___fttol@exp1,f,c
  1688  0019A2  D7F9               	goto	l1986
  1689  0019A4  D014               	goto	l2000
  1690  0019A6                     l1990:
  1691  0019A6  0E17               	movlw	23
  1692  0019A8  6417               	cpfsgt	___fttol@exp1,c
  1693  0019AA  D00F               	goto	l1998
  1694  0019AC  0E00               	movlw	0
  1695  0019AE  6E09               	movwf	?___fttol,c
  1696  0019B0  0E00               	movlw	0
  1697  0019B2  6E0A               	movwf	?___fttol+1,c
  1698  0019B4  0E00               	movlw	0
  1699  0019B6  6E0B               	movwf	?___fttol+2,c
  1700  0019B8  0E00               	movlw	0
  1701  0019BA  6E0C               	movwf	?___fttol+3,c
  1702  0019BC  0012               	return	
  1703  0019BE                     l1996:
  1704  0019BE  90D8               	bcf	status,0,c
  1705  0019C0  3613               	rlcf	___fttol@lval,f,c
  1706  0019C2  3614               	rlcf	___fttol@lval+1,f,c
  1707  0019C4  3615               	rlcf	___fttol@lval+2,f,c
  1708  0019C6  3616               	rlcf	___fttol@lval+3,f,c
  1709  0019C8  0617               	decf	___fttol@exp1,f,c
  1710  0019CA                     l1998:
  1711  0019CA  6617               	tstfsz	___fttol@exp1,c
  1712  0019CC  D7F8               	goto	l1996
  1713  0019CE                     l2000:
  1714  0019CE  5012               	movf	___fttol@sign1,w,c
  1715  0019D0  B4D8               	btfsc	status,2,c
  1716  0019D2  D008               	goto	l2004
  1717  0019D4  1E16               	comf	___fttol@lval+3,f,c
  1718  0019D6  1E15               	comf	___fttol@lval+2,f,c
  1719  0019D8  1E14               	comf	___fttol@lval+1,f,c
  1720  0019DA  6C13               	negf	___fttol@lval,c
  1721  0019DC  0E00               	movlw	0
  1722  0019DE  2214               	addwfc	___fttol@lval+1,f,c
  1723  0019E0  2215               	addwfc	___fttol@lval+2,f,c
  1724  0019E2  2216               	addwfc	___fttol@lval+3,f,c
  1725  0019E4                     l2004:
  1726  0019E4  C013  F009         	movff	___fttol@lval,?___fttol
  1727  0019E8  C014  F00A         	movff	___fttol@lval+1,?___fttol+1
  1728  0019EC  C015  F00B         	movff	___fttol@lval+2,?___fttol+2
  1729  0019F0  C016  F00C         	movff	___fttol@lval+3,?___fttol+3
  1730  0019F4  0012               	return	
  1731  0019F6                     __end_of___fttol:
  1732                           	opt stack 0
  1733                           wreg	equ	0xFE8
  1734                           status	equ	0xFD8
  1735                           
  1736 ;; *************** function ___ftge *****************
  1737 ;; Defined at:
  1738 ;;		line 5 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\ftge.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  ff1             3    0[COMRAM] float 
  1741 ;;  ff2             3    3[COMRAM] float 
  1742 ;; Auto vars:     Size  Location     Type
  1743 ;;		None
  1744 ;; Return value:  Size  Location     Type
  1745 ;;		None               void
  1746 ;; Registers used:
  1747 ;;		wreg, status,2, status,0
  1748 ;; Tracked objects:
  1749 ;;		On entry : 0/0
  1750 ;;		On exit  : 0/0
  1751 ;;		Unchanged: 0/0
  1752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1753 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1755 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1756 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1757 ;;Total ram usage:        9 bytes
  1758 ;; Hardware stack levels used:    1
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_pow
  1763 ;;		_exp
  1764 ;;		_floor
  1765 ;; This function uses a non-reentrant model
  1766 ;;
  1767                           
  1768                           	psect	text7
  1769  001E54                     __ptext7:
  1770                           	opt stack 0
  1771  001E54                     ___ftge:
  1772                           	opt stack 26
  1773                           
  1774                           ;incstack = 0
  1775                           ;incstack = 0
  1776  001E54  AE03               	btfss	___ftge@ff1+2,7,c
  1777  001E56  D016               	goto	l1846
  1778  001E58  C001  F007         	movff	___ftge@ff1,??___ftge
  1779  001E5C  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  1780  001E60  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  1781  001E64  1E07               	comf	??___ftge,f,c
  1782  001E66  1E08               	comf	??___ftge+1,f,c
  1783  001E68  1E09               	comf	??___ftge+2,f,c
  1784  001E6A  2A07               	incf	??___ftge,f,c
  1785  001E6C  0E00               	movlw	0
  1786  001E6E  2208               	addwfc	??___ftge+1,f,c
  1787  001E70  2209               	addwfc	??___ftge+2,f,c
  1788  001E72  0E00               	movlw	0
  1789  001E74  2407               	addwf	??___ftge,w,c
  1790  001E76  6E01               	movwf	___ftge@ff1,c
  1791  001E78  0E00               	movlw	0
  1792  001E7A  2008               	addwfc	??___ftge+1,w,c
  1793  001E7C  6E02               	movwf	___ftge@ff1+1,c
  1794  001E7E  0E80               	movlw	128
  1795  001E80  2009               	addwfc	??___ftge+2,w,c
  1796  001E82  6E03               	movwf	___ftge@ff1+2,c
  1797  001E84                     l1846:
  1798  001E84  AE06               	btfss	___ftge@ff2+2,7,c
  1799  001E86  D016               	goto	l1850
  1800  001E88  C004  F007         	movff	___ftge@ff2,??___ftge
  1801  001E8C  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  1802  001E90  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  1803  001E94  1E07               	comf	??___ftge,f,c
  1804  001E96  1E08               	comf	??___ftge+1,f,c
  1805  001E98  1E09               	comf	??___ftge+2,f,c
  1806  001E9A  2A07               	incf	??___ftge,f,c
  1807  001E9C  0E00               	movlw	0
  1808  001E9E  2208               	addwfc	??___ftge+1,f,c
  1809  001EA0  2209               	addwfc	??___ftge+2,f,c
  1810  001EA2  0E00               	movlw	0
  1811  001EA4  2407               	addwf	??___ftge,w,c
  1812  001EA6  6E04               	movwf	___ftge@ff2,c
  1813  001EA8  0E00               	movlw	0
  1814  001EAA  2008               	addwfc	??___ftge+1,w,c
  1815  001EAC  6E05               	movwf	___ftge@ff2+1,c
  1816  001EAE  0E80               	movlw	128
  1817  001EB0  2009               	addwfc	??___ftge+2,w,c
  1818  001EB2  6E06               	movwf	___ftge@ff2+2,c
  1819  001EB4                     l1850:
  1820  001EB4  0E00               	movlw	0
  1821  001EB6  1A01               	xorwf	___ftge@ff1,f,c
  1822  001EB8  0E00               	movlw	0
  1823  001EBA  1A02               	xorwf	___ftge@ff1+1,f,c
  1824  001EBC  0E80               	movlw	128
  1825  001EBE  1A03               	xorwf	___ftge@ff1+2,f,c
  1826  001EC0  0E00               	movlw	0
  1827  001EC2  1A04               	xorwf	___ftge@ff2,f,c
  1828  001EC4  0E00               	movlw	0
  1829  001EC6  1A05               	xorwf	___ftge@ff2+1,f,c
  1830  001EC8  0E80               	movlw	128
  1831  001ECA  1A06               	xorwf	___ftge@ff2+2,f,c
  1832  001ECC  5004               	movf	___ftge@ff2,w,c
  1833  001ECE  5C01               	subwf	___ftge@ff1,w,c
  1834  001ED0  5005               	movf	___ftge@ff2+1,w,c
  1835  001ED2  5802               	subwfb	___ftge@ff1+1,w,c
  1836  001ED4  5006               	movf	___ftge@ff2+2,w,c
  1837  001ED6  5803               	subwfb	___ftge@ff1+2,w,c
  1838  001ED8  B0D8               	btfsc	status,0,c
  1839  001EDA  D002               	goto	l1856
  1840  001EDC  90D8               	bcf	status,0,c
  1841  001EDE  0012               	return	
  1842  001EE0                     l1856:
  1843  001EE0  80D8               	bsf	status,0,c
  1844  001EE2  0012               	return	
  1845  001EE4                     __end_of___ftge:
  1846                           	opt stack 0
  1847                           wreg	equ	0xFE8
  1848                           status	equ	0xFD8
  1849                           
  1850 ;; *************** function ___altoft *****************
  1851 ;; Defined at:
  1852 ;;		line 43 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\altoft.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  c               4   23[COMRAM] long 
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;  sign            1   32[COMRAM] unsigned char 
  1857 ;;  exp             1   31[COMRAM] unsigned char 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  3   23[COMRAM] float 
  1860 ;; Registers used:
  1861 ;;		wreg, status,2, status,0, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1867 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1869 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1870 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1871 ;;Total ram usage:       10 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:    1
  1874 ;; This function calls:
  1875 ;;		___ftpack
  1876 ;; This function is called by:
  1877 ;;		_floor
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           	psect	text8
  1882  001F74                     __ptext8:
  1883                           	opt stack 0
  1884  001F74                     ___altoft:
  1885                           	opt stack 25
  1886                           
  1887                           ;incstack = 0
  1888                           ;incstack = 0
  1889  001F74  6E1C               	movwf	??___altoft& (0+255),c
  1890  001F76  0E00               	movlw	0
  1891  001F78  6E21               	movwf	___altoft@sign,c
  1892  001F7A  501C               	movf	??___altoft& (0+255),w,c
  1893  001F7C  6E1C               	movwf	??___altoft& (0+255),c
  1894  001F7E  0E8E               	movlw	142
  1895  001F80  6E20               	movwf	___altoft@exp,c
  1896  001F82  501C               	movf	??___altoft& (0+255),w,c
  1897  001F84  AE1B               	btfss	___altoft@c+3,7,c
  1898  001F86  D013               	goto	l1900
  1899  001F88  1E1B               	comf	___altoft@c+3,f,c
  1900  001F8A  1E1A               	comf	___altoft@c+2,f,c
  1901  001F8C  1E19               	comf	___altoft@c+1,f,c
  1902  001F8E  6C18               	negf	___altoft@c,c
  1903  001F90  0E00               	movlw	0
  1904  001F92  2219               	addwfc	___altoft@c+1,f,c
  1905  001F94  221A               	addwfc	___altoft@c+2,f,c
  1906  001F96  221B               	addwfc	___altoft@c+3,f,c
  1907  001F98  6E1C               	movwf	??___altoft& (0+255),c
  1908  001F9A  0E01               	movlw	1
  1909  001F9C  6E21               	movwf	___altoft@sign,c
  1910  001F9E  501C               	movf	??___altoft& (0+255),w,c
  1911  001FA0  D006               	goto	l1900
  1912  001FA2                     l1898:
  1913  001FA2  90D8               	bcf	status,0,c
  1914  001FA4  321B               	rrcf	___altoft@c+3,f,c
  1915  001FA6  321A               	rrcf	___altoft@c+2,f,c
  1916  001FA8  3219               	rrcf	___altoft@c+1,f,c
  1917  001FAA  3218               	rrcf	___altoft@c,f,c
  1918  001FAC  2A20               	incf	___altoft@exp,f,c
  1919  001FAE                     l1900:
  1920  001FAE  0E00               	movlw	0
  1921  001FB0  1418               	andwf	___altoft@c,w,c
  1922  001FB2  6E1C               	movwf	??___altoft& (0+255),c
  1923  001FB4  0E00               	movlw	0
  1924  001FB6  1419               	andwf	___altoft@c+1,w,c
  1925  001FB8  6E1D               	movwf	(??___altoft+1)& (0+255),c
  1926  001FBA  0E00               	movlw	0
  1927  001FBC  141A               	andwf	___altoft@c+2,w,c
  1928  001FBE  6E1E               	movwf	(??___altoft+2)& (0+255),c
  1929  001FC0  0EFF               	movlw	255
  1930  001FC2  141B               	andwf	___altoft@c+3,w,c
  1931  001FC4  6E1F               	movwf	(??___altoft+3)& (0+255),c
  1932  001FC6  501F               	movf	??___altoft+3,w,c
  1933  001FC8  101C               	iorwf	??___altoft,w,c
  1934  001FCA  101D               	iorwf	??___altoft+1,w,c
  1935  001FCC  101E               	iorwf	??___altoft+2,w,c
  1936  001FCE  A4D8               	btfss	status,2,c
  1937  001FD0  D7E8               	goto	l1898
  1938  001FD2  C018  F001         	movff	___altoft@c,?___ftpack
  1939  001FD6  C019  F002         	movff	___altoft@c+1,?___ftpack+1
  1940  001FDA  C01A  F003         	movff	___altoft@c+2,?___ftpack+2
  1941  001FDE  C020  F004         	movff	___altoft@exp,?___ftpack+3
  1942  001FE2  C021  F005         	movff	___altoft@sign,?___ftpack+4
  1943  001FE6  ECCE  F00E         	call	___ftpack	;wreg free
  1944  001FEA  C003  F01A         	movff	?___ftpack+2,?___altoft+2
  1945  001FEE  C002  F019         	movff	?___ftpack+1,?___altoft+1
  1946  001FF2  C001  F018         	movff	?___ftpack,?___altoft
  1947  001FF6  0012               	return	
  1948  001FF8                     __end_of___altoft:
  1949                           	opt stack 0
  1950                           wreg	equ	0xFE8
  1951                           status	equ	0xFD8
  1952                           
  1953 ;; *************** function ___ftneg *****************
  1954 ;; Defined at:
  1955 ;;		line 16 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\ftneg.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;  f1              3    0[COMRAM] float 
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;		None
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  3    0[COMRAM] float 
  1962 ;; Registers used:
  1963 ;;		wreg, status,2, status,0
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1969 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1972 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1973 ;;Total ram usage:        3 bytes
  1974 ;; Hardware stack levels used:    1
  1975 ;; This function calls:
  1976 ;;		Nothing
  1977 ;; This function is called by:
  1978 ;;		_pow
  1979 ;;		_exp
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           	psect	text9
  1984  0021BE                     __ptext9:
  1985                           	opt stack 0
  1986  0021BE                     ___ftneg:
  1987                           	opt stack 27
  1988                           
  1989                           ;incstack = 0
  1990                           ;incstack = 0
  1991  0021BE  0E7F               	movlw	127
  1992  0021C0  1403               	andwf	___ftneg@f1+2,w,c
  1993  0021C2  1002               	iorwf	___ftneg@f1+1,w,c
  1994  0021C4  1001               	iorwf	___ftneg@f1,w,c
  1995  0021C6  B4D8               	btfsc	status,2,c
  1996  0021C8  D006               	goto	l421
  1997  0021CA  0E00               	movlw	0
  1998  0021CC  1A01               	xorwf	___ftneg@f1,f,c
  1999  0021CE  0E00               	movlw	0
  2000  0021D0  1A02               	xorwf	___ftneg@f1+1,f,c
  2001  0021D2  0E80               	movlw	128
  2002  0021D4  1A03               	xorwf	___ftneg@f1+2,f,c
  2003  0021D6                     l421:
  2004  0021D6  C001  F001         	movff	___ftneg@f1,?___ftneg
  2005  0021DA  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  2006  0021DE  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  2007  0021E2  0012               	return	
  2008  0021E4                     __end_of___ftneg:
  2009                           	opt stack 0
  2010                           wreg	equ	0xFE8
  2011                           status	equ	0xFD8
  2012                           
  2013 ;; *************** function ___asftsub *****************
  2014 ;; Defined at:
  2015 ;;		line 5 in file "C:\PRG\Microchip\xc8\v1.20\sources\pic18\asftsub.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  f1p             2   65[COMRAM] PTR float 
  2018 ;;		 -> exp@x(3), 
  2019 ;;  f2              3   67[COMRAM] float 
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;		None
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  3   65[COMRAM] float 
  2024 ;; Registers used:
  2025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2031 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2034 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2035 ;;Total ram usage:        5 bytes
  2036 ;; Hardware stack levels used:    1
  2037 ;; Hardware stack levels required when called:    3
  2038 ;; This function calls:
  2039 ;;		___ftsub
  2040 ;; This function is called by:
  2041 ;;		_exp
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text10
  2046  0020A0                     __ptext10:
  2047                           	opt stack 0
  2048  0020A0                     ___asftsub:
  2049                           	opt stack 24
  2050                           
  2051                           ;	Return value of ___asftsub is never used
  2052                           
  2053                           ;incstack = 0
  2054                           ;incstack = 0
  2055  0020A0  C042  FFD9         	movff	___asftsub@f1p,fsr2l
  2056  0020A4  C043  FFDA         	movff	___asftsub@f1p+1,fsr2h
  2057  0020A8  CFDE F03C          	movff	postinc2,?___ftsub
  2058  0020AC  CFDE F03D          	movff	postinc2,?___ftsub+1
  2059  0020B0  CFDD F03E          	movff	postdec2,?___ftsub+2
  2060  0020B4  C044  F03F         	movff	___asftsub@f2,?___ftsub+3
  2061  0020B8  C045  F040         	movff	___asftsub@f2+1,?___ftsub+4
  2062  0020BC  C046  F041         	movff	___asftsub@f2+2,?___ftsub+5
  2063  0020C0  ECA9  F010         	call	___ftsub	;wreg free
  2064  0020C4  C042  FFD9         	movff	___asftsub@f1p,fsr2l
  2065  0020C8  C043  FFDA         	movff	___asftsub@f1p+1,fsr2h
  2066  0020CC  C03C  FFDE         	movff	?___ftsub,postinc2
  2067  0020D0  C03D  FFDE         	movff	?___ftsub+1,postinc2
  2068  0020D4  C03E  FFDD         	movff	?___ftsub+2,postdec2
  2069  0020D8  52DD               	movf	postdec2,f,c
  2070  0020DA  0012               	return	
  2071  0020DC                     __end_of___asftsub:
  2072                           	opt stack 0
  2073                           wreg	equ	0xFE8
  2074                           postinc2	equ	0xFDE
  2075                           postdec2	equ	0xFDD
  2076                           fsr2h	equ	0xFDA
  2077                           fsr2l	equ	0xFD9
  2078                           status	equ	0xFD8
  2079                           
  2080 ;; *************** function ___ftsub *****************
  2081 ;; Defined at:
  2082 ;;		line 22 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\ftsub.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  f1              3   59[COMRAM] float 
  2085 ;;  f2              3   62[COMRAM] float 
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;		None
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  3   59[COMRAM] float 
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0, cstack
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2097 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2100 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2101 ;;Total ram usage:        6 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; Hardware stack levels required when called:    2
  2104 ;; This function calls:
  2105 ;;		___ftadd
  2106 ;; This function is called by:
  2107 ;;		___asftsub
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text11
  2112  002152                     __ptext11:
  2113                           	opt stack 0
  2114  002152                     ___ftsub:
  2115                           	opt stack 24
  2116                           
  2117                           ;incstack = 0
  2118                           ;incstack = 0
  2119  002152  0E00               	movlw	0
  2120  002154  1A3F               	xorwf	___ftsub@f2,f,c
  2121  002156  0E00               	movlw	0
  2122  002158  1A40               	xorwf	___ftsub@f2+1,f,c
  2123  00215A  0E80               	movlw	128
  2124  00215C  1A41               	xorwf	___ftsub@f2+2,f,c
  2125  00215E  C03C  F02E         	movff	___ftsub@f1,?___ftadd
  2126  002162  C03D  F02F         	movff	___ftsub@f1+1,?___ftadd+1
  2127  002166  C03E  F030         	movff	___ftsub@f1+2,?___ftadd+2
  2128  00216A  C03F  F031         	movff	___ftsub@f2,?___ftadd+3
  2129  00216E  C040  F032         	movff	___ftsub@f2+1,?___ftadd+4
  2130  002172  C041  F033         	movff	___ftsub@f2+2,?___ftadd+5
  2131  002176  EC10  F009         	call	___ftadd	;wreg free
  2132  00217A  C030  F03E         	movff	?___ftadd+2,?___ftsub+2
  2133  00217E  C02F  F03D         	movff	?___ftadd+1,?___ftsub+1
  2134  002182  C02E  F03C         	movff	?___ftadd,?___ftsub
  2135  002186  0012               	return	
  2136  002188                     __end_of___ftsub:
  2137                           	opt stack 0
  2138                           wreg	equ	0xFE8
  2139                           postinc2	equ	0xFDE
  2140                           postdec2	equ	0xFDD
  2141                           fsr2h	equ	0xFDA
  2142                           fsr2l	equ	0xFD9
  2143                           status	equ	0xFD8
  2144                           
  2145 ;; *************** function ___asftmul *****************
  2146 ;; Defined at:
  2147 ;;		line 5 in file "C:\PRG\Microchip\xc8\v1.20\sources\pic18\asftmul.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  f1p             2   45[COMRAM] PTR float 
  2150 ;;		 -> exp@x(3), 
  2151 ;;  f2              3   47[COMRAM] float 
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;		None
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  3   45[COMRAM] float 
  2156 ;; Registers used:
  2157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2163 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;Total ram usage:        5 bytes
  2168 ;; Hardware stack levels used:    1
  2169 ;; Hardware stack levels required when called:    2
  2170 ;; This function calls:
  2171 ;;		___ftmul
  2172 ;; This function is called by:
  2173 ;;		_exp
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           	psect	text12
  2178  0020DC                     __ptext12:
  2179                           	opt stack 0
  2180  0020DC                     ___asftmul:
  2181                           	opt stack 25
  2182                           
  2183                           ;	Return value of ___asftmul is never used
  2184                           
  2185                           ;incstack = 0
  2186                           ;incstack = 0
  2187  0020DC  C02E  FFD9         	movff	___asftmul@f1p,fsr2l
  2188  0020E0  C02F  FFDA         	movff	___asftmul@f1p+1,fsr2h
  2189  0020E4  CFDE F01D          	movff	postinc2,?___ftmul
  2190  0020E8  CFDE F01E          	movff	postinc2,?___ftmul+1
  2191  0020EC  CFDD F01F          	movff	postdec2,?___ftmul+2
  2192  0020F0  C030  F020         	movff	___asftmul@f2,?___ftmul+3
  2193  0020F4  C031  F021         	movff	___asftmul@f2+1,?___ftmul+4
  2194  0020F8  C032  F022         	movff	___asftmul@f2+2,?___ftmul+5
  2195  0020FC  EC67  F00B         	call	___ftmul	;wreg free
  2196  002100  C02E  FFD9         	movff	___asftmul@f1p,fsr2l
  2197  002104  C02F  FFDA         	movff	___asftmul@f1p+1,fsr2h
  2198  002108  C01D  FFDE         	movff	?___ftmul,postinc2
  2199  00210C  C01E  FFDE         	movff	?___ftmul+1,postinc2
  2200  002110  C01F  FFDD         	movff	?___ftmul+2,postdec2
  2201  002114  52DD               	movf	postdec2,f,c
  2202  002116  0012               	return	
  2203  002118                     __end_of___asftmul:
  2204                           	opt stack 0
  2205                           wreg	equ	0xFE8
  2206                           postinc2	equ	0xFDE
  2207                           postdec2	equ	0xFDD
  2208                           fsr2h	equ	0xFDA
  2209                           fsr2l	equ	0xFD9
  2210                           status	equ	0xFD8
  2211                           
  2212 ;; *************** function ___ftdiv *****************
  2213 ;; Defined at:
  2214 ;;		line 50 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\ftdiv.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;  f1              3    8[COMRAM] float 
  2217 ;;  f2              3   11[COMRAM] float 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;  f3              3   20[COMRAM] float 
  2220 ;;  sign            1   24[COMRAM] unsigned char 
  2221 ;;  exp             1   23[COMRAM] unsigned char 
  2222 ;;  cntr            1   19[COMRAM] unsigned char 
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  3    8[COMRAM] float 
  2225 ;; Registers used:
  2226 ;;		wreg, status,2, status,0, cstack
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2232 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2234 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2235 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2236 ;;Total ram usage:       17 bytes
  2237 ;; Hardware stack levels used:    1
  2238 ;; Hardware stack levels required when called:    1
  2239 ;; This function calls:
  2240 ;;		___ftpack
  2241 ;; This function is called by:
  2242 ;;		_exp
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246                           	psect	text13
  2247  0017EA                     __ptext13:
  2248                           	opt stack 0
  2249  0017EA                     ___ftdiv:
  2250                           	opt stack 26
  2251                           
  2252                           ;incstack = 0
  2253                           ;incstack = 0
  2254  0017EA  0E0F               	movlw	15
  2255  0017EC  6E0F               	movwf	??___ftdiv& (0+255),c
  2256  0017EE  C009  F010         	movff	___ftdiv@f1,??___ftdiv+1
  2257  0017F2  C00A  F011         	movff	___ftdiv@f1+1,??___ftdiv+2
  2258  0017F6  C00B  F012         	movff	___ftdiv@f1+2,??___ftdiv+3
  2259  0017FA  280F               	incf	??___ftdiv,w,c
  2260  0017FC  6E13               	movwf	(??___ftdiv+4)& (0+255),c
  2261  0017FE  D004               	goto	u1010
  2262  001800                     u1015:
  2263  001800  90D8               	bcf	status,0,c
  2264  001802  3212               	rrcf	??___ftdiv+3,f,c
  2265  001804  3211               	rrcf	??___ftdiv+2,f,c
  2266  001806  3210               	rrcf	??___ftdiv+1,f,c
  2267  001808                     u1010:
  2268  001808  2E13               	decfsz	(??___ftdiv+4)& (0+255),f,c
  2269  00180A  D7FA               	goto	u1015
  2270  00180C  5010               	movf	??___ftdiv+1,w,c
  2271  00180E  6E18               	movwf	___ftdiv@exp,c
  2272  001810  6618               	tstfsz	___ftdiv@exp& (0+255),c
  2273  001812  D007               	goto	l1912
  2274  001814  0E00               	movlw	0
  2275  001816  6E09               	movwf	?___ftdiv,c
  2276  001818  0E00               	movlw	0
  2277  00181A  6E0A               	movwf	?___ftdiv+1,c
  2278  00181C  0E00               	movlw	0
  2279  00181E  6E0B               	movwf	?___ftdiv+2,c
  2280  001820  0012               	return	
  2281  001822                     l1912:
  2282  001822  0E0F               	movlw	15
  2283  001824  6E0F               	movwf	??___ftdiv& (0+255),c
  2284  001826  C00C  F010         	movff	___ftdiv@f2,??___ftdiv+1
  2285  00182A  C00D  F011         	movff	___ftdiv@f2+1,??___ftdiv+2
  2286  00182E  C00E  F012         	movff	___ftdiv@f2+2,??___ftdiv+3
  2287  001832  280F               	incf	??___ftdiv,w,c
  2288  001834  6E13               	movwf	(??___ftdiv+4)& (0+255),c
  2289  001836  D004               	goto	u1030
  2290  001838                     u1035:
  2291  001838  90D8               	bcf	status,0,c
  2292  00183A  3212               	rrcf	??___ftdiv+3,f,c
  2293  00183C  3211               	rrcf	??___ftdiv+2,f,c
  2294  00183E  3210               	rrcf	??___ftdiv+1,f,c
  2295  001840                     u1030:
  2296  001840  2E13               	decfsz	(??___ftdiv+4)& (0+255),f,c
  2297  001842  D7FA               	goto	u1035
  2298  001844  5010               	movf	??___ftdiv+1,w,c
  2299  001846  6E19               	movwf	___ftdiv@sign,c
  2300  001848  6619               	tstfsz	___ftdiv@sign& (0+255),c
  2301  00184A  D007               	goto	l1918
  2302  00184C  0E00               	movlw	0
  2303  00184E  6E09               	movwf	?___ftdiv,c
  2304  001850  0E00               	movlw	0
  2305  001852  6E0A               	movwf	?___ftdiv+1,c
  2306  001854  0E00               	movlw	0
  2307  001856  6E0B               	movwf	?___ftdiv+2,c
  2308  001858  0012               	return	
  2309  00185A                     l1918:
  2310  00185A  0E00               	movlw	0
  2311  00185C  6E15               	movwf	___ftdiv@f3,c
  2312  00185E  0E00               	movlw	0
  2313  001860  6E16               	movwf	___ftdiv@f3+1,c
  2314  001862  0E00               	movlw	0
  2315  001864  6E17               	movwf	___ftdiv@f3+2,c
  2316  001866  5019               	movf	___ftdiv@sign,w,c
  2317  001868  0F89               	addlw	137
  2318  00186A  5E18               	subwf	___ftdiv@exp,f,c
  2319  00186C  C00B  F019         	movff	___ftdiv@f1+2,___ftdiv@sign
  2320  001870  500E               	movf	(___ftdiv@f2+2)& (0+255),w,c
  2321  001872  1A19               	xorwf	___ftdiv@sign,f,c
  2322  001874  0E80               	movlw	128
  2323  001876  1619               	andwf	___ftdiv@sign,f,c
  2324  001878  8E0A               	bsf	___ftdiv@f1+1,7,c
  2325  00187A  0EFF               	movlw	255
  2326  00187C  1609               	andwf	___ftdiv@f1,f,c
  2327  00187E  0EFF               	movlw	255
  2328  001880  160A               	andwf	___ftdiv@f1+1,f,c
  2329  001882  0E00               	movlw	0
  2330  001884  160B               	andwf	___ftdiv@f1+2,f,c
  2331  001886  8E0D               	bsf	___ftdiv@f2+1,7,c
  2332  001888  0EFF               	movlw	255
  2333  00188A  160C               	andwf	___ftdiv@f2,f,c
  2334  00188C  0EFF               	movlw	255
  2335  00188E  160D               	andwf	___ftdiv@f2+1,f,c
  2336  001890  0E00               	movlw	0
  2337  001892  160E               	andwf	___ftdiv@f2+2,f,c
  2338  001894  6E0F               	movwf	??___ftdiv& (0+255),c
  2339  001896  0E18               	movlw	24
  2340  001898  6E14               	movwf	___ftdiv@cntr,c
  2341  00189A  500F               	movf	??___ftdiv& (0+255),w,c
  2342  00189C                     l398:
  2343  00189C  90D8               	bcf	status,0,c
  2344  00189E  3615               	rlcf	___ftdiv@f3,f,c
  2345  0018A0  3616               	rlcf	___ftdiv@f3+1,f,c
  2346  0018A2  3617               	rlcf	___ftdiv@f3+2,f,c
  2347  0018A4  500C               	movf	___ftdiv@f2,w,c
  2348  0018A6  5C09               	subwf	___ftdiv@f1,w,c
  2349  0018A8  500D               	movf	___ftdiv@f2+1,w,c
  2350  0018AA  580A               	subwfb	___ftdiv@f1+1,w,c
  2351  0018AC  500E               	movf	___ftdiv@f2+2,w,c
  2352  0018AE  580B               	subwfb	___ftdiv@f1+2,w,c
  2353  0018B0  A0D8               	btfss	status,0,c
  2354  0018B2  D007               	goto	l399
  2355  0018B4  500C               	movf	___ftdiv@f2,w,c
  2356  0018B6  5E09               	subwf	___ftdiv@f1,f,c
  2357  0018B8  500D               	movf	___ftdiv@f2+1,w,c
  2358  0018BA  5A0A               	subwfb	___ftdiv@f1+1,f,c
  2359  0018BC  500E               	movf	___ftdiv@f2+2,w,c
  2360  0018BE  5A0B               	subwfb	___ftdiv@f1+2,f,c
  2361  0018C0  8015               	bsf	___ftdiv@f3,0,c
  2362  0018C2                     l399:
  2363  0018C2  90D8               	bcf	status,0,c
  2364  0018C4  3609               	rlcf	___ftdiv@f1,f,c
  2365  0018C6  360A               	rlcf	___ftdiv@f1+1,f,c
  2366  0018C8  360B               	rlcf	___ftdiv@f1+2,f,c
  2367  0018CA  2E14               	decfsz	___ftdiv@cntr,f,c
  2368  0018CC  D7E7               	goto	l398
  2369  0018CE  C015  F001         	movff	___ftdiv@f3,?___ftpack
  2370  0018D2  C016  F002         	movff	___ftdiv@f3+1,?___ftpack+1
  2371  0018D6  C017  F003         	movff	___ftdiv@f3+2,?___ftpack+2
  2372  0018DA  C018  F004         	movff	___ftdiv@exp,?___ftpack+3
  2373  0018DE  C019  F005         	movff	___ftdiv@sign,?___ftpack+4
  2374  0018E2  ECCE  F00E         	call	___ftpack	;wreg free
  2375  0018E6  C003  F00B         	movff	?___ftpack+2,?___ftdiv+2
  2376  0018EA  C002  F00A         	movff	?___ftpack+1,?___ftdiv+1
  2377  0018EE  C001  F009         	movff	?___ftpack,?___ftdiv
  2378  0018F2  0012               	return	
  2379  0018F4                     __end_of___ftdiv:
  2380                           	opt stack 0
  2381                           wreg	equ	0xFE8
  2382                           postinc2	equ	0xFDE
  2383                           postdec2	equ	0xFDD
  2384                           fsr2h	equ	0xFDA
  2385                           fsr2l	equ	0xFD9
  2386                           status	equ	0xFD8
  2387                           
  2388 ;; *************** function _log *****************
  2389 ;; Defined at:
  2390 ;;		line 6 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\log.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;  x               3   74[COMRAM] float 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  exponent        2   77[COMRAM] int 
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  3   74[COMRAM] int 
  2397 ;; Registers used:
  2398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2404 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2405 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2407 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2408 ;;Total ram usage:        5 bytes
  2409 ;; Hardware stack levels used:    1
  2410 ;; Hardware stack levels required when called:    3
  2411 ;; This function calls:
  2412 ;;		___ftadd
  2413 ;;		___ftmul
  2414 ;;		___awtoft
  2415 ;;		_eval_poly
  2416 ;;		_frexp
  2417 ;; This function is called by:
  2418 ;;		_pow
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           	psect	text14
  2423  001594                     __ptext14:
  2424                           	opt stack 0
  2425  001594                     _log:
  2426                           	opt stack 25
  2427                           
  2428                           ;incstack = 0
  2429                           ;incstack = 0
  2430  001594  504D               	movf	log@x+2,w,c
  2431  001596  0A80               	xorlw	128
  2432  001598  0F80               	addlw	128
  2433  00159A  E105               	bnz	u1525
  2434  00159C  0E00               	movlw	0
  2435  00159E  5C4C               	subwf	log@x+1,w,c
  2436  0015A0  E102               	bnz	u1525
  2437  0015A2  0E00               	movlw	0
  2438  0015A4  5C4B               	subwf	log@x,w,c
  2439  0015A6                     u1525:
  2440  0015A6  B0D8               	btfsc	status,0,c
  2441  0015A8  D00E               	goto	l2224
  2442  0015AA  0E00               	movlw	0
  2443  0015AC  0100               	movlb	0	; () banked
  2444  0015AE  0100               	movlb	0	; () banked
  2445  0015B0  6F7D               	movwf	(_errno+1)& (0+255),b
  2446  0015B2  0E21               	movlw	33
  2447  0015B4  0100               	movlb	0	; () banked
  2448  0015B6  6F7C               	movwf	_errno& (0+255),b
  2449  0015B8  0E00               	movlw	0
  2450  0015BA  6E4B               	movwf	?_log,c
  2451  0015BC  0E00               	movlw	0
  2452  0015BE  6E4C               	movwf	?_log+1,c
  2453  0015C0  0E00               	movlw	0
  2454  0015C2  6E4D               	movwf	?_log+2,c
  2455  0015C4  0012               	return	
  2456  0015C6                     l2224:
  2457  0015C6  0E7F               	movlw	127
  2458  0015C8  144D               	andwf	log@x+2,w,c
  2459  0015CA  104C               	iorwf	log@x+1,w,c
  2460  0015CC  104B               	iorwf	log@x,w,c
  2461  0015CE  A4D8               	btfss	status,2,c
  2462  0015D0  D00E               	goto	l2230
  2463  0015D2  0E00               	movlw	0
  2464  0015D4  0100               	movlb	0	; () banked
  2465  0015D6  0100               	movlb	0	; () banked
  2466  0015D8  6F7D               	movwf	(_errno+1)& (0+255),b
  2467  0015DA  0E22               	movlw	34
  2468  0015DC  0100               	movlb	0	; () banked
  2469  0015DE  6F7C               	movwf	_errno& (0+255),b
  2470  0015E0  0E00               	movlw	0
  2471  0015E2  6E4B               	movwf	?_log,c
  2472  0015E4  0E00               	movlw	0
  2473  0015E6  6E4C               	movwf	?_log+1,c
  2474  0015E8  0E00               	movlw	0
  2475  0015EA  6E4D               	movwf	?_log+2,c
  2476  0015EC  0012               	return	
  2477  0015EE                     l2230:
  2478  0015EE  0E00               	movlw	0
  2479  0015F0  6E20               	movwf	?___ftmul+3,c
  2480  0015F2  0E00               	movlw	0
  2481  0015F4  6E21               	movwf	?___ftmul+4,c
  2482  0015F6  0E40               	movlw	64
  2483  0015F8  6E22               	movwf	?___ftmul+5,c
  2484  0015FA  0E00               	movlw	high log@exponent
  2485  0015FC  6E05               	movwf	?_frexp+4,c
  2486  0015FE  0E4E               	movlw	low log@exponent
  2487  001600  6E04               	movwf	?_frexp+3,c
  2488  001602  C04B  F001         	movff	log@x,?_frexp
  2489  001606  C04C  F002         	movff	log@x+1,?_frexp+1
  2490  00160A  C04D  F003         	movff	log@x+2,?_frexp+2
  2491  00160E  EC72  F00F         	call	_frexp	;wreg free
  2492  001612  C003  F01F         	movff	?_frexp+2,?___ftmul+2
  2493  001616  C002  F01E         	movff	?_frexp+1,?___ftmul+1
  2494  00161A  C001  F01D         	movff	?_frexp,?___ftmul
  2495  00161E  EC67  F00B         	call	___ftmul	;wreg free
  2496  001622  C01F  F030         	movff	?___ftmul+2,?___ftadd+2
  2497  001626  C01E  F02F         	movff	?___ftmul+1,?___ftadd+1
  2498  00162A  C01D  F02E         	movff	?___ftmul,?___ftadd
  2499  00162E  0E00               	movlw	0
  2500  001630  6E31               	movwf	?___ftadd+3,c
  2501  001632  0E80               	movlw	128
  2502  001634  6E32               	movwf	?___ftadd+4,c
  2503  001636  0EBF               	movlw	191
  2504  001638  6E33               	movwf	?___ftadd+5,c
  2505  00163A  EC10  F009         	call	___ftadd	;wreg free
  2506  00163E  C030  F04D         	movff	?___ftadd+2,log@x+2
  2507  001642  C02F  F04C         	movff	?___ftadd+1,log@x+1
  2508  001646  C02E  F04B         	movff	?___ftadd,log@x
  2509  00164A  064E               	decf	log@exponent,f,c
  2510  00164C  A0D8               	btfss	status,0,c
  2511  00164E  064F               	decf	log@exponent+1,f,c
  2512  001650  C04B  F03C         	movff	log@x,?_eval_poly
  2513  001654  C04C  F03D         	movff	log@x+1,?_eval_poly+1
  2514  001658  C04D  F03E         	movff	log@x+2,?_eval_poly+2
  2515  00165C  0E10               	movlw	high log@coeff
  2516  00165E  6E40               	movwf	?_eval_poly+4,c
  2517  001660  0E1E               	movlw	low log@coeff
  2518  001662  6E3F               	movwf	?_eval_poly+3,c
  2519  001664  0E00               	movlw	0
  2520  001666  6E42               	movwf	?_eval_poly+6,c
  2521  001668  0E08               	movlw	8
  2522  00166A  6E41               	movwf	?_eval_poly+5,c
  2523  00166C  ECE8  F00D         	call	_eval_poly	;wreg free
  2524  001670  C03E  F04D         	movff	?_eval_poly+2,log@x+2
  2525  001674  C03D  F04C         	movff	?_eval_poly+1,log@x+1
  2526  001678  C03C  F04B         	movff	?_eval_poly,log@x
  2527  00167C  0E72               	movlw	114
  2528  00167E  6E20               	movwf	?___ftmul+3,c
  2529  001680  0E31               	movlw	49
  2530  001682  6E21               	movwf	?___ftmul+4,c
  2531  001684  0E3F               	movlw	63
  2532  001686  6E22               	movwf	?___ftmul+5,c
  2533  001688  C04E  F018         	movff	log@exponent,?___awtoft
  2534  00168C  C04F  F019         	movff	log@exponent+1,?___awtoft+1
  2535  001690  EC2E  F010         	call	___awtoft	;wreg free
  2536  001694  C01A  F01F         	movff	?___awtoft+2,?___ftmul+2
  2537  001698  C019  F01E         	movff	?___awtoft+1,?___ftmul+1
  2538  00169C  C018  F01D         	movff	?___awtoft,?___ftmul
  2539  0016A0  EC67  F00B         	call	___ftmul	;wreg free
  2540  0016A4  C01F  F030         	movff	?___ftmul+2,?___ftadd+2
  2541  0016A8  C01E  F02F         	movff	?___ftmul+1,?___ftadd+1
  2542  0016AC  C01D  F02E         	movff	?___ftmul,?___ftadd
  2543  0016B0  C04B  F031         	movff	log@x,?___ftadd+3
  2544  0016B4  C04C  F032         	movff	log@x+1,?___ftadd+4
  2545  0016B8  C04D  F033         	movff	log@x+2,?___ftadd+5
  2546  0016BC  EC10  F009         	call	___ftadd	;wreg free
  2547  0016C0  C030  F04D         	movff	?___ftadd+2,?_log+2
  2548  0016C4  C02F  F04C         	movff	?___ftadd+1,?_log+1
  2549  0016C8  C02E  F04B         	movff	?___ftadd,?_log
  2550  0016CC  0012               	return	
  2551  0016CE                     __end_of_log:
  2552                           	opt stack 0
  2553                           wreg	equ	0xFE8
  2554                           postinc2	equ	0xFDE
  2555                           postdec2	equ	0xFDD
  2556                           fsr2h	equ	0xFDA
  2557                           fsr2l	equ	0xFD9
  2558                           status	equ	0xFD8
  2559                           
  2560 ;; *************** function _frexp *****************
  2561 ;; Defined at:
  2562 ;;		line 255 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\frexp.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  value           3    0[COMRAM] int 
  2565 ;;  eptr            2    3[COMRAM] PTR int 
  2566 ;;		 -> log@exponent(2), floor@expon(2), 
  2567 ;; Auto vars:     Size  Location     Type
  2568 ;;		None
  2569 ;; Return value:  Size  Location     Type
  2570 ;;                  3    0[COMRAM] PTR int 
  2571 ;; Registers used:
  2572 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2573 ;; Tracked objects:
  2574 ;;		On entry : 0/0
  2575 ;;		On exit  : 0/0
  2576 ;;		Unchanged: 0/0
  2577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2578 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2580 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2581 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2582 ;;Total ram usage:        8 bytes
  2583 ;; Hardware stack levels used:    1
  2584 ;; This function calls:
  2585 ;;		Nothing
  2586 ;; This function is called by:
  2587 ;;		_floor
  2588 ;;		_log
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           	psect	text15
  2593  001EE4                     __ptext15:
  2594                           	opt stack 0
  2595  001EE4                     _frexp:
  2596                           	opt stack 26
  2597                           
  2598                           ;incstack = 0
  2599                           ;incstack = 0
  2600  001EE4  0E7F               	movlw	127
  2601  001EE6  1403               	andwf	frexp@value+2,w,c
  2602  001EE8  1002               	iorwf	frexp@value+1,w,c
  2603  001EEA  1001               	iorwf	frexp@value,w,c
  2604  001EEC  A4D8               	btfss	status,2,c
  2605  001EEE  D00F               	goto	l1878
  2606  001EF0  C004  FFD9         	movff	frexp@eptr,fsr2l
  2607  001EF4  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  2608  001EF8  0E00               	movlw	0
  2609  001EFA  6EDE               	movwf	postinc2,c
  2610  001EFC  0E00               	movlw	0
  2611  001EFE  6EDD               	movwf	postdec2,c
  2612  001F00  0E00               	movlw	0
  2613  001F02  6E01               	movwf	?_frexp,c
  2614  001F04  0E00               	movlw	0
  2615  001F06  6E02               	movwf	?_frexp+1,c
  2616  001F08  0E00               	movlw	0
  2617  001F0A  6E03               	movwf	?_frexp+2,c
  2618  001F0C  0012               	return	
  2619  001F0E                     l1878:
  2620  001F0E  5003               	movf	frexp@value+2,w,c
  2621  001F10  0B7F               	andlw	127
  2622  001F12  6E06               	movwf	??_frexp& (0+255),c
  2623  001F14  90D8               	bcf	status,0,c
  2624  001F16  3406               	rlcf	??_frexp,w,c
  2625  001F18  6E07               	movwf	(??_frexp+1)& (0+255),c
  2626  001F1A  6A08               	clrf	(??_frexp+2)& (0+255),c
  2627  001F1C  3608               	rlcf	(??_frexp+2)& (0+255),f,c
  2628  001F1E  C004  FFD9         	movff	frexp@eptr,fsr2l
  2629  001F22  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  2630  001F26  C007  FFDE         	movff	??_frexp+1,postinc2
  2631  001F2A  C008  FFDD         	movff	??_frexp+2,postdec2
  2632  001F2E  3402               	rlcf	frexp@value+1,w,c
  2633  001F30  36E8               	rlcf	wreg,f,c
  2634  001F32  0B01               	andlw	1
  2635  001F34  6E06               	movwf	??_frexp& (0+255),c
  2636  001F36  5006               	movf	??_frexp,w,c
  2637  001F38  C004  FFD9         	movff	frexp@eptr,fsr2l
  2638  001F3C  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  2639  001F40  12DE               	iorwf	postinc2,f,c
  2640  001F42  0E00               	movlw	0
  2641  001F44  12DD               	iorwf	postdec2,f,c
  2642  001F46  C004  FFD9         	movff	frexp@eptr,fsr2l
  2643  001F4A  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  2644  001F4E  0E82               	movlw	130
  2645  001F50  26DE               	addwf	postinc2,f,c
  2646  001F52  0EFF               	movlw	255
  2647  001F54  22DD               	addwfc	postdec2,f,c
  2648  001F56  8003               	bsf	frexp@value+2,0,c
  2649  001F58  8203               	bsf	frexp@value+2,1,c
  2650  001F5A  8403               	bsf	frexp@value+2,2,c
  2651  001F5C  8603               	bsf	frexp@value+2,3,c
  2652  001F5E  8803               	bsf	frexp@value+2,4,c
  2653  001F60  8A03               	bsf	frexp@value+2,5,c
  2654  001F62  9C03               	bcf	frexp@value+2,6,c
  2655  001F64  9E02               	bcf	frexp@value+1,7,c
  2656  001F66  C001  F001         	movff	frexp@value,?_frexp
  2657  001F6A  C002  F002         	movff	frexp@value+1,?_frexp+1
  2658  001F6E  C003  F003         	movff	frexp@value+2,?_frexp+2
  2659  001F72  0012               	return	
  2660  001F74                     __end_of_frexp:
  2661                           	opt stack 0
  2662                           wreg	equ	0xFE8
  2663                           postinc2	equ	0xFDE
  2664                           postdec2	equ	0xFDD
  2665                           fsr2h	equ	0xFDA
  2666                           fsr2l	equ	0xFD9
  2667                           status	equ	0xFD8
  2668                           
  2669 ;; *************** function _eval_poly *****************
  2670 ;; Defined at:
  2671 ;;		line 5 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\evalpoly.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  x               3   59[COMRAM] PTR int 
  2674 ;;  d               2   62[COMRAM] PTR const 
  2675 ;;		 -> log@coeff(27), exp@coeff(30), 
  2676 ;;  n               2   64[COMRAM] int 
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;  res             3   71[COMRAM] int 
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  3   59[COMRAM] int 
  2681 ;; Registers used:
  2682 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2688 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2689 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2690 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2691 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2692 ;;Total ram usage:       15 bytes
  2693 ;; Hardware stack levels used:    1
  2694 ;; Hardware stack levels required when called:    2
  2695 ;; This function calls:
  2696 ;;		___ftadd
  2697 ;;		___ftmul
  2698 ;;		___wmul
  2699 ;; This function is called by:
  2700 ;;		_exp
  2701 ;;		_log
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text16
  2706  001BD0                     __ptext16:
  2707                           	opt stack 0
  2708  001BD0                     _eval_poly:
  2709                           	opt stack 25
  2710                           
  2711                           ;incstack = 0
  2712                           ;incstack = 0
  2713  001BD0  C041  F001         	movff	eval_poly@n,?___wmul
  2714  001BD4  C042  F002         	movff	eval_poly@n+1,?___wmul+1
  2715  001BD8  0E00               	movlw	0
  2716  001BDA  6E04               	movwf	?___wmul+3,c
  2717  001BDC  0E03               	movlw	3
  2718  001BDE  6E03               	movwf	?___wmul+2,c
  2719  001BE0  EC8C  F010         	call	___wmul	;wreg free
  2720  001BE4  5001               	movf	?___wmul,w,c
  2721  001BE6  243F               	addwf	eval_poly@d,w,c
  2722  001BE8  6E43               	movwf	??_eval_poly& (0+255),c
  2723  001BEA  5002               	movf	?___wmul+1,w,c
  2724  001BEC  2040               	addwfc	eval_poly@d+1,w,c
  2725  001BEE  6E44               	movwf	(??_eval_poly+1)& (0+255),c
  2726  001BF0  C043  FFF6         	movff	??_eval_poly,tblptrl
  2727  001BF4  C044  FFF7         	movff	??_eval_poly+1,tblptrh
  2728  001BF8  0E00               	movlw	low (__mediumconst shr (0+16))
  2729  001BFA  6EF8               	movwf	tblptru,c
  2730  001BFC  0009               	tblrd		*+
  2731  001BFE  CFF5 F045          	movff	tablat,??_eval_poly+2
  2732  001C02  0009               	tblrd		*+
  2733  001C04  CFF5 F046          	movff	tablat,??_eval_poly+3
  2734  001C08  0009               	tblrd		*+
  2735  001C0A  CFF5 F047          	movff	tablat,??_eval_poly+4
  2736  001C0E  C047  F04A         	movff	??_eval_poly+4,eval_poly@res+2
  2737  001C12  C046  F049         	movff	??_eval_poly+3,eval_poly@res+1
  2738  001C16  C045  F048         	movff	??_eval_poly+2,eval_poly@res
  2739  001C1A  D044               	goto	l2212
  2740  001C1C                     l2210:
  2741  001C1C  C048  F020         	movff	eval_poly@res,?___ftmul+3
  2742  001C20  C049  F021         	movff	eval_poly@res+1,?___ftmul+4
  2743  001C24  C04A  F022         	movff	eval_poly@res+2,?___ftmul+5
  2744  001C28  C03C  F01D         	movff	eval_poly@x,?___ftmul
  2745  001C2C  C03D  F01E         	movff	eval_poly@x+1,?___ftmul+1
  2746  001C30  C03E  F01F         	movff	eval_poly@x+2,?___ftmul+2
  2747  001C34  EC67  F00B         	call	___ftmul	;wreg free
  2748  001C38  C01F  F030         	movff	?___ftmul+2,?___ftadd+2
  2749  001C3C  C01E  F02F         	movff	?___ftmul+1,?___ftadd+1
  2750  001C40  C01D  F02E         	movff	?___ftmul,?___ftadd
  2751  001C44  0E00               	movlw	0
  2752  001C46  6E04               	movwf	?___wmul+3,c
  2753  001C48  0E03               	movlw	3
  2754  001C4A  6E03               	movwf	?___wmul+2,c
  2755  001C4C  0641               	decf	eval_poly@n,f,c
  2756  001C4E  A0D8               	btfss	status,0,c
  2757  001C50  0642               	decf	eval_poly@n+1,f,c
  2758  001C52  C041  F001         	movff	eval_poly@n,?___wmul
  2759  001C56  C042  F002         	movff	eval_poly@n+1,?___wmul+1
  2760  001C5A  EC8C  F010         	call	___wmul	;wreg free
  2761  001C5E  5001               	movf	?___wmul,w,c
  2762  001C60  243F               	addwf	eval_poly@d,w,c
  2763  001C62  6E43               	movwf	??_eval_poly& (0+255),c
  2764  001C64  5002               	movf	?___wmul+1,w,c
  2765  001C66  2040               	addwfc	eval_poly@d+1,w,c
  2766  001C68  6E44               	movwf	(??_eval_poly+1)& (0+255),c
  2767  001C6A  C043  FFF6         	movff	??_eval_poly,tblptrl
  2768  001C6E  C044  FFF7         	movff	??_eval_poly+1,tblptrh
  2769  001C72  0E00               	movlw	low (__mediumconst shr (0+16))
  2770  001C74  6EF8               	movwf	tblptru,c
  2771  001C76  0009               	tblrd		*+
  2772  001C78  CFF5 F045          	movff	tablat,??_eval_poly+2
  2773  001C7C  0009               	tblrd		*+
  2774  001C7E  CFF5 F046          	movff	tablat,??_eval_poly+3
  2775  001C82  0009               	tblrd		*+
  2776  001C84  CFF5 F047          	movff	tablat,??_eval_poly+4
  2777  001C88  C047  F033         	movff	??_eval_poly+4,?___ftadd+5
  2778  001C8C  C046  F032         	movff	??_eval_poly+3,?___ftadd+4
  2779  001C90  C045  F031         	movff	??_eval_poly+2,?___ftadd+3
  2780  001C94  EC10  F009         	call	___ftadd	;wreg free
  2781  001C98  C030  F04A         	movff	?___ftadd+2,eval_poly@res+2
  2782  001C9C  C02F  F049         	movff	?___ftadd+1,eval_poly@res+1
  2783  001CA0  C02E  F048         	movff	?___ftadd,eval_poly@res
  2784  001CA4                     l2212:
  2785  001CA4  5042               	movf	eval_poly@n+1,w,c
  2786  001CA6  1041               	iorwf	eval_poly@n,w,c
  2787  001CA8  A4D8               	btfss	status,2,c
  2788  001CAA  D7B8               	goto	l2210
  2789  001CAC  C048  F03C         	movff	eval_poly@res,?_eval_poly
  2790  001CB0  C049  F03D         	movff	eval_poly@res+1,?_eval_poly+1
  2791  001CB4  C04A  F03E         	movff	eval_poly@res+2,?_eval_poly+2
  2792  001CB8  0012               	return	
  2793  001CBA                     __end_of_eval_poly:
  2794                           	opt stack 0
  2795                           tblptru	equ	0xFF8
  2796                           tblptrh	equ	0xFF7
  2797                           tblptrl	equ	0xFF6
  2798                           tablat	equ	0xFF5
  2799                           wreg	equ	0xFE8
  2800                           postinc2	equ	0xFDE
  2801                           postdec2	equ	0xFDD
  2802                           fsr2h	equ	0xFDA
  2803                           fsr2l	equ	0xFD9
  2804                           status	equ	0xFD8
  2805                           
  2806 ;; *************** function ___ftmul *****************
  2807 ;; Defined at:
  2808 ;;		line 52 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\ftmul.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;  f1              3   28[COMRAM] float 
  2811 ;;  f2              3   31[COMRAM] float 
  2812 ;; Auto vars:     Size  Location     Type
  2813 ;;  f3_as_produc    3   40[COMRAM] unsigned um
  2814 ;;  sign            1   44[COMRAM] unsigned char 
  2815 ;;  cntr            1   43[COMRAM] unsigned char 
  2816 ;;  exp             1   39[COMRAM] unsigned char 
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  3   28[COMRAM] float 
  2819 ;; Registers used:
  2820 ;;		wreg, status,2, status,0, cstack
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2826 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2829 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2830 ;;Total ram usage:       17 bytes
  2831 ;; Hardware stack levels used:    1
  2832 ;; Hardware stack levels required when called:    1
  2833 ;; This function calls:
  2834 ;;		___ftpack
  2835 ;; This function is called by:
  2836 ;;		___asftmul
  2837 ;;		_pow
  2838 ;;		_log
  2839 ;;		_eval_poly
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           	psect	text17
  2844  0016CE                     __ptext17:
  2845                           	opt stack 0
  2846  0016CE                     ___ftmul:
  2847                           	opt stack 25
  2848                           
  2849                           ;incstack = 0
  2850                           ;incstack = 0
  2851  0016CE  0E0F               	movlw	15
  2852  0016D0  6E23               	movwf	??___ftmul& (0+255),c
  2853  0016D2  C01D  F024         	movff	___ftmul@f1,??___ftmul+1
  2854  0016D6  C01E  F025         	movff	___ftmul@f1+1,??___ftmul+2
  2855  0016DA  C01F  F026         	movff	___ftmul@f1+2,??___ftmul+3
  2856  0016DE  2823               	incf	??___ftmul,w,c
  2857  0016E0  6E27               	movwf	(??___ftmul+4)& (0+255),c
  2858  0016E2  D004               	goto	u1410
  2859  0016E4                     u1415:
  2860  0016E4  90D8               	bcf	status,0,c
  2861  0016E6  3226               	rrcf	??___ftmul+3,f,c
  2862  0016E8  3225               	rrcf	??___ftmul+2,f,c
  2863  0016EA  3224               	rrcf	??___ftmul+1,f,c
  2864  0016EC                     u1410:
  2865  0016EC  2E27               	decfsz	(??___ftmul+4)& (0+255),f,c
  2866  0016EE  D7FA               	goto	u1415
  2867  0016F0  5024               	movf	??___ftmul+1,w,c
  2868  0016F2  6E28               	movwf	___ftmul@exp,c
  2869  0016F4  6628               	tstfsz	___ftmul@exp& (0+255),c
  2870  0016F6  D007               	goto	l2132
  2871  0016F8  0E00               	movlw	0
  2872  0016FA  6E1D               	movwf	?___ftmul,c
  2873  0016FC  0E00               	movlw	0
  2874  0016FE  6E1E               	movwf	?___ftmul+1,c
  2875  001700  0E00               	movlw	0
  2876  001702  6E1F               	movwf	?___ftmul+2,c
  2877  001704  0012               	return	
  2878  001706                     l2132:
  2879  001706  0E0F               	movlw	15
  2880  001708  6E23               	movwf	??___ftmul& (0+255),c
  2881  00170A  C020  F024         	movff	___ftmul@f2,??___ftmul+1
  2882  00170E  C021  F025         	movff	___ftmul@f2+1,??___ftmul+2
  2883  001712  C022  F026         	movff	___ftmul@f2+2,??___ftmul+3
  2884  001716  2823               	incf	??___ftmul,w,c
  2885  001718  6E27               	movwf	(??___ftmul+4)& (0+255),c
  2886  00171A  D004               	goto	u1430
  2887  00171C                     u1435:
  2888  00171C  90D8               	bcf	status,0,c
  2889  00171E  3226               	rrcf	??___ftmul+3,f,c
  2890  001720  3225               	rrcf	??___ftmul+2,f,c
  2891  001722  3224               	rrcf	??___ftmul+1,f,c
  2892  001724                     u1430:
  2893  001724  2E27               	decfsz	(??___ftmul+4)& (0+255),f,c
  2894  001726  D7FA               	goto	u1435
  2895  001728  5024               	movf	??___ftmul+1,w,c
  2896  00172A  6E2D               	movwf	___ftmul@sign,c
  2897  00172C  662D               	tstfsz	___ftmul@sign& (0+255),c
  2898  00172E  D007               	goto	l2138
  2899  001730  0E00               	movlw	0
  2900  001732  6E1D               	movwf	?___ftmul,c
  2901  001734  0E00               	movlw	0
  2902  001736  6E1E               	movwf	?___ftmul+1,c
  2903  001738  0E00               	movlw	0
  2904  00173A  6E1F               	movwf	?___ftmul+2,c
  2905  00173C  0012               	return	
  2906  00173E                     l2138:
  2907  00173E  502D               	movf	___ftmul@sign,w,c
  2908  001740  0F7B               	addlw	123
  2909  001742  2628               	addwf	___ftmul@exp,f,c
  2910  001744  C01F  F02D         	movff	___ftmul@f1+2,___ftmul@sign
  2911  001748  5022               	movf	(___ftmul@f2+2)& (0+255),w,c
  2912  00174A  1A2D               	xorwf	___ftmul@sign,f,c
  2913  00174C  0E80               	movlw	128
  2914  00174E  162D               	andwf	___ftmul@sign,f,c
  2915  001750  8E1E               	bsf	___ftmul@f1+1,7,c
  2916  001752  8E21               	bsf	___ftmul@f2+1,7,c
  2917  001754  0EFF               	movlw	255
  2918  001756  1620               	andwf	___ftmul@f2,f,c
  2919  001758  0EFF               	movlw	255
  2920  00175A  1621               	andwf	___ftmul@f2+1,f,c
  2921  00175C  0E00               	movlw	0
  2922  00175E  1622               	andwf	___ftmul@f2+2,f,c
  2923  001760  0E00               	movlw	0
  2924  001762  6E29               	movwf	___ftmul@f3_as_product,c
  2925  001764  0E00               	movlw	0
  2926  001766  6E2A               	movwf	___ftmul@f3_as_product+1,c
  2927  001768  0E00               	movlw	0
  2928  00176A  6E2B               	movwf	___ftmul@f3_as_product+2,c
  2929  00176C  6E23               	movwf	??___ftmul& (0+255),c
  2930  00176E  0E07               	movlw	7
  2931  001770  6E2C               	movwf	___ftmul@cntr,c
  2932  001772  5023               	movf	??___ftmul& (0+255),w,c
  2933  001774                     l2152:
  2934  001774  A01D               	btfss	___ftmul@f1,0,c
  2935  001776  D006               	goto	l2156
  2936  001778  5020               	movf	___ftmul@f2,w,c
  2937  00177A  2629               	addwf	___ftmul@f3_as_product,f,c
  2938  00177C  5021               	movf	___ftmul@f2+1,w,c
  2939  00177E  222A               	addwfc	___ftmul@f3_as_product+1,f,c
  2940  001780  5022               	movf	___ftmul@f2+2,w,c
  2941  001782  222B               	addwfc	___ftmul@f3_as_product+2,f,c
  2942  001784                     l2156:
  2943  001784  90D8               	bcf	status,0,c
  2944  001786  321F               	rrcf	___ftmul@f1+2,f,c
  2945  001788  321E               	rrcf	___ftmul@f1+1,f,c
  2946  00178A  321D               	rrcf	___ftmul@f1,f,c
  2947  00178C  90D8               	bcf	status,0,c
  2948  00178E  3620               	rlcf	___ftmul@f2,f,c
  2949  001790  3621               	rlcf	___ftmul@f2+1,f,c
  2950  001792  3622               	rlcf	___ftmul@f2+2,f,c
  2951  001794  2E2C               	decfsz	___ftmul@cntr,f,c
  2952  001796  D7EE               	goto	l2152
  2953  001798  6E23               	movwf	??___ftmul& (0+255),c
  2954  00179A  0E09               	movlw	9
  2955  00179C  6E2C               	movwf	___ftmul@cntr,c
  2956  00179E  5023               	movf	??___ftmul& (0+255),w,c
  2957  0017A0                     l2162:
  2958  0017A0  A01D               	btfss	___ftmul@f1,0,c
  2959  0017A2  D006               	goto	l2166
  2960  0017A4  5020               	movf	___ftmul@f2,w,c
  2961  0017A6  2629               	addwf	___ftmul@f3_as_product,f,c
  2962  0017A8  5021               	movf	___ftmul@f2+1,w,c
  2963  0017AA  222A               	addwfc	___ftmul@f3_as_product+1,f,c
  2964  0017AC  5022               	movf	___ftmul@f2+2,w,c
  2965  0017AE  222B               	addwfc	___ftmul@f3_as_product+2,f,c
  2966  0017B0                     l2166:
  2967  0017B0  90D8               	bcf	status,0,c
  2968  0017B2  321F               	rrcf	___ftmul@f1+2,f,c
  2969  0017B4  321E               	rrcf	___ftmul@f1+1,f,c
  2970  0017B6  321D               	rrcf	___ftmul@f1,f,c
  2971  0017B8  90D8               	bcf	status,0,c
  2972  0017BA  322B               	rrcf	___ftmul@f3_as_product+2,f,c
  2973  0017BC  322A               	rrcf	___ftmul@f3_as_product+1,f,c
  2974  0017BE  3229               	rrcf	___ftmul@f3_as_product,f,c
  2975  0017C0  2E2C               	decfsz	___ftmul@cntr,f,c
  2976  0017C2  D7EE               	goto	l2162
  2977  0017C4  C029  F001         	movff	___ftmul@f3_as_product,?___ftpack
  2978  0017C8  C02A  F002         	movff	___ftmul@f3_as_product+1,?___ftpack+1
  2979  0017CC  C02B  F003         	movff	___ftmul@f3_as_product+2,?___ftpack+2
  2980  0017D0  C028  F004         	movff	___ftmul@exp,?___ftpack+3
  2981  0017D4  C02D  F005         	movff	___ftmul@sign,?___ftpack+4
  2982  0017D8  ECCE  F00E         	call	___ftpack	;wreg free
  2983  0017DC  C003  F01F         	movff	?___ftpack+2,?___ftmul+2
  2984  0017E0  C002  F01E         	movff	?___ftpack+1,?___ftmul+1
  2985  0017E4  C001  F01D         	movff	?___ftpack,?___ftmul
  2986  0017E8  0012               	return	
  2987  0017EA                     __end_of___ftmul:
  2988                           	opt stack 0
  2989                           tblptru	equ	0xFF8
  2990                           tblptrh	equ	0xFF7
  2991                           tblptrl	equ	0xFF6
  2992                           tablat	equ	0xFF5
  2993                           wreg	equ	0xFE8
  2994                           postinc2	equ	0xFDE
  2995                           postdec2	equ	0xFDD
  2996                           fsr2h	equ	0xFDA
  2997                           fsr2l	equ	0xFD9
  2998                           status	equ	0xFD8
  2999                           
  3000 ;; *************** function ___ftadd *****************
  3001 ;; Defined at:
  3002 ;;		line 87 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\ftadd.c"
  3003 ;; Parameters:    Size  Location     Type
  3004 ;;  f1              3   45[COMRAM] float 
  3005 ;;  f2              3   48[COMRAM] float 
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;  exp1            1   58[COMRAM] unsigned char 
  3008 ;;  exp2            1   57[COMRAM] unsigned char 
  3009 ;;  sign            1   56[COMRAM] unsigned char 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  3   45[COMRAM] float 
  3012 ;; Registers used:
  3013 ;;		wreg, status,2, status,0, cstack
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3019 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;Total ram usage:       14 bytes
  3024 ;; Hardware stack levels used:    1
  3025 ;; Hardware stack levels required when called:    1
  3026 ;; This function calls:
  3027 ;;		___ftpack
  3028 ;; This function is called by:
  3029 ;;		___ftsub
  3030 ;;		_floor
  3031 ;;		_log
  3032 ;;		_eval_poly
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           	psect	text18
  3037  001220                     __ptext18:
  3038                           	opt stack 0
  3039  001220                     ___ftadd:
  3040                           	opt stack 25
  3041                           
  3042                           ;incstack = 0
  3043                           ;incstack = 0
  3044  001220  0E0F               	movlw	15
  3045  001222  6E34               	movwf	??___ftadd& (0+255),c
  3046  001224  C02E  F035         	movff	___ftadd@f1,??___ftadd+1
  3047  001228  C02F  F036         	movff	___ftadd@f1+1,??___ftadd+2
  3048  00122C  C030  F037         	movff	___ftadd@f1+2,??___ftadd+3
  3049  001230  2834               	incf	??___ftadd,w,c
  3050  001232  6E38               	movwf	(??___ftadd+4)& (0+255),c
  3051  001234  D004               	goto	u1200
  3052  001236                     u1205:
  3053  001236  90D8               	bcf	status,0,c
  3054  001238  3237               	rrcf	??___ftadd+3,f,c
  3055  00123A  3236               	rrcf	??___ftadd+2,f,c
  3056  00123C  3235               	rrcf	??___ftadd+1,f,c
  3057  00123E                     u1200:
  3058  00123E  2E38               	decfsz	(??___ftadd+4)& (0+255),f,c
  3059  001240  D7FA               	goto	u1205
  3060  001242  5035               	movf	??___ftadd+1,w,c
  3061  001244  6E3B               	movwf	___ftadd@exp1,c
  3062  001246  0E0F               	movlw	15
  3063  001248  6E34               	movwf	??___ftadd& (0+255),c
  3064  00124A  C031  F035         	movff	___ftadd@f2,??___ftadd+1
  3065  00124E  C032  F036         	movff	___ftadd@f2+1,??___ftadd+2
  3066  001252  C033  F037         	movff	___ftadd@f2+2,??___ftadd+3
  3067  001256  2834               	incf	??___ftadd,w,c
  3068  001258  6E38               	movwf	(??___ftadd+4)& (0+255),c
  3069  00125A  D004               	goto	u1210
  3070  00125C                     u1215:
  3071  00125C  90D8               	bcf	status,0,c
  3072  00125E  3237               	rrcf	??___ftadd+3,f,c
  3073  001260  3236               	rrcf	??___ftadd+2,f,c
  3074  001262  3235               	rrcf	??___ftadd+1,f,c
  3075  001264                     u1210:
  3076  001264  2E38               	decfsz	(??___ftadd+4)& (0+255),f,c
  3077  001266  D7FA               	goto	u1215
  3078  001268  5035               	movf	??___ftadd+1,w,c
  3079  00126A  6E3A               	movwf	___ftadd@exp2,c
  3080  00126C  503B               	movf	___ftadd@exp1,w,c
  3081  00126E  B4D8               	btfsc	status,2,c
  3082  001270  D00B               	goto	l364
  3083  001272  503A               	movf	___ftadd@exp2,w,c
  3084  001274  603B               	cpfslt	___ftadd@exp1,c
  3085  001276  D00F               	goto	l2064
  3086  001278  503B               	movf	___ftadd@exp1,w,c
  3087  00127A  0800               	sublw	0
  3088  00127C  243A               	addwf	___ftadd@exp2,w,c
  3089  00127E  6E34               	movwf	??___ftadd& (0+255),c
  3090  001280  0E19               	movlw	25
  3091  001282  5C34               	subwf	??___ftadd,w,c
  3092  001284  A0D8               	btfss	status,0,c
  3093  001286  D007               	goto	l2064
  3094  001288                     l364:
  3095  001288  C031  F02E         	movff	___ftadd@f2,?___ftadd
  3096  00128C  C032  F02F         	movff	___ftadd@f2+1,?___ftadd+1
  3097  001290  C033  F030         	movff	___ftadd@f2+2,?___ftadd+2
  3098  001294  0012               	return	
  3099  001296                     l2064:
  3100  001296  503A               	movf	___ftadd@exp2,w,c
  3101  001298  B4D8               	btfsc	status,2,c
  3102  00129A  D00B               	goto	l368
  3103  00129C  503B               	movf	___ftadd@exp1,w,c
  3104  00129E  603A               	cpfslt	___ftadd@exp2,c
  3105  0012A0  D00F               	goto	l2070
  3106  0012A2  503A               	movf	___ftadd@exp2,w,c
  3107  0012A4  0800               	sublw	0
  3108  0012A6  243B               	addwf	___ftadd@exp1,w,c
  3109  0012A8  6E34               	movwf	??___ftadd& (0+255),c
  3110  0012AA  0E19               	movlw	25
  3111  0012AC  5C34               	subwf	??___ftadd,w,c
  3112  0012AE  A0D8               	btfss	status,0,c
  3113  0012B0  D007               	goto	l2070
  3114  0012B2                     l368:
  3115  0012B2  C02E  F02E         	movff	___ftadd@f1,?___ftadd
  3116  0012B6  C02F  F02F         	movff	___ftadd@f1+1,?___ftadd+1
  3117  0012BA  C030  F030         	movff	___ftadd@f1+2,?___ftadd+2
  3118  0012BE  0012               	return	
  3119  0012C0                     l2070:
  3120  0012C0  6E34               	movwf	??___ftadd& (0+255),c
  3121  0012C2  0E06               	movlw	6
  3122  0012C4  6E39               	movwf	___ftadd@sign,c
  3123  0012C6  5034               	movf	??___ftadd& (0+255),w,c
  3124  0012C8  BE30               	btfsc	___ftadd@f1+2,7,c
  3125  0012CA  8E39               	bsf	___ftadd@sign,7,c
  3126  0012CC  BE33               	btfsc	___ftadd@f2+2,7,c
  3127  0012CE  8C39               	bsf	___ftadd@sign,6,c
  3128  0012D0  8E2F               	bsf	___ftadd@f1+1,7,c
  3129  0012D2  0EFF               	movlw	255
  3130  0012D4  162E               	andwf	___ftadd@f1,f,c
  3131  0012D6  0EFF               	movlw	255
  3132  0012D8  162F               	andwf	___ftadd@f1+1,f,c
  3133  0012DA  0E00               	movlw	0
  3134  0012DC  1630               	andwf	___ftadd@f1+2,f,c
  3135  0012DE  8E32               	bsf	___ftadd@f2+1,7,c
  3136  0012E0  0EFF               	movlw	255
  3137  0012E2  1631               	andwf	___ftadd@f2,f,c
  3138  0012E4  0EFF               	movlw	255
  3139  0012E6  1632               	andwf	___ftadd@f2+1,f,c
  3140  0012E8  0E00               	movlw	0
  3141  0012EA  1633               	andwf	___ftadd@f2+2,f,c
  3142  0012EC  503A               	movf	___ftadd@exp2,w,c
  3143  0012EE  603B               	cpfslt	___ftadd@exp1,c
  3144  0012F0  D018               	goto	l2096
  3145  0012F2                     l2086:
  3146  0012F2  90D8               	bcf	status,0,c
  3147  0012F4  3631               	rlcf	___ftadd@f2,f,c
  3148  0012F6  3632               	rlcf	___ftadd@f2+1,f,c
  3149  0012F8  3633               	rlcf	___ftadd@f2+2,f,c
  3150  0012FA  063A               	decf	___ftadd@exp2,f,c
  3151  0012FC  503A               	movf	___ftadd@exp2,w,c
  3152  0012FE  183B               	xorwf	___ftadd@exp1,w,c
  3153  001300  B4D8               	btfsc	status,2,c
  3154  001302  D00B               	goto	l2094
  3155  001304  0639               	decf	___ftadd@sign,f,c
  3156  001306  5039               	movf	___ftadd@sign& (0+255),w,c
  3157  001308  0B07               	andlw	7
  3158  00130A  B4D8               	btfsc	status,2,c
  3159  00130C  D006               	goto	l2094
  3160  00130E  D7F1               	goto	l2086
  3161  001310                     l2092:
  3162  001310  90D8               	bcf	status,0,c
  3163  001312  3230               	rrcf	___ftadd@f1+2,f,c
  3164  001314  322F               	rrcf	___ftadd@f1+1,f,c
  3165  001316  322E               	rrcf	___ftadd@f1,f,c
  3166  001318  2A3B               	incf	___ftadd@exp1,f,c
  3167  00131A                     l2094:
  3168  00131A  503A               	movf	___ftadd@exp2,w,c
  3169  00131C  623B               	cpfseq	___ftadd@exp1,c
  3170  00131E  D7F8               	goto	l2092
  3171  001320  D01A               	goto	l379
  3172  001322                     l2096:
  3173  001322  503B               	movf	___ftadd@exp1,w,c
  3174  001324  603A               	cpfslt	___ftadd@exp2,c
  3175  001326  D017               	goto	l379
  3176  001328                     l2098:
  3177  001328  90D8               	bcf	status,0,c
  3178  00132A  362E               	rlcf	___ftadd@f1,f,c
  3179  00132C  362F               	rlcf	___ftadd@f1+1,f,c
  3180  00132E  3630               	rlcf	___ftadd@f1+2,f,c
  3181  001330  063B               	decf	___ftadd@exp1,f,c
  3182  001332  503A               	movf	___ftadd@exp2,w,c
  3183  001334  183B               	xorwf	___ftadd@exp1,w,c
  3184  001336  B4D8               	btfsc	status,2,c
  3185  001338  D00B               	goto	l2106
  3186  00133A  0639               	decf	___ftadd@sign,f,c
  3187  00133C  5039               	movf	___ftadd@sign& (0+255),w,c
  3188  00133E  0B07               	andlw	7
  3189  001340  B4D8               	btfsc	status,2,c
  3190  001342  D006               	goto	l2106
  3191  001344  D7F1               	goto	l2098
  3192  001346                     l2104:
  3193  001346  90D8               	bcf	status,0,c
  3194  001348  3233               	rrcf	___ftadd@f2+2,f,c
  3195  00134A  3232               	rrcf	___ftadd@f2+1,f,c
  3196  00134C  3231               	rrcf	___ftadd@f2,f,c
  3197  00134E  2A3A               	incf	___ftadd@exp2,f,c
  3198  001350                     l2106:
  3199  001350  503A               	movf	___ftadd@exp2,w,c
  3200  001352  623B               	cpfseq	___ftadd@exp1,c
  3201  001354  D7F8               	goto	l2104
  3202  001356                     l379:
  3203  001356  AE39               	btfss	___ftadd@sign,7,c
  3204  001358  D00C               	goto	l388
  3205  00135A  0EFF               	movlw	255
  3206  00135C  1A2E               	xorwf	___ftadd@f1,f,c
  3207  00135E  0EFF               	movlw	255
  3208  001360  1A2F               	xorwf	___ftadd@f1+1,f,c
  3209  001362  0EFF               	movlw	255
  3210  001364  1A30               	xorwf	___ftadd@f1+2,f,c
  3211  001366  0E01               	movlw	1
  3212  001368  262E               	addwf	___ftadd@f1,f,c
  3213  00136A  0E00               	movlw	0
  3214  00136C  222F               	addwfc	___ftadd@f1+1,f,c
  3215  00136E  0E00               	movlw	0
  3216  001370  2230               	addwfc	___ftadd@f1+2,f,c
  3217  001372                     l388:
  3218  001372  AC39               	btfss	___ftadd@sign,6,c
  3219  001374  D00C               	goto	l2112
  3220  001376  0EFF               	movlw	255
  3221  001378  1A31               	xorwf	___ftadd@f2,f,c
  3222  00137A  0EFF               	movlw	255
  3223  00137C  1A32               	xorwf	___ftadd@f2+1,f,c
  3224  00137E  0EFF               	movlw	255
  3225  001380  1A33               	xorwf	___ftadd@f2+2,f,c
  3226  001382  0E01               	movlw	1
  3227  001384  2631               	addwf	___ftadd@f2,f,c
  3228  001386  0E00               	movlw	0
  3229  001388  2232               	addwfc	___ftadd@f2+1,f,c
  3230  00138A  0E00               	movlw	0
  3231  00138C  2233               	addwfc	___ftadd@f2+2,f,c
  3232  00138E                     l2112:
  3233  00138E  6E34               	movwf	??___ftadd& (0+255),c
  3234  001390  0E00               	movlw	0
  3235  001392  6E39               	movwf	___ftadd@sign,c
  3236  001394  5034               	movf	??___ftadd& (0+255),w,c
  3237  001396  502E               	movf	___ftadd@f1,w,c
  3238  001398  2631               	addwf	___ftadd@f2,f,c
  3239  00139A  502F               	movf	___ftadd@f1+1,w,c
  3240  00139C  2232               	addwfc	___ftadd@f2+1,f,c
  3241  00139E  5030               	movf	___ftadd@f1+2,w,c
  3242  0013A0  2233               	addwfc	___ftadd@f2+2,f,c
  3243  0013A2  AE33               	btfss	___ftadd@f2+2,7,c
  3244  0013A4  D010               	goto	l2122
  3245  0013A6  0EFF               	movlw	255
  3246  0013A8  1A31               	xorwf	___ftadd@f2,f,c
  3247  0013AA  0EFF               	movlw	255
  3248  0013AC  1A32               	xorwf	___ftadd@f2+1,f,c
  3249  0013AE  0EFF               	movlw	255
  3250  0013B0  1A33               	xorwf	___ftadd@f2+2,f,c
  3251  0013B2  0E01               	movlw	1
  3252  0013B4  2631               	addwf	___ftadd@f2,f,c
  3253  0013B6  0E00               	movlw	0
  3254  0013B8  2232               	addwfc	___ftadd@f2+1,f,c
  3255  0013BA  0E00               	movlw	0
  3256  0013BC  2233               	addwfc	___ftadd@f2+2,f,c
  3257  0013BE  6E34               	movwf	??___ftadd& (0+255),c
  3258  0013C0  0E01               	movlw	1
  3259  0013C2  6E39               	movwf	___ftadd@sign,c
  3260  0013C4  5034               	movf	??___ftadd& (0+255),w,c
  3261  0013C6                     l2122:
  3262  0013C6  C031  F001         	movff	___ftadd@f2,?___ftpack
  3263  0013CA  C032  F002         	movff	___ftadd@f2+1,?___ftpack+1
  3264  0013CE  C033  F003         	movff	___ftadd@f2+2,?___ftpack+2
  3265  0013D2  C03B  F004         	movff	___ftadd@exp1,?___ftpack+3
  3266  0013D6  C039  F005         	movff	___ftadd@sign,?___ftpack+4
  3267  0013DA  ECCE  F00E         	call	___ftpack	;wreg free
  3268  0013DE  C003  F030         	movff	?___ftpack+2,?___ftadd+2
  3269  0013E2  C002  F02F         	movff	?___ftpack+1,?___ftadd+1
  3270  0013E6  C001  F02E         	movff	?___ftpack,?___ftadd
  3271  0013EA  0012               	return	
  3272  0013EC                     __end_of___ftadd:
  3273                           	opt stack 0
  3274                           tblptru	equ	0xFF8
  3275                           tblptrh	equ	0xFF7
  3276                           tblptrl	equ	0xFF6
  3277                           tablat	equ	0xFF5
  3278                           wreg	equ	0xFE8
  3279                           postinc2	equ	0xFDE
  3280                           postdec2	equ	0xFDD
  3281                           fsr2h	equ	0xFDA
  3282                           fsr2l	equ	0xFD9
  3283                           status	equ	0xFD8
  3284                           
  3285 ;; *************** function ___ftpack *****************
  3286 ;; Defined at:
  3287 ;;		line 63 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\float.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;  arg             3    0[COMRAM] unsigned um
  3290 ;;  exp             1    3[COMRAM] unsigned char 
  3291 ;;  sign            1    4[COMRAM] unsigned char 
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;		None
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  3    0[COMRAM] float 
  3296 ;; Registers used:
  3297 ;;		wreg, status,2, status,0
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3303 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3305 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3306 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3307 ;;Total ram usage:        8 bytes
  3308 ;; Hardware stack levels used:    1
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		___altoft
  3313 ;;		___awtoft
  3314 ;;		___ftadd
  3315 ;;		___ftdiv
  3316 ;;		___ftmul
  3317 ;;		___lltoft
  3318 ;; This function uses a non-reentrant model
  3319 ;;
  3320                           
  3321                           	psect	text19
  3322  001D9C                     __ptext19:
  3323                           	opt stack 0
  3324  001D9C                     ___ftpack:
  3325                           	opt stack 28
  3326                           
  3327                           ;incstack = 0
  3328                           ;incstack = 0
  3329  001D9C  5004               	movf	___ftpack@exp,w,c
  3330  001D9E  B4D8               	btfsc	status,2,c
  3331  001DA0  D005               	goto	l1812
  3332  001DA2  5001               	movf	___ftpack@arg,w,c
  3333  001DA4  1002               	iorwf	___ftpack@arg+1,w,c
  3334  001DA6  1003               	iorwf	___ftpack@arg+2,w,c
  3335  001DA8  A4D8               	btfss	status,2,c
  3336  001DAA  D00C               	goto	l1818
  3337  001DAC                     l1812:
  3338  001DAC  0E00               	movlw	0
  3339  001DAE  6E01               	movwf	?___ftpack,c
  3340  001DB0  0E00               	movlw	0
  3341  001DB2  6E02               	movwf	?___ftpack+1,c
  3342  001DB4  0E00               	movlw	0
  3343  001DB6  6E03               	movwf	?___ftpack+2,c
  3344  001DB8  0012               	return	
  3345  001DBA                     l1816:
  3346  001DBA  2A04               	incf	___ftpack@exp,f,c
  3347  001DBC  90D8               	bcf	status,0,c
  3348  001DBE  3203               	rrcf	___ftpack@arg+2,f,c
  3349  001DC0  3202               	rrcf	___ftpack@arg+1,f,c
  3350  001DC2  3201               	rrcf	___ftpack@arg,f,c
  3351  001DC4                     l1818:
  3352  001DC4  0E00               	movlw	0
  3353  001DC6  1401               	andwf	___ftpack@arg,w,c
  3354  001DC8  6E06               	movwf	??___ftpack& (0+255),c
  3355  001DCA  0E00               	movlw	0
  3356  001DCC  1402               	andwf	___ftpack@arg+1,w,c
  3357  001DCE  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3358  001DD0  0EFE               	movlw	254
  3359  001DD2  1403               	andwf	___ftpack@arg+2,w,c
  3360  001DD4  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3361  001DD6  5006               	movf	??___ftpack,w,c
  3362  001DD8  1007               	iorwf	??___ftpack+1,w,c
  3363  001DDA  1008               	iorwf	??___ftpack+2,w,c
  3364  001DDC  B4D8               	btfsc	status,2,c
  3365  001DDE  D00C               	goto	l1824
  3366  001DE0  D7EC               	goto	l1816
  3367  001DE2                     l1820:
  3368  001DE2  2A04               	incf	___ftpack@exp,f,c
  3369  001DE4  0E01               	movlw	1
  3370  001DE6  2601               	addwf	___ftpack@arg,f,c
  3371  001DE8  0E00               	movlw	0
  3372  001DEA  2202               	addwfc	___ftpack@arg+1,f,c
  3373  001DEC  0E00               	movlw	0
  3374  001DEE  2203               	addwfc	___ftpack@arg+2,f,c
  3375  001DF0  90D8               	bcf	status,0,c
  3376  001DF2  3203               	rrcf	___ftpack@arg+2,f,c
  3377  001DF4  3202               	rrcf	___ftpack@arg+1,f,c
  3378  001DF6  3201               	rrcf	___ftpack@arg,f,c
  3379  001DF8                     l1824:
  3380  001DF8  0E00               	movlw	0
  3381  001DFA  1401               	andwf	___ftpack@arg,w,c
  3382  001DFC  6E06               	movwf	??___ftpack& (0+255),c
  3383  001DFE  0E00               	movlw	0
  3384  001E00  1402               	andwf	___ftpack@arg+1,w,c
  3385  001E02  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3386  001E04  0EFF               	movlw	255
  3387  001E06  1403               	andwf	___ftpack@arg+2,w,c
  3388  001E08  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3389  001E0A  5006               	movf	??___ftpack,w,c
  3390  001E0C  1007               	iorwf	??___ftpack+1,w,c
  3391  001E0E  1008               	iorwf	??___ftpack+2,w,c
  3392  001E10  B4D8               	btfsc	status,2,c
  3393  001E12  D006               	goto	l1828
  3394  001E14  D7E6               	goto	l1820
  3395  001E16                     l1826:
  3396  001E16  0604               	decf	___ftpack@exp,f,c
  3397  001E18  90D8               	bcf	status,0,c
  3398  001E1A  3601               	rlcf	___ftpack@arg,f,c
  3399  001E1C  3602               	rlcf	___ftpack@arg+1,f,c
  3400  001E1E  3603               	rlcf	___ftpack@arg+2,f,c
  3401  001E20                     l1828:
  3402  001E20  AE02               	btfss	___ftpack@arg+1,7,c
  3403  001E22  D7F9               	goto	l1826
  3404  001E24  A004               	btfss	___ftpack@exp,0,c
  3405  001E26  9E02               	bcf	___ftpack@arg+1,7,c
  3406  001E28  90D8               	bcf	status,0,c
  3407  001E2A  3204               	rrcf	___ftpack@exp,f,c
  3408  001E2C  5004               	movf	___ftpack@exp,w,c
  3409  001E2E  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3410  001E30  6A07               	clrf	(??___ftpack+1)& (0+255),c
  3411  001E32  6A06               	clrf	??___ftpack& (0+255),c
  3412  001E34  5006               	movf	??___ftpack,w,c
  3413  001E36  1201               	iorwf	___ftpack@arg,f,c
  3414  001E38  5007               	movf	??___ftpack+1,w,c
  3415  001E3A  1202               	iorwf	___ftpack@arg+1,f,c
  3416  001E3C  5008               	movf	??___ftpack+2,w,c
  3417  001E3E  1203               	iorwf	___ftpack@arg+2,f,c
  3418  001E40  5005               	movf	___ftpack@sign,w,c
  3419  001E42  A4D8               	btfss	status,2,c
  3420  001E44  8E03               	bsf	___ftpack@arg+2,7,c
  3421  001E46  C001  F001         	movff	___ftpack@arg,?___ftpack
  3422  001E4A  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3423  001E4E  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3424  001E52  0012               	return	
  3425  001E54                     __end_of___ftpack:
  3426                           	opt stack 0
  3427                           tblptru	equ	0xFF8
  3428                           tblptrh	equ	0xFF7
  3429                           tblptrl	equ	0xFF6
  3430                           tablat	equ	0xFF5
  3431                           wreg	equ	0xFE8
  3432                           postinc2	equ	0xFDE
  3433                           postdec2	equ	0xFDD
  3434                           fsr2h	equ	0xFDA
  3435                           fsr2l	equ	0xFD9
  3436                           status	equ	0xFD8
  3437                           
  3438 ;; *************** function ___lltoft *****************
  3439 ;; Defined at:
  3440 ;;		line 36 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\lltoft.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;  c               4    8[COMRAM] unsigned long 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;  exp             1   16[COMRAM] unsigned char 
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  3    8[COMRAM] float 
  3447 ;; Registers used:
  3448 ;;		wreg, status,2, status,0, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3454 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3456 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3457 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3458 ;;Total ram usage:        9 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; Hardware stack levels required when called:    1
  3461 ;; This function calls:
  3462 ;;		___ftpack
  3463 ;; This function is called by:
  3464 ;;		_pow
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text20
  3469  001FF8                     __ptext20:
  3470                           	opt stack 0
  3471  001FF8                     ___lltoft:
  3472                           	opt stack 27
  3473                           
  3474                           ;incstack = 0
  3475                           ;incstack = 0
  3476  001FF8  6E0D               	movwf	??___lltoft& (0+255),c
  3477  001FFA  0E8E               	movlw	142
  3478  001FFC  6E11               	movwf	___lltoft@exp,c
  3479  001FFE  500D               	movf	??___lltoft& (0+255),w,c
  3480  002000  D006               	goto	l2012
  3481  002002                     l2010:
  3482  002002  90D8               	bcf	status,0,c
  3483  002004  320C               	rrcf	___lltoft@c+3,f,c
  3484  002006  320B               	rrcf	___lltoft@c+2,f,c
  3485  002008  320A               	rrcf	___lltoft@c+1,f,c
  3486  00200A  3209               	rrcf	___lltoft@c,f,c
  3487  00200C  2A11               	incf	___lltoft@exp,f,c
  3488  00200E                     l2012:
  3489  00200E  0E00               	movlw	0
  3490  002010  1409               	andwf	___lltoft@c,w,c
  3491  002012  6E0D               	movwf	??___lltoft& (0+255),c
  3492  002014  0E00               	movlw	0
  3493  002016  140A               	andwf	___lltoft@c+1,w,c
  3494  002018  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  3495  00201A  0E00               	movlw	0
  3496  00201C  140B               	andwf	___lltoft@c+2,w,c
  3497  00201E  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  3498  002020  0EFF               	movlw	255
  3499  002022  140C               	andwf	___lltoft@c+3,w,c
  3500  002024  6E10               	movwf	(??___lltoft+3)& (0+255),c
  3501  002026  5010               	movf	??___lltoft+3,w,c
  3502  002028  100D               	iorwf	??___lltoft,w,c
  3503  00202A  100E               	iorwf	??___lltoft+1,w,c
  3504  00202C  100F               	iorwf	??___lltoft+2,w,c
  3505  00202E  A4D8               	btfss	status,2,c
  3506  002030  D7E8               	goto	l2010
  3507  002032  C009  F001         	movff	___lltoft@c,?___ftpack
  3508  002036  C00A  F002         	movff	___lltoft@c+1,?___ftpack+1
  3509  00203A  C00B  F003         	movff	___lltoft@c+2,?___ftpack+2
  3510  00203E  C011  F004         	movff	___lltoft@exp,?___ftpack+3
  3511  002042  6E0D               	movwf	??___lltoft& (0+255),c
  3512  002044  0E00               	movlw	0
  3513  002046  6E05               	movwf	?___ftpack+4,c
  3514  002048  500D               	movf	??___lltoft& (0+255),w,c
  3515  00204A  ECCE  F00E         	call	___ftpack	;wreg free
  3516  00204E  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  3517  002052  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  3518  002056  C001  F009         	movff	?___ftpack,?___lltoft
  3519  00205A  0012               	return	
  3520  00205C                     __end_of___lltoft:
  3521                           	opt stack 0
  3522                           tblptru	equ	0xFF8
  3523                           tblptrh	equ	0xFF7
  3524                           tblptrl	equ	0xFF6
  3525                           tablat	equ	0xFF5
  3526                           wreg	equ	0xFE8
  3527                           postinc2	equ	0xFDE
  3528                           postdec2	equ	0xFDD
  3529                           fsr2h	equ	0xFDA
  3530                           fsr2l	equ	0xFD9
  3531                           status	equ	0xFD8
  3532                           
  3533 ;; *************** function _leds *****************
  3534 ;; Defined at:
  3535 ;;		line 22 in file "main.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;  port            1    0[COMRAM] unsigned char 
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;		None
  3540 ;; Return value:  Size  Location     Type
  3541 ;;		None               void
  3542 ;; Registers used:
  3543 ;;		wreg, status,2, status,0
  3544 ;; Tracked objects:
  3545 ;;		On entry : 0/0
  3546 ;;		On exit  : 0/0
  3547 ;;		Unchanged: 0/0
  3548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3549 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3551 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3552 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3553 ;;Total ram usage:        2 bytes
  3554 ;; Hardware stack levels used:    1
  3555 ;; This function calls:
  3556 ;;		Nothing
  3557 ;; This function is called by:
  3558 ;;		_program
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           	psect	text21
  3563  002188                     __ptext21:
  3564                           	opt stack 0
  3565  002188                     _leds:
  3566                           	opt stack 29
  3567                           
  3568                           ;main.c: 23: LATA=~port;
  3569                           
  3570                           ;incstack = 0
  3571                           ;incstack = 0
  3572  002188  5001               	movf	leds@port,w,c
  3573  00218A  0AFF               	xorlw	255
  3574  00218C  6E89               	movwf	3977,c	;volatile
  3575                           
  3576                           ;main.c: 24: if(~port & 0x40){
  3577  00218E  5001               	movf	leds@port,w,c
  3578  002190  0AFF               	xorlw	255
  3579  002192  6E02               	movwf	??_leds& (0+255),c
  3580  002194  AC02               	btfss	??_leds,6,c
  3581  002196  D003               	goto	l1802
  3582                           
  3583                           ;main.c: 25: LATE=LATE | 0x01;
  3584  002198  508D               	movf	3981,w,c	;volatile
  3585  00219A  0901               	iorlw	1
  3586  00219C  D002               	goto	L3
  3587  00219E                     l1802:
  3588                           
  3589                           ;main.c: 27: else LATE=LATE & ~0x01;
  3590  00219E  508D               	movf	3981,w,c	;volatile
  3591  0021A0  0BFE               	andlw	254
  3592  0021A2                     L3:
  3593  0021A2  6E8D               	movwf	3981,c	;volatile
  3594                           
  3595                           ;main.c: 28: if(~port & 0x80){
  3596  0021A4  5001               	movf	leds@port,w,c
  3597  0021A6  0AFF               	xorlw	255
  3598  0021A8  6E02               	movwf	??_leds& (0+255),c
  3599  0021AA  AE02               	btfss	??_leds,7,c
  3600  0021AC  D004               	goto	l1806
  3601                           
  3602                           ;main.c: 29: LATE=LATE | 0x02;
  3603  0021AE  508D               	movf	3981,w,c	;volatile
  3604  0021B0  0902               	iorlw	2
  3605  0021B2  6E8D               	movwf	3981,c	;volatile
  3606                           
  3607                           ;main.c: 30: } else LATE=LATE & ~0x02;
  3608  0021B4  0012               	return	
  3609  0021B6                     l1806:
  3610  0021B6  508D               	movf	3981,w,c	;volatile
  3611  0021B8  0BFD               	andlw	253
  3612  0021BA  6E8D               	movwf	3981,c	;volatile
  3613  0021BC  0012               	return	
  3614  0021BE                     __end_of_leds:
  3615                           	opt stack 0
  3616                           tblptru	equ	0xFF8
  3617                           tblptrh	equ	0xFF7
  3618                           tblptrl	equ	0xFF6
  3619                           tablat	equ	0xFF5
  3620                           wreg	equ	0xFE8
  3621                           postinc2	equ	0xFDE
  3622                           postdec2	equ	0xFDD
  3623                           fsr2h	equ	0xFDA
  3624                           fsr2l	equ	0xFD9
  3625                           status	equ	0xFD8
  3626                           
  3627 ;; *************** function _setup *****************
  3628 ;; Defined at:
  3629 ;;		line 18 in file "main.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;		None
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;		None
  3634 ;; Return value:  Size  Location     Type
  3635 ;;		None               void
  3636 ;; Registers used:
  3637 ;;		wreg, status,2
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3647 ;;Total ram usage:        0 bytes
  3648 ;; Hardware stack levels used:    1
  3649 ;; This function calls:
  3650 ;;		Nothing
  3651 ;; This function is called by:
  3652 ;;		_main
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text22
  3657  0021FA                     __ptext22:
  3658                           	opt stack 0
  3659  0021FA                     _setup:
  3660                           	opt stack 30
  3661                           
  3662                           ;main.c: 19: TRISA=0x00;
  3663                           
  3664                           ;incstack = 0
  3665                           ;incstack = 0
  3666  0021FA  0E00               	movlw	0
  3667  0021FC  6E92               	movwf	3986,c	;volatile
  3668                           
  3669                           ;main.c: 20: TRISE=0x00;
  3670  0021FE  0E00               	movlw	0
  3671  002200  6E96               	movwf	3990,c	;volatile
  3672  002202  0012               	return	
  3673  002204                     __end_of_setup:
  3674                           	opt stack 0
  3675                           tblptru	equ	0xFF8
  3676                           tblptrh	equ	0xFF7
  3677                           tblptrl	equ	0xFF6
  3678                           tablat	equ	0xFF5
  3679                           wreg	equ	0xFE8
  3680                           postinc2	equ	0xFDE
  3681                           postdec2	equ	0xFDD
  3682                           fsr2h	equ	0xFDA
  3683                           fsr2l	equ	0xFD9
  3684                           status	equ	0xFD8
  3685                           
  3686 ;; *************** function ___wmul *****************
  3687 ;; Defined at:
  3688 ;;		line 5 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\wmul.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;  multiplier      2    0[COMRAM] unsigned int 
  3691 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;  product         2    4[COMRAM] unsigned int 
  3694 ;; Return value:  Size  Location     Type
  3695 ;;                  2    0[COMRAM] unsigned int 
  3696 ;; Registers used:
  3697 ;;		wreg, status,2, status,0, prodl, prodh
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3703 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3704 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3706 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3707 ;;Total ram usage:        6 bytes
  3708 ;; Hardware stack levels used:    1
  3709 ;; This function calls:
  3710 ;;		Nothing
  3711 ;; This function is called by:
  3712 ;;		_eval_poly
  3713 ;; This function uses a non-reentrant model
  3714 ;;
  3715                           
  3716                           	psect	text23
  3717  002118                     __ptext23:
  3718                           	opt stack 0
  3719  002118                     ___wmul:
  3720                           	opt stack 26
  3721                           
  3722                           ;incstack = 0
  3723                           ;incstack = 0
  3724  002118  5001               	movf	___wmul@multiplier,w,c
  3725  00211A  0203               	mulwf	___wmul@multiplicand,c
  3726  00211C  CFF3 F005          	movff	prodl,___wmul@product
  3727  002120  CFF4 F006          	movff	prodh,___wmul@product+1
  3728  002124  5001               	movf	___wmul@multiplier,w,c
  3729  002126  0204               	mulwf	___wmul@multiplicand+1,c
  3730  002128  CFF3 FFF4          	movff	prodl,prodh
  3731  00212C  6AF3               	clrf	prodl,c
  3732  00212E  50F3               	movf	prodl,w,c
  3733  002130  2605               	addwf	___wmul@product,f,c
  3734  002132  50F4               	movf	prodh,w,c
  3735  002134  2206               	addwfc	___wmul@product+1,f,c
  3736  002136  5002               	movf	___wmul@multiplier+1,w,c
  3737  002138  0203               	mulwf	___wmul@multiplicand,c
  3738  00213A  CFF3 FFF4          	movff	prodl,prodh
  3739  00213E  6AF3               	clrf	prodl,c
  3740  002140  50F3               	movf	prodl,w,c
  3741  002142  2605               	addwf	___wmul@product,f,c
  3742  002144  50F4               	movf	prodh,w,c
  3743  002146  2206               	addwfc	___wmul@product+1,f,c
  3744  002148  C005  F001         	movff	___wmul@product,?___wmul
  3745  00214C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3746  002150  0012               	return	
  3747  002152                     __end_of___wmul:
  3748                           	opt stack 0
  3749                           tblptru	equ	0xFF8
  3750                           tblptrh	equ	0xFF7
  3751                           tblptrl	equ	0xFF6
  3752                           tablat	equ	0xFF5
  3753                           prodh	equ	0xFF4
  3754                           prodl	equ	0xFF3
  3755                           wreg	equ	0xFE8
  3756                           postinc2	equ	0xFDE
  3757                           postdec2	equ	0xFDD
  3758                           fsr2h	equ	0xFDA
  3759                           fsr2l	equ	0xFD9
  3760                           status	equ	0xFD8
  3761                           
  3762 ;; *************** function ___awtoft *****************
  3763 ;; Defined at:
  3764 ;;		line 33 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\awtoft.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  c               2   23[COMRAM] int 
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;  sign            1   27[COMRAM] unsigned char 
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  3   23[COMRAM] float 
  3771 ;; Registers used:
  3772 ;;		wreg, status,2, status,0, cstack
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3778 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3779 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3780 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3781 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;Total ram usage:        5 bytes
  3783 ;; Hardware stack levels used:    1
  3784 ;; Hardware stack levels required when called:    1
  3785 ;; This function calls:
  3786 ;;		___ftpack
  3787 ;; This function is called by:
  3788 ;;		_program
  3789 ;;		_exp
  3790 ;;		_log
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           	psect	text24
  3795  00205C                     __ptext24:
  3796                           	opt stack 0
  3797  00205C                     ___awtoft:
  3798                           	opt stack 28
  3799                           
  3800                           ;incstack = 0
  3801                           ;incstack = 0
  3802  00205C  6E1B               	movwf	??___awtoft& (0+255),c
  3803  00205E  0E00               	movlw	0
  3804  002060  6E1C               	movwf	___awtoft@sign,c
  3805  002062  501B               	movf	??___awtoft& (0+255),w,c
  3806  002064  AE19               	btfss	___awtoft@c+1,7,c
  3807  002066  D008               	goto	l1958
  3808  002068  6C18               	negf	___awtoft@c,c
  3809  00206A  1E19               	comf	___awtoft@c+1,f,c
  3810  00206C  B0D8               	btfsc	status,0,c
  3811  00206E  2A19               	incf	___awtoft@c+1,f,c
  3812  002070  6E1B               	movwf	??___awtoft& (0+255),c
  3813  002072  0E01               	movlw	1
  3814  002074  6E1C               	movwf	___awtoft@sign,c
  3815  002076  501B               	movf	??___awtoft& (0+255),w,c
  3816  002078                     l1958:
  3817  002078  C018  F001         	movff	___awtoft@c,?___ftpack
  3818  00207C  C019  F002         	movff	___awtoft@c+1,?___ftpack+1
  3819  002080  6A03               	clrf	?___ftpack+2,c
  3820  002082  6E1B               	movwf	??___awtoft& (0+255),c
  3821  002084  0E8E               	movlw	142
  3822  002086  6E04               	movwf	?___ftpack+3,c
  3823  002088  501B               	movf	??___awtoft& (0+255),w,c
  3824  00208A  C01C  F005         	movff	___awtoft@sign,?___ftpack+4
  3825  00208E  ECCE  F00E         	call	___ftpack	;wreg free
  3826  002092  C003  F01A         	movff	?___ftpack+2,?___awtoft+2
  3827  002096  C002  F019         	movff	?___ftpack+1,?___awtoft+1
  3828  00209A  C001  F018         	movff	?___ftpack,?___awtoft
  3829  00209E  0012               	return	
  3830  0020A0                     __end_of___awtoft:
  3831                           	opt stack 0
  3832                           tblptru	equ	0xFF8
  3833                           tblptrh	equ	0xFF7
  3834                           tblptrl	equ	0xFF6
  3835                           tablat	equ	0xFF5
  3836                           prodh	equ	0xFF4
  3837                           prodl	equ	0xFF3
  3838                           wreg	equ	0xFE8
  3839                           postinc2	equ	0xFDE
  3840                           postdec2	equ	0xFDD
  3841                           fsr2h	equ	0xFDA
  3842                           fsr2l	equ	0xFD9
  3843                           status	equ	0xFD8
  3844                           tblptru	equ	0xFF8
  3845                           tblptrh	equ	0xFF7
  3846                           tblptrl	equ	0xFF6
  3847                           tablat	equ	0xFF5
  3848                           prodh	equ	0xFF4
  3849                           prodl	equ	0xFF3
  3850                           wreg	equ	0xFE8
  3851                           postinc2	equ	0xFDE
  3852                           postdec2	equ	0xFDD
  3853                           fsr2h	equ	0xFDA
  3854                           fsr2l	equ	0xFD9
  3855                           status	equ	0xFD8
  3856                           
  3857                           	psect	rparam
  3858  0000                     tblptru	equ	0xFF8
  3859                           tblptrh	equ	0xFF7
  3860                           tblptrl	equ	0xFF6
  3861                           tablat	equ	0xFF5
  3862                           prodh	equ	0xFF4
  3863                           prodl	equ	0xFF3
  3864                           wreg	equ	0xFE8
  3865                           postinc2	equ	0xFDE
  3866                           postdec2	equ	0xFDD
  3867                           fsr2h	equ	0xFDA
  3868                           fsr2l	equ	0xFD9
  3869                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    57
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     28      30
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ?_frexp	 size(2) Largest target is 0

    ?_ldexp	 size(2) Largest target is 0

    ?_eval_poly	 size(2) Largest target is 0

    ?_floor	 size(2) Largest target is 0

    ?___wmul	unsigned int  size(2) Largest target is 0

    ?_exp	unsigned int  size(2) Largest target is 0

    ?_log	unsigned int  size(2) Largest target is 0

    ?___lltoft	float  size(2) Largest target is 0

    ?___ftneg	float  size(2) Largest target is 0

    ?___asftsub	float  size(2) Largest target is 0

    ?___ftsub	float  size(2) Largest target is 0

    ?___asftmul	float  size(2) Largest target is 0

    ?___ftmul	float  size(2) Largest target is 0

    ?___ftdiv	float  size(2) Largest target is 0

    ?___ftadd	float  size(2) Largest target is 0

    ?___altoft	float  size(2) Largest target is 0

    ?___ftpack	float  size(2) Largest target is 0

    ?___awtoft	float  size(2) Largest target is 0

    ?___fttol	long  size(2) Largest target is 0

    ?_pow	long  size(2) Largest target is 0

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(COMRAM[2]), 

    __asftsub@f1p	PTR float  size(2) Largest target is 3
		 -> exp@x(COMRAM[3]), 

    __asftmul@f1p	PTR float  size(2) Largest target is 3
		 -> exp@x(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _program->_pow
    _pow->_exp
    _exp->_log
    _ldexp->___ftpack
    _floor->___ftadd
    ___fttol->___ftpack
    ___altoft->___fttol
    ___asftsub->___ftsub
    ___ftsub->___ftadd
    ___asftmul->___ftmul
    ___ftdiv->___ftpack
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftadd->___ftmul
    ___lltoft->___ftpack
    ___awtoft->___fttol

Critical Paths under _main in BANK0

    _main->_program
    _program->_pow

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5   14376
                                             23 BANK0      5     0      5
                              _setup
                            _program
 ---------------------------------------------------------------------------------
 (1) _program                                             12    12      0   14376
                                             11 BANK0     12    12      0
                               _leds
                                _pow
                           ___awtoft
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) _pow                                                 18    12      6   13595
                                             88 COMRAM     7     1      6
                                              0 BANK0     11    11      0
                            ___ftmul
                             ___ftge
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _log
                                _exp
 ---------------------------------------------------------------------------------
 (3) _exp                                                  9     6      3    7796
                                             79 COMRAM     9     6      3
                            ___ftdiv
                          ___asftmul
                          ___asftsub
                           ___awtoft
                             ___ftge
                            ___ftneg
                            ___fttol
                                _log (ARG)
                              _floor
                          _eval_poly
                              _ldexp
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                8     3      5     248
                                              8 COMRAM     8     3      5
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                                8     5      3    2259
                                             59 COMRAM     8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     252
                                              8 COMRAM    15    11      4
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6     136
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) ___altoft                                            10     6      4     347
                                             23 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3      45
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) ___asftsub                                            5     0      5    1160
                                             65 COMRAM     5     0      5
                            ___ftsub
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftsub                                              6     0      6    1094
                                             59 COMRAM     6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___asftmul                                            5     0      5     601
                                             45 COMRAM     5     0      5
                            ___ftmul
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             17    11      6     489
                                              8 COMRAM    17    11      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _log                                                  5     2      3    4194
                                             74 COMRAM     5     2      3
                            ___ftadd
                            ___ftmul
                           ___awtoft
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                8     3      5     224
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           15     8      7    1921
                                             59 COMRAM    15     8      7
                            ___ftadd
                            ___ftmul
                             ___wmul
                              _ldexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             17    11      6     535
                                             28 COMRAM    17    11      6
                           ___ftpack
                           ___awtoft (ARG)
                              _ldexp (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             14     8      6    1049
                                             45 COMRAM    14     8      6
                           ___ftpack
                            ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___wmul (ARG)
                              _ldexp (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5     209
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4     278
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _leds                                                 2     1      1      66
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     159
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             5     2      3     300
                                             23 COMRAM     5     2      3
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _program
     _leds
     _pow
       ___ftmul
         ___ftpack
         ___awtoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___ftpack (ARG)
         _ldexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftneg
       ___fttol
         ___ftpack (ARG)
       ___lltoft
         ___ftpack
       _log
         ___ftadd
           ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftpack (ARG)
             _ldexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___ftpack (ARG)
           ___wmul (ARG)
           _ldexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___ftpack (ARG)
           _ldexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           _frexp (ARG)
         ___awtoft
           ___ftpack
           ___fttol (ARG)
             ___ftpack (ARG)
         _eval_poly
           ___ftadd
             ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___ftpack (ARG)
               _ldexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftpack (ARG)
             ___wmul (ARG)
             _ldexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftpack (ARG)
             _ldexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___wmul
           _ldexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
         _frexp
       _exp
         ___ftdiv
           ___ftpack
         ___asftmul
           ___ftmul
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftpack (ARG)
             _ldexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             _frexp (ARG)
         ___asftsub
           ___ftsub
             ___ftadd
               ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___ftpack (ARG)
                 _ldexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___ftpack (ARG)
               ___wmul (ARG)
               _ldexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___ftpack (ARG)
         ___awtoft
           ___ftpack
           ___fttol (ARG)
             ___ftpack (ARG)
         ___ftge
         ___ftneg
         ___fttol
           ___ftpack (ARG)
         _log (ARG)
           ___ftadd
             ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___ftpack (ARG)
               _ldexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftpack (ARG)
             ___wmul (ARG)
             _ldexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftpack (ARG)
             _ldexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___awtoft
             ___ftpack
             ___fttol (ARG)
               ___ftpack (ARG)
           _eval_poly
             ___ftadd
               ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___ftpack (ARG)
                 _ldexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___ftpack (ARG)
               ___wmul (ARG)
               _ldexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___ftpack (ARG)
               _ldexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___wmul
             _ldexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
           _frexp
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftpack (ARG)
           ___ftadd
             ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___ftpack (ARG)
               _ldexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftpack (ARG)
             ___wmul (ARG)
             _ldexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___ftge
           ___fttol
             ___ftpack (ARG)
           _frexp
         _eval_poly (ARG)
           ___ftadd
             ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___ftpack (ARG)
               _ldexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftpack (ARG)
             ___wmul (ARG)
             _ldexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftpack (ARG)
             _ldexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___wmul
           _ldexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
         _ldexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
     ___awtoft
       ___ftpack
       ___fttol (ARG)
         ___ftpack (ARG)
     ___fttol
       ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1C      1E       5       18.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       7       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7D      12        0.0%
DATA                 0      0      84       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Thu Jan 30 17:52:37 2014

           ___altoft@exp 0020            ___altoft@sign 0021      ___wmul@multiplicand 0003  
           ___asftmul@f2 0030             __CFG_CP0$OFF 000000             ___asftsub@f2 0044  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
           ___ftadd@exp1 003B             ___ftadd@exp2 003A              __CFG_LVP$ON 000000  
           ___ftadd@sign 0039                      l421 21D6                      l610 1212  
                    l364 1288                      l620 1AD8                      l368 12B2  
                    l379 1356                      l388 1372                      l581 1586  
                    l398 189C                      l399 18C2                      l576 1432  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000                      _exp 103A  
                    _log 1594                      _pow 13EC                      wreg 000FE8  
           __CFG_FOSC$XT 000000            ___asftmul@f1p 002E            ___asftsub@f1p 0042  
           ___ftdiv@cntr 0014             ___ftdiv@sign 0019                     l2000 19CE  
                   l2010 2002                     l2012 200E                     l2004 19E4  
                   l2112 138E                     l2104 1346                     l2024 1B00  
                   l2122 13C6                     l2106 1350                     l2210 1C1C  
                   l2202 1A5E                     l2050 1B98                     l2034 1B48  
                   l2132 1706                     l2212 1CA4                     l2300 145A  
                   l2070 12C0                     l2230 15EE                     l2046 1B8A  
                   l2064 1296                     l2152 1774                     l2224 15C6  
                   l2312 14FE                     l2162 17A0                     l2138 173E  
                   l2092 1310                     l2156 1784                     l2252 1090  
                   l2308 14D4                     l2094 131A                     l2086 12F2  
                   l2166 17B0                     l2246 1054                     l2096 1322  
                   l2280 11E8                     l2264 110C                     l1802 219E  
                   l2098 1328                     l2194 1A36                     l2258 10CC  
                   l1820 1DE2                     l1812 1DAC                     l1900 1FAE  
                   l2348 21F4                     l1806 21B6                     l2198 1A44  
                   l2294 1440                     l1824 1DF8                     l1816 1DBA  
                   l1912 1822                     l1826 1E16                     l1818 1DC4  
                   l1850 1EB4                     l1828 1E20                     l1918 185A  
                   l1846 1E84                     l1856 1EE0                     l1958 2078  
                   l1878 1F0E                     l1990 19A6                     l1968 1930  
                   l1898 1FA2                     l1986 1996                     l1996 19BE  
                   l1998 19CA                     ?_exp 0050                     ?_log 004B  
                   ?_pow 0059                     u1010 1808                     u1030 1840  
                   u1015 1800                     u1200 123E                     u1210 1264  
                   u1035 1838                     u1205 1236                     u1070 1912  
                   u1215 125C                     u1410 16EC                     u1090 194E  
                   u1075 190A                     _LATA 000F89                     u1430 1724  
                   u1415 16E4                     u1095 1946                     _LATE 000F8D  
                   u1435 171C                     u1195 1B78                     u1525 15A6  
                   u1570 10E6                     u1485 1A24                     u1645 146C  
                   u1575 10DE                     u1655 14B4                     u1576 10E8  
                   u1697 1D88                     _main 21F0                     _leds 2188  
           ___ftpack@arg 0001             ___ftpack@exp 0004                     fsr2h 000FDA  
                   fsr2l 000FD9            __CFG_BORV$190 000000                     exp@x 0050  
                   log@x 004B                     pow@x 0059                     pow@y 005C  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
          __CFG_IESO$OFF 000000             ___ftmul@cntr 002C             ___ftmul@sign 002D  
           ___fttol@exp1 0017                    ??_exp 0053                    ??_log 004E  
           ___fttol@lval 0013                    ??_pow 005F             program@imLed 0074  
                  ?_main 0077                    ?_leds 0001          __end_of___ftadd 13EC  
        __end_of___ftdiv 18F4          __end_of___ftneg 21E4          __end_of___ftmul 17EA  
        __end_of___ftsub 2188          __end_of___fttol 19F6                    _TRISA 000F92  
                  _TRISE 000F96            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000             ___lltoft@exp 0011  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
          ___awtoft@sign 001C                    _floor 19F6                    _ldexp 1AE6  
                  _frexp 1EE4                    _errno 007C       __CFG_MCLRE$EXTMCLR 000000  
          ___ftpack@sign 0005                    _setup 21FA                    tablat 000FF5  
                  pow@yi 0067          __end_of_program 1D9C                    status 000FD8  
         __CFG_HFOFST$ON 000000           __CFG_PBADEN$ON 000000              exp@exponent 0056  
            ldexp@newexp 000C          __initialization 21E4              log@exponent 004E  
           __end_of_main 21FA             __end_of_leds 21BE                   ??_main 0060  
                 ??_leds 0002            ___fttol@sign1 0012            __activetblptr 000003  
                 ?_floor 003C                   ?_ldexp 0009                   ?_frexp 0001  
       __end_of___altoft 1FF8                   ?_setup 0001         __end_of___awtoft 20A0  
       __end_of___ftpack 1E54         __end_of___lltoft 205C           __CFG_WDTEN$OFF 000000  
         __CFG_XINST$OFF 000000                   ___ftge 1E54                   ___wmul 2118  
              ??___ftadd 0034           __CFG_STVREN$ON 000000                ??___ftdiv 000F  
              ??___ftneg 0004                ??___ftmul 0023                ??___ftsub 0042  
              ??___fttol 000D                   floor@i 003F                   floor@x 003C  
  ___ftmul@f3_as_product 0029             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_program 006B  
     __size_of___asftmul 003C       __size_of___asftsub 003C         __end_ofexp@coeff 101E  
       __end_oflog@coeff 1039               __accesstop 0060  __end_of__initialization 21EA  
             ___altoft@c 0018               ___ftadd@f1 002E               ___ftadd@f2 0031  
             ___ftge@ff1 0001               ___ftge@ff2 0004             eval_poly@res 0048  
             ___ftdiv@f1 0009               ___ftdiv@f2 000C               ___ftdiv@f3 0015  
             ___ftneg@f1 0001               ___awtoft@c 0018               ___ftmul@f1 001D  
             ___ftmul@f2 0020               ___ftsub@f1 003C               ___ftsub@f2 003F  
             ___fttol@f1 0009           __pcstackCOMRAM 0001               ___lltoft@c 0009  
          __end_of_floor 1AE6            __end_of_ldexp 1BD0            __end_of_frexp 1F74  
          __end_of_setup 2204                  ??_floor 003F                  ??_ldexp 000E  
                ??_frexp 0006                  ??_setup 0001               __pbssBANK0 007C  
     __size_of_eval_poly 00EA          __CFG_PLLCFG$OFF 000000       __CFG_CCP2MX$PORTC1 000000  
                ?___ftge 0001                  ?___wmul 0001       __CFG_CCP3MX$PORTB5 000000  
              ?___altoft 0018        __end_of___asftmul 2118        __end_of___asftsub 20DC  
              ?___awtoft 0018                ?___ftpack 0001                ?___lltoft 0009  
        __CFG_PWRTEN$OFF 000000                  __Hparam 0000                  __Lparam 0000  
        __size_of___ftge 0090                  ___ftadd 1220                  ___ftdiv 17EA  
                ___ftneg 21BE          __size_of___wmul 003A                  ___ftmul 16CE  
                ___ftsub 2152                  ___fttol 18F4             __psmallconst 1000  
             ??___altoft 001C                  _exp$668 0053                  __pcinit 21E4  
             ??___awtoft 001B               ??___ftpack 0006        __end_of_eval_poly 1CBA  
                __ramtop 1000               ??___lltoft 000D                  __ptext0 21F0  
                __ptext1 1CBA                  __ptext2 13EC                  __ptext3 103A  
                __ptext4 1AE6                  __ptext5 19F6                  __ptext6 18F4  
                __ptext7 1E54                  __ptext8 1F74                  __ptext9 21BE  
                _pow$666 0060                  _pow$667 0063             __size_of_exp 01E6  
           __size_of_log 013A             __size_of_pow 01A8                  _program 1CBA  
   end_of_initialization 21EA                  exp@sign 0058                  pow@sign 0066  
                postdec2 000FDD                  postinc2 000FDE              ___ftdiv@exp 0018  
            ___ftmul@exp 0028              program@Leds 006C              program@Sens 006D  
         __end_of___ftge 1EE4           __end_of___wmul 2152               floor@expon 0042  
    start_initialization 21E4               eval_poly@d 003F               eval_poly@n 0041  
             eval_poly@x 003C               ldexp@value 0009              __end_of_exp 1220  
            __end_of_log 16CE              __end_of_pow 1594               frexp@value 0001  
               ??___ftge 0007                 ??___wmul 0005        __size_of___altoft 0084  
      __size_of___awtoft 0044        __size_of___ftpack 00B8                ___asftmul 20DC  
              ___asftsub 20A0        __size_of___lltoft 0064            __pcstackBANK0 0060  
               ?___ftadd 002E                 ?___ftdiv 0009                 ?___ftneg 0001  
               ?___ftmul 001D                 ?___ftsub 003C                 ?___fttol 0009  
       __CFG_PRICLKEN$ON 000000              __smallconst 1000               ?___asftmul 002E  
             ?___asftsub 0042                _eval_poly 1BD0                 ?_program 0001  
         __size_of_floor 00F0           __size_of_ldexp 00EA           __size_of_frexp 0090  
         __size_of_setup 000A           ___wmul@product 0005         __CFG_WDTPS$32768 000000  
      ___wmul@multiplier 0001               ?_eval_poly 003C                frexp@eptr 0004  
               __Hrparam 0000                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
      __CFG_P2BMX$PORTD2 000000         __size_of___ftadd 01CC         __size_of___ftdiv 010A  
       __size_of___ftneg 0026                 ___altoft 1F74         __size_of___ftmul 011C  
       __size_of___ftsub 0036         __size_of___fttol 0102                 ___awtoft 205C  
               ___ftpack 1D9C                 ___lltoft 1FF8              ??___asftmul 0033  
            ??___asftsub 0047                 __ptext10 20A0                 __ptext11 2152  
               __ptext20 1FF8                 __ptext12 20DC                 __ptext21 2188  
               __ptext13 17EA                 __ptext22 21FA                 __ptext14 1594  
               __ptext23 2118                 __ptext15 1EE4                 __ptext24 205C  
               __ptext16 1BD0                 __ptext17 16CE                 __ptext18 1220  
               __ptext19 1D9C         __size_of_program 00E2            __size_of_main 000A  
          __size_of_leds 0036                 main@argc 0077                 main@argv 0079  
               leds@port 0001                 exp@coeff 1000                 log@coeff 101E  
            ??_eval_poly 0043                 program@i 0075        __CFG_T3CMX$PORTC0 000000  
            _program$664 006E              _program$665 0071  
