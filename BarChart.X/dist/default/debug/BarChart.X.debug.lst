

Microchip Technology PIC18 LITE Macro Assembler V1.20 build 52243 
                                                                                               Thu Jan 30 18:02:30 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 52243
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           	psect	smallconst
    39  001000                     __psmallconst:
    40                           	opt stack 0
    41  001000                     exp@coeff:
    42                           	opt stack 0
    43  001000  00                 	db	0
    44  001001  80                 	db	128
    45  001002  3F                 	db	63
    46  001003  72                 	db	114
    47  001004  31                 	db	49
    48  001005  3F                 	db	63
    49  001006  FE                 	db	254
    50  001007  75                 	db	117
    51  001008  3E                 	db	62
    52  001009  58                 	db	88
    53  00100A  63                 	db	99
    54  00100B  3D                 	db	61
    55  00100C  95                 	db	149
    56  00100D  1D                 	db	29
    57  00100E  3C                 	db	60
    58  00100F  C5                 	db	197
    59  001010  AE                 	db	174
    60  001011  3A                 	db	58
    61  001012  79                 	db	121
    62  001013  21                 	db	33
    63  001014  39                 	db	57
    64  001015  94                 	db	148
    65  001016  80                 	db	128
    66  001017  37                 	db	55
    67  001018  93                 	db	147
    68  001019  A7                 	db	167
    69  00101A  35                 	db	53
    70  00101B  56                 	db	86
    71  00101C  15                 	db	21
    72  00101D  34                 	db	52
    73  00101E                     __end_ofexp@coeff:
    74                           	opt stack 0
    75  00101E                     log@coeff:
    76                           	opt stack 0
    77  00101E  00                 	db	0
    78  00101F  00                 	db	0
    79  001020  00                 	db	0
    80  001021  00                 	db	0
    81  001022  80                 	db	128
    82  001023  3F                 	db	63
    83  001024  F0                 	db	240
    84  001025  FF                 	db	255
    85  001026  BE                 	db	190
    86  001027  E2                 	db	226
    87  001028  A9                 	db	169
    88  001029  3E                 	db	62
    89  00102A  83                 	db	131
    90  00102B  76                 	db	118
    91  00102C  BE                 	db	190
    92  00102D  AE                 	db	174
    93  00102E  2B                 	db	43
    94  00102F  3E                 	db	62
    95  001030  3C                 	db	60
    96  001031  C3                 	db	195
    97  001032  BD                 	db	189
    98  001033  D2                 	db	210
    99  001034  13                 	db	19
   100  001035  3D                 	db	61
   101  001036  78                 	db	120
   102  001037  D3                 	db	211
   103  001038  BB                 	db	187
   104  001039                     __end_oflog@coeff:
   105                           	opt stack 0
   106  0000                     _LATA	set	3977
   107  0000                     _LATE	set	3981
   108  0000                     _TRISA	set	3986
   109  0000                     _TRISE	set	3990
   110                           
   111                           ; #config settings
   112  001039  00                 	db	0	; dummy byte at the end
   113  0000                     
   114                           	psect	cinit
   115  0022A4                     __pcinit:
   116                           	opt stack 0
   117  0022A4                     start_initialization:
   118                           	opt stack 0
   119  0022A4                     __initialization:
   120                           	opt stack 0
   121                           
   122                           ; Clear objects allocated to BANK0 (2 bytes)
   123  0022A4  0100               	movlb	0
   124  0022A6  6B7F               	clrf	(__pbssBANK0+1)& (0+255),b
   125  0022A8  6B7E               	clrf	__pbssBANK0& (0+255),b
   126  0022AA                     end_of_initialization:
   127                           	opt stack 0
   128  0022AA                     __end_of__initialization:
   129                           	opt stack 0
   130  0022AA  0100               	movlb	0
   131  0022AC  EF58  F011         	goto	_main	;jump to C main() function
   132                           
   133                           	psect	bssBANK0
   134  00007E                     __pbssBANK0:
   135                           	opt stack 0
   136  00007E                     _errno:
   137                           	opt stack 0
   138  00007E                     	ds	2
   139                           
   140                           	psect	cstackBANK0
   141  000060                     __pcstackBANK0:
   142                           	opt stack 0
   143  000060                     _pow$669:
   144                           	opt stack 0
   145                           
   146                           ; 3 bytes @ 0x0
   147  000060                     	ds	3
   148  000063                     _pow$670:
   149                           	opt stack 0
   150                           
   151                           ; 3 bytes @ 0x3
   152  000063                     	ds	3
   153  000066                     pow@sign:
   154                           	opt stack 0
   155                           
   156                           ; 1 bytes @ 0x6
   157  000066                     	ds	1
   158  000067                     pow@yi:
   159                           	opt stack 0
   160                           
   161                           ; 4 bytes @ 0x7
   162  000067                     	ds	4
   163  00006B                     ??_program:
   164                           
   165                           ; 0 bytes @ 0xB
   166  00006B                     	ds	1
   167  00006C                     program@Leds:
   168                           	opt stack 0
   169                           
   170                           ; 1 bytes @ 0xC
   171  00006C                     	ds	1
   172  00006D                     program@Sens:
   173                           	opt stack 0
   174                           
   175                           ; 1 bytes @ 0xD
   176  00006D                     	ds	1
   177  00006E                     _program$667:
   178                           	opt stack 0
   179                           
   180                           ; 3 bytes @ 0xE
   181  00006E                     	ds	3
   182  000071                     _program$668:
   183                           	opt stack 0
   184                           
   185                           ; 3 bytes @ 0x11
   186  000071                     	ds	3
   187  000074                     program@i:
   188                           	opt stack 0
   189                           
   190                           ; 2 bytes @ 0x14
   191  000074                     	ds	2
   192  000076                     program@j:
   193                           	opt stack 0
   194                           
   195                           ; 2 bytes @ 0x16
   196  000076                     	ds	2
   197  000078                     program@imLed:
   198                           	opt stack 0
   199                           
   200                           ; 1 bytes @ 0x18
   201  000078                     	ds	1
   202  000079                     
   203                           ; 2 bytes @ 0x19
   204  000079                     	ds	2
   205  00007B                     
   206                           ; 3 bytes @ 0x1B
   207  00007B                     	ds	3
   208                           
   209                           	psect	cstackCOMRAM
   210  000001                     __pcstackCOMRAM:
   211                           	opt stack 0
   212  000001                     ?_leds:
   213                           	opt stack 0
   214  000001                     ?___ftge:
   215                           	opt stack 0
   216  000001                     ?___wmul:
   217                           	opt stack 0
   218  000001                     ?___ftpack:
   219                           	opt stack 0
   220  000001                     ?_frexp:
   221                           	opt stack 0
   222  000001                     ?___ftneg:
   223                           	opt stack 0
   224  000001                     leds@port:
   225                           	opt stack 0
   226  000001                     ___wmul@multiplier:
   227                           	opt stack 0
   228  000001                     ___ftpack@arg:
   229                           	opt stack 0
   230  000001                     ___ftge@ff1:
   231                           	opt stack 0
   232  000001                     ___ftneg@f1:
   233                           	opt stack 0
   234  000001                     frexp@value:
   235                           	opt stack 0
   236                           
   237                           ; 3 bytes @ 0x0
   238  000001                     	ds	1
   239  000002                     ??_leds:
   240                           
   241                           ; 0 bytes @ 0x1
   242  000002                     	ds	1
   243  000003                     ___wmul@multiplicand:
   244                           	opt stack 0
   245                           
   246                           ; 2 bytes @ 0x2
   247  000003                     	ds	1
   248  000004                     ___ftpack@exp:
   249                           	opt stack 0
   250  000004                     frexp@eptr:
   251                           	opt stack 0
   252  000004                     ___ftge@ff2:
   253                           	opt stack 0
   254                           
   255                           ; 3 bytes @ 0x3
   256  000004                     	ds	1
   257  000005                     ___ftpack@sign:
   258                           	opt stack 0
   259  000005                     ___wmul@product:
   260                           	opt stack 0
   261                           
   262                           ; 2 bytes @ 0x4
   263  000005                     	ds	1
   264  000006                     ??___ftpack:
   265  000006                     ??_frexp:
   266                           
   267                           ; 0 bytes @ 0x5
   268  000006                     	ds	1
   269  000007                     ??___ftge:
   270                           
   271                           ; 0 bytes @ 0x6
   272  000007                     	ds	2
   273  000009                     ?___ftdiv:
   274                           	opt stack 0
   275  000009                     ?_ldexp:
   276                           	opt stack 0
   277  000009                     ?___lltoft:
   278                           	opt stack 0
   279  000009                     ?___fttol:
   280                           	opt stack 0
   281  000009                     ___ftdiv@f1:
   282                           	opt stack 0
   283  000009                     ___fttol@f1:
   284                           	opt stack 0
   285  000009                     ldexp@value:
   286                           	opt stack 0
   287  000009                     ___lltoft@c:
   288                           	opt stack 0
   289                           
   290                           ; 4 bytes @ 0x8
   291  000009                     	ds	3
   292  00000C                     ldexp@newexp:
   293                           	opt stack 0
   294  00000C                     ___ftdiv@f2:
   295                           	opt stack 0
   296                           
   297                           ; 3 bytes @ 0xB
   298  00000C                     	ds	1
   299  00000D                     ??___fttol:
   300  00000D                     ??___lltoft:
   301                           
   302                           ; 0 bytes @ 0xC
   303  00000D                     	ds	1
   304  00000E                     ??_ldexp:
   305                           
   306                           ; 0 bytes @ 0xD
   307  00000E                     	ds	1
   308  00000F                     ??___ftdiv:
   309                           
   310                           ; 0 bytes @ 0xE
   311  00000F                     	ds	2
   312  000011                     ___lltoft@exp:
   313                           	opt stack 0
   314                           
   315                           ; 1 bytes @ 0x10
   316  000011                     	ds	1
   317  000012                     ___fttol@sign1:
   318                           	opt stack 0
   319                           
   320                           ; 1 bytes @ 0x11
   321  000012                     	ds	1
   322  000013                     ___fttol@lval:
   323                           	opt stack 0
   324                           
   325                           ; 4 bytes @ 0x12
   326  000013                     	ds	1
   327  000014                     ___ftdiv@cntr:
   328                           	opt stack 0
   329                           
   330                           ; 1 bytes @ 0x13
   331  000014                     	ds	1
   332  000015                     ___ftdiv@f3:
   333                           	opt stack 0
   334                           
   335                           ; 3 bytes @ 0x14
   336  000015                     	ds	2
   337  000017                     ___fttol@exp1:
   338                           	opt stack 0
   339                           
   340                           ; 1 bytes @ 0x16
   341  000017                     	ds	1
   342  000018                     ?___altoft:
   343                           	opt stack 0
   344  000018                     ?___awtoft:
   345                           	opt stack 0
   346  000018                     ___ftdiv@exp:
   347                           	opt stack 0
   348  000018                     ___awtoft@c:
   349                           	opt stack 0
   350  000018                     ___altoft@c:
   351                           	opt stack 0
   352                           
   353                           ; 4 bytes @ 0x17
   354  000018                     	ds	1
   355  000019                     ___ftdiv@sign:
   356                           	opt stack 0
   357                           
   358                           ; 1 bytes @ 0x18
   359  000019                     	ds	2
   360  00001B                     ??___awtoft:
   361                           
   362                           ; 0 bytes @ 0x1A
   363  00001B                     	ds	1
   364  00001C                     ??___altoft:
   365  00001C                     ___awtoft@sign:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x1B
   369  00001C                     	ds	1
   370  00001D                     ?___ftmul:
   371                           	opt stack 0
   372  00001D                     ___ftmul@f1:
   373                           	opt stack 0
   374                           
   375                           ; 3 bytes @ 0x1C
   376  00001D                     	ds	3
   377  000020                     ___altoft@exp:
   378                           	opt stack 0
   379  000020                     ___ftmul@f2:
   380                           	opt stack 0
   381                           
   382                           ; 3 bytes @ 0x1F
   383  000020                     	ds	1
   384  000021                     ___altoft@sign:
   385                           	opt stack 0
   386                           
   387                           ; 1 bytes @ 0x20
   388  000021                     	ds	2
   389  000023                     ??___ftmul:
   390                           
   391                           ; 0 bytes @ 0x22
   392  000023                     	ds	5
   393  000028                     ___ftmul@exp:
   394                           	opt stack 0
   395                           
   396                           ; 1 bytes @ 0x27
   397  000028                     	ds	1
   398  000029                     ___ftmul@f3_as_product:
   399                           	opt stack 0
   400                           
   401                           ; 3 bytes @ 0x28
   402  000029                     	ds	3
   403  00002C                     ___ftmul@cntr:
   404                           	opt stack 0
   405                           
   406                           ; 1 bytes @ 0x2B
   407  00002C                     	ds	1
   408  00002D                     ___ftmul@sign:
   409                           	opt stack 0
   410                           
   411                           ; 1 bytes @ 0x2C
   412  00002D                     	ds	1
   413  00002E                     ?___ftadd:
   414                           	opt stack 0
   415  00002E                     ?___asftmul:
   416                           	opt stack 0
   417  00002E                     ___asftmul@f1p:
   418                           	opt stack 0
   419  00002E                     ___ftadd@f1:
   420                           	opt stack 0
   421                           
   422                           ; 3 bytes @ 0x2D
   423  00002E                     	ds	2
   424  000030                     ___asftmul@f2:
   425                           	opt stack 0
   426                           
   427                           ; 3 bytes @ 0x2F
   428  000030                     	ds	1
   429  000031                     ___ftadd@f2:
   430                           	opt stack 0
   431                           
   432                           ; 3 bytes @ 0x30
   433  000031                     	ds	2
   434  000033                     
   435                           ; 0 bytes @ 0x32
   436  000033                     	ds	1
   437  000034                     ??___ftadd:
   438                           
   439                           ; 0 bytes @ 0x33
   440  000034                     	ds	5
   441  000039                     ___ftadd@sign:
   442                           	opt stack 0
   443                           
   444                           ; 1 bytes @ 0x38
   445  000039                     	ds	1
   446  00003A                     ___ftadd@exp2:
   447                           	opt stack 0
   448                           
   449                           ; 1 bytes @ 0x39
   450  00003A                     	ds	1
   451  00003B                     ___ftadd@exp1:
   452                           	opt stack 0
   453                           
   454                           ; 1 bytes @ 0x3A
   455  00003B                     	ds	1
   456  00003C                     ?___ftsub:
   457                           	opt stack 0
   458  00003C                     ?_floor:
   459                           	opt stack 0
   460  00003C                     ?_eval_poly:
   461                           	opt stack 0
   462  00003C                     ___ftsub@f1:
   463                           	opt stack 0
   464  00003C                     floor@x:
   465                           	opt stack 0
   466  00003C                     eval_poly@x:
   467                           	opt stack 0
   468                           
   469                           ; 3 bytes @ 0x3B
   470  00003C                     	ds	3
   471  00003F                     eval_poly@d:
   472                           	opt stack 0
   473  00003F                     ___ftsub@f2:
   474                           	opt stack 0
   475  00003F                     floor@i:
   476                           	opt stack 0
   477                           
   478                           ; 3 bytes @ 0x3E
   479  00003F                     	ds	2
   480  000041                     eval_poly@n:
   481                           	opt stack 0
   482                           
   483                           ; 2 bytes @ 0x40
   484  000041                     	ds	1
   485  000042                     ?___asftsub:
   486                           	opt stack 0
   487  000042                     ___asftsub@f1p:
   488                           	opt stack 0
   489  000042                     floor@expon:
   490                           	opt stack 0
   491                           
   492                           ; 2 bytes @ 0x41
   493  000042                     	ds	1
   494  000043                     ??_eval_poly:
   495                           
   496                           ; 0 bytes @ 0x42
   497  000043                     	ds	1
   498  000044                     ___asftsub@f2:
   499                           	opt stack 0
   500                           
   501                           ; 3 bytes @ 0x43
   502  000044                     	ds	3
   503  000047                     
   504                           ; 0 bytes @ 0x46
   505  000047                     	ds	1
   506  000048                     eval_poly@res:
   507                           	opt stack 0
   508                           
   509                           ; 3 bytes @ 0x47
   510  000048                     	ds	3
   511  00004B                     ?_log:
   512                           	opt stack 0
   513  00004B                     log@x:
   514                           	opt stack 0
   515                           
   516                           ; 3 bytes @ 0x4A
   517  00004B                     	ds	3
   518  00004E                     log@exponent:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x4D
   522  00004E                     	ds	2
   523  000050                     ?_exp:
   524                           	opt stack 0
   525  000050                     exp@x:
   526                           	opt stack 0
   527                           
   528                           ; 3 bytes @ 0x4F
   529  000050                     	ds	3
   530  000053                     _exp$671:
   531                           	opt stack 0
   532                           
   533                           ; 3 bytes @ 0x52
   534  000053                     	ds	3
   535  000056                     exp@exponent:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x55
   539  000056                     	ds	2
   540  000058                     exp@sign:
   541                           	opt stack 0
   542                           
   543                           ; 1 bytes @ 0x57
   544  000058                     	ds	1
   545  000059                     ?_pow:
   546                           	opt stack 0
   547  000059                     pow@x:
   548                           	opt stack 0
   549                           
   550                           ; 3 bytes @ 0x58
   551  000059                     	ds	3
   552  00005C                     pow@y:
   553                           	opt stack 0
   554                           
   555                           ; 3 bytes @ 0x5B
   556  00005C                     	ds	3
   557  00005F                     ??_pow:
   558                           
   559                           ; 0 bytes @ 0x5E
   560  00005F                     	ds	1
   561  000060                     
   562                           ; 0 bytes @ 0x5F
   563 ;;
   564 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   565 ;;
   566 ;; *************** function _main *****************
   567 ;; Defined at:
   568 ;;		line 54 in file "main.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;  argc            2   25[BANK0 ] int 
   571 ;;  argv            3   27[BANK0 ] PTR PTR unsigned char 
   572 ;; Auto vars:     Size  Location     Type
   573 ;;		None
   574 ;; Return value:  Size  Location     Type
   575 ;;                  2   25[BANK0 ] int 
   576 ;; Registers used:
   577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   583 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   587 ;;Total ram usage:        5 bytes
   588 ;; Hardware stack levels required when called:    7
   589 ;; This function calls:
   590 ;;		_setup
   591 ;;		_program
   592 ;; This function is called by:
   593 ;;		Startup code after reset
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597                           	psect	text0
   598  0022B0                     __ptext0:
   599                           	opt stack 0
   600  0022B0                     _main:
   601                           	opt stack 23
   602                           
   603                           ;main.c: 55: setup();
   604                           
   605                           ;incstack = 0
   606                           ;incstack = 0
   607  0022B0  EC5D  F011         	call	_setup	;wreg free
   608  0022B4                     l2435:
   609                           
   610                           ;main.c: 57: program();
   611  0022B4  ECCA  F00A         	call	_program	;wreg free
   612  0022B8  D7FD               	goto	l2435
   613  0022BA                     __end_of_main:
   614                           	opt stack 0
   615                           
   616 ;; *************** function _program *****************
   617 ;; Defined at:
   618 ;;		line 32 in file "main.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;  j               2   22[BANK0 ] int 
   623 ;;  i               2   20[BANK0 ] int 
   624 ;;  imLed           1   24[BANK0 ] unsigned char 
   625 ;;  Sens            1   13[BANK0 ] unsigned char 
   626 ;;  Leds            1   12[BANK0 ] unsigned char 
   627 ;; Return value:  Size  Location     Type
   628 ;;		None               void
   629 ;; Registers used:
   630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   637 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   638 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   639 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   640 ;;Total ram usage:       14 bytes
   641 ;; Hardware stack levels used:    1
   642 ;; Hardware stack levels required when called:    6
   643 ;; This function calls:
   644 ;;		_leds
   645 ;;		_pow
   646 ;;		___awtoft
   647 ;;		___fttol
   648 ;; This function is called by:
   649 ;;		_main
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           	psect	text1
   654  001594                     __ptext1:
   655                           	opt stack 0
   656  001594                     _program:
   657                           	opt stack 23
   658                           
   659                           ;main.c: 33: unsigned char Leds=0x00;
   660                           
   661                           ;incstack = 0
   662                           ;incstack = 0
   663  001594  0100               	movlb	0	; () banked
   664  001596  6F6B               	movwf	??_program& (0+255),b
   665  001598  0E00               	movlw	0
   666  00159A  0100               	movlb	0	; () banked
   667  00159C  0100               	movlb	0	; () banked
   668  00159E  6F6C               	movwf	program@Leds& (0+255),b
   669  0015A0  0100               	movlb	0	; () banked
   670  0015A2  516B               	movf	??_program& (0+255),w,b
   671                           
   672                           ;main.c: 34: unsigned char Sens=0;
   673  0015A4  0100               	movlb	0	; () banked
   674  0015A6  6F6B               	movwf	??_program& (0+255),b
   675  0015A8  0E00               	movlw	0
   676  0015AA  0100               	movlb	0	; () banked
   677  0015AC  0100               	movlb	0	; () banked
   678  0015AE  6F6D               	movwf	program@Sens& (0+255),b
   679  0015B0  0100               	movlb	0	; () banked
   680  0015B2  516B               	movf	??_program& (0+255),w,b
   681                           
   682                           ;main.c: 35: unsigned char imLed=0x00;
   683  0015B4  0100               	movlb	0	; () banked
   684  0015B6  6F6B               	movwf	??_program& (0+255),b
   685  0015B8  0E00               	movlw	0
   686  0015BA  0100               	movlb	0	; () banked
   687  0015BC  0100               	movlb	0	; () banked
   688  0015BE  6F78               	movwf	program@imLed& (0+255),b
   689  0015C0  0100               	movlb	0	; () banked
   690  0015C2  516B               	movf	??_program& (0+255),w,b
   691                           
   692                           ; BSR set to: 0
   693                           ;main.c: 36: int i=0, j=0;
   694  0015C4  0E00               	movlw	0
   695  0015C6  0100               	movlb	0	; () banked
   696  0015C8  0100               	movlb	0	; () banked
   697  0015CA  6F75               	movwf	(program@i+1)& (0+255),b
   698  0015CC  0E00               	movlw	0
   699  0015CE  0100               	movlb	0	; () banked
   700  0015D0  6F74               	movwf	program@i& (0+255),b
   701                           
   702                           ; BSR set to: 0
   703  0015D2  0E00               	movlw	0
   704  0015D4  0100               	movlb	0	; () banked
   705  0015D6  0100               	movlb	0	; () banked
   706  0015D8  6F77               	movwf	(program@j+1)& (0+255),b
   707  0015DA  0E00               	movlw	0
   708  0015DC  0100               	movlb	0	; () banked
   709  0015DE  6F76               	movwf	program@j& (0+255),b
   710                           
   711                           ; BSR set to: 0
   712                           ;main.c: 38: for(i=0;i<9;i++){
   713  0015E0  0E00               	movlw	0
   714  0015E2  0100               	movlb	0	; () banked
   715  0015E4  0100               	movlb	0	; () banked
   716  0015E6  6F75               	movwf	(program@i+1)& (0+255),b
   717  0015E8  0E00               	movlw	0
   718  0015EA  0100               	movlb	0	; () banked
   719  0015EC  6F74               	movwf	program@i& (0+255),b
   720  0015EE                     
   721                           ; BSR set to: 0
   722  0015EE  0100               	movlb	0	; () banked
   723  0015F0  0100               	movlb	0	; () banked
   724  0015F2  5175               	movf	(program@i+1)& (0+255),w,b
   725  0015F4  0A80               	xorlw	128
   726  0015F6  0F80               	addlw	-128
   727  0015F8  0E09               	movlw	9
   728  0015FA  B4D8               	btfsc	status,2,c
   729  0015FC  5D74               	subwf	program@i& (0+255),w,b
   730  0015FE  B0D8               	btfsc	status,0,c
   731  001600  0012               	return	
   732                           
   733                           ; BSR set to: 0
   734                           ;main.c: 39: leds(imLed);
   735                           
   736                           ; BSR set to: 0
   737                           
   738                           ; BSR set to: 0
   739  001602  C078  F001         	movff	program@imLed,?_leds
   740  001606  EC24  F011         	call	_leds	;wreg free
   741                           
   742                           ;main.c: 40: imLed=imLed+((unsigned char)pow((double)2,(double)i));
   743  00160A  C074  F018         	movff	program@i,?___awtoft
   744  00160E  C075  F019         	movff	program@i+1,?___awtoft+1
   745  001612  EC8E  F010         	call	___awtoft	;wreg free
   746  001616  C01A  F070         	movff	?___awtoft+2,_program$667+2
   747  00161A  C019  F06F         	movff	?___awtoft+1,_program$667+1
   748  00161E  C018  F06E         	movff	?___awtoft,_program$667
   749                           
   750                           ;main.c: 40: imLed=imLed+((unsigned char)pow((double)2,(double)i));
   751  001622  C06E  F05C         	movff	_program$667,?_pow+3
   752  001626  C06F  F05D         	movff	_program$667+1,?_pow+4
   753  00162A  C070  F05E         	movff	_program$667+2,?_pow+5
   754  00162E  0E00               	movlw	0
   755  001630  6E59               	movwf	?_pow,c
   756  001632  0E00               	movlw	0
   757  001634  6E5A               	movwf	?_pow+1,c
   758  001636  0E40               	movlw	64
   759  001638  6E5B               	movwf	?_pow+2,c
   760  00163A  ECF6  F009         	call	_pow	;wreg free
   761  00163E  C05B  F073         	movff	?_pow+2,_program$668+2
   762  001642  C05A  F072         	movff	?_pow+1,_program$668+1
   763  001646  C059  F071         	movff	?_pow,_program$668
   764                           
   765                           ;main.c: 40: imLed=imLed+((unsigned char)pow((double)2,(double)i));
   766  00164A  C071  F009         	movff	_program$668,?___fttol
   767  00164E  C072  F00A         	movff	_program$668+1,?___fttol+1
   768  001652  C073  F00B         	movff	_program$668+2,?___fttol+2
   769  001656  EC4B  F00D         	call	___fttol	;wreg free
   770  00165A  5009               	movf	?___fttol,w,c
   771  00165C  0100               	movlb	0	; () banked
   772  00165E  0100               	movlb	0	; () banked
   773  001660  2578               	addwf	program@imLed& (0+255),w,b
   774  001662  0100               	movlb	0	; () banked
   775  001664  0100               	movlb	0	; () banked
   776  001666  6F78               	movwf	program@imLed& (0+255),b
   777                           
   778                           ; BSR set to: 0
   779                           ;main.c: 41: _delay((unsigned long)((100)*(4000000/4000.0)));
   780  001668  0E82               	movlw	130
   781  00166A  0100               	movlb	0	; () banked
   782  00166C  6F6B               	movwf	??_program& (0+255),b
   783  00166E  0EDD               	movlw	221
   784  001670                     u1757:
   785  001670  2EE8               	decfsz	wreg,f,c
   786  001672  D7FE               	goto	u1757
   787  001674  2F6B               	decfsz	??_program& (0+255),f,b
   788  001676  D7FC               	goto	u1757
   789  001678  D000               	nop2	
   790                           
   791                           ;main.c: 43: if (imLed==0xFF){
   792  00167A  0100               	movlb	0	; () banked
   793  00167C  0100               	movlb	0	; () banked
   794  00167E  2978               	incf	program@imLed& (0+255),w,b
   795  001680  A4D8               	btfss	status,2,c
   796  001682  D054               	goto	l2429
   797                           
   798                           ; BSR set to: 0
   799                           ;main.c: 44: for (j=9;j>-1;j--){
   800  001684  0E00               	movlw	0
   801  001686  0100               	movlb	0	; () banked
   802  001688  0100               	movlb	0	; () banked
   803  00168A  6F77               	movwf	(program@j+1)& (0+255),b
   804  00168C  0E09               	movlw	9
   805  00168E  0100               	movlb	0	; () banked
   806  001690  6F76               	movwf	program@j& (0+255),b
   807  001692                     
   808                           ; BSR set to: 0
   809  001692  0100               	movlb	0	; () banked
   810  001694  0100               	movlb	0	; () banked
   811  001696  BF77               	btfsc	(program@j+1)& (0+255),7,b
   812  001698  D049               	goto	l2429
   813                           
   814                           ; BSR set to: 0
   815                           ;main.c: 45: imLed=imLed-((unsigned char)pow((double)2,(double)((j-1))));
   816                           
   817                           ; BSR set to: 0
   818                           
   819                           ; BSR set to: 0
   820  00169A  0EFF               	movlw	255
   821  00169C  0100               	movlb	0	; () banked
   822  00169E  0100               	movlb	0	; () banked
   823  0016A0  2576               	addwf	program@j& (0+255),w,b
   824  0016A2  6E18               	movwf	?___awtoft,c
   825  0016A4  0EFF               	movlw	255
   826  0016A6  0100               	movlb	0	; () banked
   827  0016A8  0100               	movlb	0	; () banked
   828  0016AA  2177               	addwfc	(program@j+1)& (0+255),w,b
   829  0016AC  6E19               	movwf	?___awtoft+1,c
   830  0016AE  EC8E  F010         	call	___awtoft	;wreg free
   831  0016B2  C01A  F070         	movff	?___awtoft+2,_program$667+2
   832  0016B6  C019  F06F         	movff	?___awtoft+1,_program$667+1
   833  0016BA  C018  F06E         	movff	?___awtoft,_program$667
   834                           
   835                           ;main.c: 45: imLed=imLed-((unsigned char)pow((double)2,(double)((j-1))));
   836  0016BE  C06E  F05C         	movff	_program$667,?_pow+3
   837  0016C2  C06F  F05D         	movff	_program$667+1,?_pow+4
   838  0016C6  C070  F05E         	movff	_program$667+2,?_pow+5
   839  0016CA  0E00               	movlw	0
   840  0016CC  6E59               	movwf	?_pow,c
   841  0016CE  0E00               	movlw	0
   842  0016D0  6E5A               	movwf	?_pow+1,c
   843  0016D2  0E40               	movlw	64
   844  0016D4  6E5B               	movwf	?_pow+2,c
   845  0016D6  ECF6  F009         	call	_pow	;wreg free
   846  0016DA  C05B  F073         	movff	?_pow+2,_program$668+2
   847  0016DE  C05A  F072         	movff	?_pow+1,_program$668+1
   848  0016E2  C059  F071         	movff	?_pow,_program$668
   849                           
   850                           ;main.c: 45: imLed=imLed-((unsigned char)pow((double)2,(double)((j-1))));
   851  0016E6  C071  F009         	movff	_program$668,?___fttol
   852  0016EA  C072  F00A         	movff	_program$668+1,?___fttol+1
   853  0016EE  C073  F00B         	movff	_program$668+2,?___fttol+2
   854  0016F2  EC4B  F00D         	call	___fttol	;wreg free
   855  0016F6  5009               	movf	?___fttol,w,c
   856  0016F8  0800               	sublw	0
   857  0016FA  0100               	movlb	0	; () banked
   858  0016FC  0100               	movlb	0	; () banked
   859  0016FE  2578               	addwf	program@imLed& (0+255),w,b
   860  001700  0100               	movlb	0	; () banked
   861  001702  0100               	movlb	0	; () banked
   862  001704  6F78               	movwf	program@imLed& (0+255),b
   863                           
   864                           ; BSR set to: 0
   865                           ;main.c: 46: leds(imLed);
   866  001706  C078  F001         	movff	program@imLed,?_leds
   867  00170A  EC24  F011         	call	_leds	;wreg free
   868                           
   869                           ;main.c: 47: _delay((unsigned long)((100)*(4000000/4000.0)));
   870  00170E  0E82               	movlw	130
   871  001710  0100               	movlb	0	; () banked
   872  001712  6F6B               	movwf	??_program& (0+255),b
   873  001714  0EDD               	movlw	221
   874  001716                     u1767:
   875  001716  2EE8               	decfsz	wreg,f,c
   876  001718  D7FE               	goto	u1767
   877  00171A  2F6B               	decfsz	??_program& (0+255),f,b
   878  00171C  D7FC               	goto	u1767
   879  00171E  D000               	nop2	
   880  001720  0100               	movlb	0	; () banked
   881  001722  0100               	movlb	0	; () banked
   882  001724  0776               	decf	program@j& (0+255),f,b
   883  001726  A0D8               	btfss	status,0,c
   884  001728  0777               	decf	(program@j+1)& (0+255),f,b
   885  00172A  D7B3               	goto	L1
   886  00172C                     l2429:
   887                           
   888                           ; BSR set to: 0
   889  00172C  0100               	movlb	0	; () banked
   890  00172E  0100               	movlb	0	; () banked
   891  001730  4B74               	infsnz	program@i& (0+255),f,b
   892  001732  2B75               	incf	(program@i+1)& (0+255),f,b
   893  001734  D75C               	goto	L2
   894  001736                     __end_of_program:
   895                           	opt stack 0
   896                           wreg	equ	0xFE8
   897                           status	equ	0xFD8
   898                           
   899 ;; *************** function _pow *****************
   900 ;; Defined at:
   901 ;;		line 6 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\pow.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;  x               3   88[COMRAM] unsigned char 
   904 ;;  y               3   91[COMRAM] unsigned char 
   905 ;; Auto vars:     Size  Location     Type
   906 ;;  yi              4    7[BANK0 ] unsigned long 
   907 ;;  sign            1    6[BANK0 ] unsigned char 
   908 ;; Return value:  Size  Location     Type
   909 ;;                  3   88[COMRAM] unsigned char 
   910 ;; Registers used:
   911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   917 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   918 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   919 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   920 ;;      Totals:         7      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;Total ram usage:       18 bytes
   922 ;; Hardware stack levels used:    1
   923 ;; Hardware stack levels required when called:    5
   924 ;; This function calls:
   925 ;;		___ftmul
   926 ;;		___ftge
   927 ;;		___ftneg
   928 ;;		___fttol
   929 ;;		___lltoft
   930 ;;		_log
   931 ;;		_exp
   932 ;; This function is called by:
   933 ;;		_program
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           	psect	text2
   938  0013EC                     __ptext2:
   939                           	opt stack 0
   940  0013EC                     _pow:
   941                           	opt stack 23
   942                           
   943                           ; BSR set to: 0
   944                           ;incstack = 0
   945                           ;incstack = 0
   946  0013EC  6E5F               	movwf	??_pow& (0+255),c
   947  0013EE  0E00               	movlw	0
   948  0013F0  0100               	movlb	0	; () banked
   949  0013F2  0100               	movlb	0	; () banked
   950  0013F4  6F66               	movwf	pow@sign& (0+255),b
   951  0013F6  505F               	movf	??_pow& (0+255),w,c
   952                           
   953                           ; BSR set to: 0
   954  0013F8  0E7F               	movlw	127
   955  0013FA  145B               	andwf	pow@x+2,w,c
   956  0013FC  105A               	iorwf	pow@x+1,w,c
   957  0013FE  1059               	iorwf	pow@x,w,c
   958  001400  A4D8               	btfss	status,2,c
   959  001402  D01E               	goto	l2357
   960                           
   961                           ; BSR set to: 0
   962  001404  0E00               	movlw	0
   963  001406  6E01               	movwf	?___ftge,c
   964  001408  0E00               	movlw	0
   965  00140A  6E02               	movwf	?___ftge+1,c
   966  00140C  0E00               	movlw	0
   967  00140E  6E03               	movwf	?___ftge+2,c
   968  001410  C05C  F004         	movff	pow@y,?___ftge+3
   969  001414  C05D  F005         	movff	pow@y+1,?___ftge+4
   970  001418  C05E  F006         	movff	pow@y+2,?___ftge+5
   971  00141C  EC8A  F00F         	call	___ftge	;wreg free
   972  001420  A0D8               	btfss	status,0,c
   973  001422  D007               	goto	l579
   974  001424  0E00               	movlw	0
   975  001426  0100               	movlb	0	; () banked
   976  001428  0100               	movlb	0	; () banked
   977  00142A  6F7F               	movwf	(_errno+1)& (0+255),b
   978  00142C  0E21               	movlw	33
   979  00142E  0100               	movlb	0	; () banked
   980  001430  6F7E               	movwf	_errno& (0+255),b
   981  001432                     l579:
   982  001432  0E00               	movlw	0
   983  001434  6E59               	movwf	?_pow,c
   984  001436  0E00               	movlw	0
   985  001438  6E5A               	movwf	?_pow+1,c
   986  00143A  0E00               	movlw	0
   987  00143C  6E5B               	movwf	?_pow+2,c
   988  00143E  0012               	return	
   989  001440                     l2357:
   990  001440  0E7F               	movlw	127
   991  001442  145E               	andwf	pow@y+2,w,c
   992  001444  105D               	iorwf	pow@y+1,w,c
   993  001446  105C               	iorwf	pow@y,w,c
   994  001448  A4D8               	btfss	status,2,c
   995  00144A  D007               	goto	l2363
   996  00144C  0E00               	movlw	0
   997  00144E  6E59               	movwf	?_pow,c
   998  001450  0E80               	movlw	128
   999  001452  6E5A               	movwf	?_pow+1,c
  1000  001454  0E3F               	movlw	63
  1001  001456  6E5B               	movwf	?_pow+2,c
  1002  001458  0012               	return	
  1003  00145A                     l2363:
  1004  00145A  505B               	movf	pow@x+2,w,c
  1005  00145C  0A80               	xorlw	128
  1006  00145E  0F80               	addlw	128
  1007  001460  E105               	bnz	u1675
  1008  001462  0E00               	movlw	0
  1009  001464  5C5A               	subwf	pow@x+1,w,c
  1010  001466  E102               	bnz	u1675
  1011  001468  0E00               	movlw	0
  1012  00146A  5C59               	subwf	pow@x,w,c
  1013  00146C                     u1675:
  1014  00146C  B0D8               	btfsc	status,0,c
  1015  00146E  D047               	goto	l2375
  1016  001470  C05C  F009         	movff	pow@y,?___fttol
  1017  001474  C05D  F00A         	movff	pow@y+1,?___fttol+1
  1018  001478  C05E  F00B         	movff	pow@y+2,?___fttol+2
  1019  00147C  EC4B  F00D         	call	___fttol	;wreg free
  1020  001480  C00C  F06A         	movff	?___fttol+3,pow@yi+3
  1021  001484  C00B  F069         	movff	?___fttol+2,pow@yi+2
  1022  001488  C00A  F068         	movff	?___fttol+1,pow@yi+1
  1023  00148C  C009  F067         	movff	?___fttol,pow@yi
  1024  001490  C067  F009         	movff	pow@yi,?___lltoft
  1025  001494  C068  F00A         	movff	pow@yi+1,?___lltoft+1
  1026  001498  C069  F00B         	movff	pow@yi+2,?___lltoft+2
  1027  00149C  C06A  F00C         	movff	pow@yi+3,?___lltoft+3
  1028  0014A0  EC5C  F010         	call	___lltoft	;wreg free
  1029  0014A4  505E               	movf	pow@y+2,w,c
  1030  0014A6  180B               	xorwf	?___lltoft+2,w,c
  1031  0014A8  E105               	bnz	u1685
  1032  0014AA  505D               	movf	pow@y+1,w,c
  1033  0014AC  180A               	xorwf	?___lltoft+1,w,c
  1034  0014AE  E102               	bnz	u1685
  1035  0014B0  505C               	movf	pow@y,w,c
  1036  0014B2  1809               	xorwf	?___lltoft,w,c
  1037  0014B4                     u1685:
  1038  0014B4  B4D8               	btfsc	status,2,c
  1039  0014B6  D00E               	goto	l2371
  1040  0014B8  0E00               	movlw	0
  1041  0014BA  0100               	movlb	0	; () banked
  1042  0014BC  0100               	movlb	0	; () banked
  1043  0014BE  6F7F               	movwf	(_errno+1)& (0+255),b
  1044  0014C0  0E21               	movlw	33
  1045  0014C2  0100               	movlb	0	; () banked
  1046  0014C4  6F7E               	movwf	_errno& (0+255),b
  1047  0014C6  0E00               	movlw	0
  1048  0014C8  6E59               	movwf	?_pow,c
  1049  0014CA  0E00               	movlw	0
  1050  0014CC  6E5A               	movwf	?_pow+1,c
  1051  0014CE  0E00               	movlw	0
  1052  0014D0  6E5B               	movwf	?_pow+2,c
  1053  0014D2  0012               	return	
  1054  0014D4                     l2371:
  1055  0014D4  0100               	movlb	0	; () banked
  1056  0014D6  0100               	movlb	0	; () banked
  1057  0014D8  5167               	movf	pow@yi& (0+255),w,b
  1058  0014DA  0B01               	andlw	1
  1059  0014DC  0100               	movlb	0	; () banked
  1060  0014DE  0100               	movlb	0	; () banked
  1061  0014E0  6F66               	movwf	pow@sign& (0+255),b
  1062                           
  1063                           ; BSR set to: 0
  1064  0014E2  C059  F001         	movff	pow@x,?___ftneg
  1065  0014E6  C05A  F002         	movff	pow@x+1,?___ftneg+1
  1066  0014EA  C05B  F003         	movff	pow@x+2,?___ftneg+2
  1067  0014EE  EC3F  F011         	call	___ftneg	;wreg free
  1068  0014F2  C003  F05B         	movff	?___ftneg+2,pow@x+2
  1069  0014F6  C002  F05A         	movff	?___ftneg+1,pow@x+1
  1070  0014FA  C001  F059         	movff	?___ftneg,pow@x
  1071  0014FE                     l2375:
  1072  0014FE  C059  F04B         	movff	pow@x,?_log
  1073  001502  C05A  F04C         	movff	pow@x+1,?_log+1
  1074  001506  C05B  F04D         	movff	pow@x+2,?_log+2
  1075  00150A  EC9B  F00B         	call	_log	;wreg free
  1076  00150E  C04D  F062         	movff	?_log+2,_pow$669+2
  1077  001512  C04C  F061         	movff	?_log+1,_pow$669+1
  1078  001516  C04B  F060         	movff	?_log,_pow$669
  1079  00151A  C060  F01D         	movff	_pow$669,?___ftmul
  1080  00151E  C061  F01E         	movff	_pow$669+1,?___ftmul+1
  1081  001522  C062  F01F         	movff	_pow$669+2,?___ftmul+2
  1082  001526  C05C  F020         	movff	pow@y,?___ftmul+3
  1083  00152A  C05D  F021         	movff	pow@y+1,?___ftmul+4
  1084  00152E  C05E  F022         	movff	pow@y+2,?___ftmul+5
  1085  001532  EC38  F00C         	call	___ftmul	;wreg free
  1086  001536  C01F  F065         	movff	?___ftmul+2,_pow$670+2
  1087  00153A  C01E  F064         	movff	?___ftmul+1,_pow$670+1
  1088  00153E  C01D  F063         	movff	?___ftmul,_pow$670
  1089  001542  C063  F050         	movff	_pow$670,?_exp
  1090  001546  C064  F051         	movff	_pow$670+1,?_exp+1
  1091  00154A  C065  F052         	movff	_pow$670+2,?_exp+2
  1092  00154E  EC1D  F008         	call	_exp	;wreg free
  1093  001552  C052  F05B         	movff	?_exp+2,pow@x+2
  1094  001556  C051  F05A         	movff	?_exp+1,pow@x+1
  1095  00155A  C050  F059         	movff	?_exp,pow@x
  1096  00155E  0100               	movlb	0	; () banked
  1097  001560  0100               	movlb	0	; () banked
  1098  001562  5166               	movf	pow@sign& (0+255),w,b
  1099  001564  B4D8               	btfsc	status,2,c
  1100  001566  D00F               	goto	l584
  1101                           
  1102                           ; BSR set to: 0
  1103  001568  C059  F001         	movff	pow@x,?___ftneg
  1104  00156C  C05A  F002         	movff	pow@x+1,?___ftneg+1
  1105  001570  C05B  F003         	movff	pow@x+2,?___ftneg+2
  1106  001574  EC3F  F011         	call	___ftneg	;wreg free
  1107  001578  C003  F05B         	movff	?___ftneg+2,?_pow+2
  1108  00157C  C002  F05A         	movff	?___ftneg+1,?_pow+1
  1109  001580  C001  F059         	movff	?___ftneg,?_pow
  1110  001584  0012               	return	
  1111  001586                     l584:
  1112                           
  1113                           ; BSR set to: 0
  1114  001586  C059  F059         	movff	pow@x,?_pow
  1115  00158A  C05A  F05A         	movff	pow@x+1,?_pow+1
  1116  00158E  C05B  F05B         	movff	pow@x+2,?_pow+2
  1117  001592  0012               	return	
  1118  001594                     __end_of_pow:
  1119                           	opt stack 0
  1120                           wreg	equ	0xFE8
  1121                           status	equ	0xFD8
  1122                           
  1123 ;; *************** function _exp *****************
  1124 ;; Defined at:
  1125 ;;		line 13 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\exp.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  x               3   79[COMRAM] unsigned char 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  exponent        2   85[COMRAM] int 
  1130 ;;  sign            1   87[COMRAM] unsigned char 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  3   79[COMRAM] unsigned char 
  1133 ;; Registers used:
  1134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1140 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1141 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1143 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1144 ;;Total ram usage:        9 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    4
  1147 ;; This function calls:
  1148 ;;		___ftdiv
  1149 ;;		___asftmul
  1150 ;;		___asftsub
  1151 ;;		___awtoft
  1152 ;;		___ftge
  1153 ;;		___ftneg
  1154 ;;		___fttol
  1155 ;;		_floor
  1156 ;;		_eval_poly
  1157 ;;		_ldexp
  1158 ;; This function is called by:
  1159 ;;		_pow
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           
  1163                           	psect	text3
  1164  00103A                     __ptext3:
  1165                           	opt stack 0
  1166  00103A                     _exp:
  1167                           	opt stack 23
  1168                           
  1169                           ;incstack = 0
  1170                           ;incstack = 0
  1171  00103A  0E7F               	movlw	127
  1172  00103C  1452               	andwf	exp@x+2,w,c
  1173  00103E  1051               	iorwf	exp@x+1,w,c
  1174  001040  1050               	iorwf	exp@x,w,c
  1175  001042  A4D8               	btfss	status,2,c
  1176  001044  D007               	goto	l2309
  1177  001046  0E00               	movlw	0
  1178  001048  6E50               	movwf	?_exp,c
  1179  00104A  0E80               	movlw	128
  1180  00104C  6E51               	movwf	?_exp+1,c
  1181  00104E  0E3F               	movlw	63
  1182  001050  6E52               	movwf	?_exp+2,c
  1183  001052  0012               	return	
  1184  001054                     l2309:
  1185  001054  0E72               	movlw	114
  1186  001056  6E01               	movwf	?___ftge,c
  1187  001058  0E31               	movlw	49
  1188  00105A  6E02               	movwf	?___ftge+1,c
  1189  00105C  0E44               	movlw	68
  1190  00105E  6E03               	movwf	?___ftge+2,c
  1191  001060  C050  F004         	movff	exp@x,?___ftge+3
  1192  001064  C051  F005         	movff	exp@x+1,?___ftge+4
  1193  001068  C052  F006         	movff	exp@x+2,?___ftge+5
  1194  00106C  EC8A  F00F         	call	___ftge	;wreg free
  1195  001070  B0D8               	btfsc	status,0,c
  1196  001072  D00E               	goto	l2315
  1197  001074  0E00               	movlw	0
  1198  001076  0100               	movlb	0	; () banked
  1199  001078  0100               	movlb	0	; () banked
  1200  00107A  6F7F               	movwf	(_errno+1)& (0+255),b
  1201  00107C  0E22               	movlw	34
  1202  00107E  0100               	movlb	0	; () banked
  1203  001080  6F7E               	movwf	_errno& (0+255),b
  1204  001082  0EFF               	movlw	255
  1205  001084  6E50               	movwf	?_exp,c
  1206  001086  0E7F               	movlw	127
  1207  001088  6E51               	movwf	?_exp+1,c
  1208  00108A  0E7F               	movlw	127
  1209  00108C  6E52               	movwf	?_exp+2,c
  1210  00108E  0012               	return	
  1211  001090                     l2315:
  1212  001090  C050  F001         	movff	exp@x,?___ftge
  1213  001094  C051  F002         	movff	exp@x+1,?___ftge+1
  1214  001098  C052  F003         	movff	exp@x+2,?___ftge+2
  1215  00109C  0E49               	movlw	73
  1216  00109E  6E04               	movwf	?___ftge+3,c
  1217  0010A0  0E3A               	movlw	58
  1218  0010A2  6E05               	movwf	?___ftge+4,c
  1219  0010A4  0EC4               	movlw	196
  1220  0010A6  6E06               	movwf	?___ftge+5,c
  1221  0010A8  EC8A  F00F         	call	___ftge	;wreg free
  1222  0010AC  B0D8               	btfsc	status,0,c
  1223  0010AE  D00E               	goto	l2321
  1224  0010B0  0E00               	movlw	0
  1225  0010B2  0100               	movlb	0	; () banked
  1226  0010B4  0100               	movlb	0	; () banked
  1227  0010B6  6F7F               	movwf	(_errno+1)& (0+255),b
  1228  0010B8  0E22               	movlw	34
  1229  0010BA  0100               	movlb	0	; () banked
  1230  0010BC  6F7E               	movwf	_errno& (0+255),b
  1231  0010BE  0E00               	movlw	0
  1232  0010C0  6E50               	movwf	?_exp,c
  1233  0010C2  0E00               	movlw	0
  1234  0010C4  6E51               	movwf	?_exp+1,c
  1235  0010C6  0E00               	movlw	0
  1236  0010C8  6E52               	movwf	?_exp+2,c
  1237  0010CA  0012               	return	
  1238  0010CC                     l2321:
  1239  0010CC  5052               	movf	exp@x+2,w,c
  1240  0010CE  0A80               	xorlw	128
  1241  0010D0  0F80               	addlw	128
  1242  0010D2  E105               	bnz	u1605
  1243  0010D4  0E00               	movlw	0
  1244  0010D6  5C51               	subwf	exp@x+1,w,c
  1245  0010D8  E102               	bnz	u1605
  1246  0010DA  0E00               	movlw	0
  1247  0010DC  5C50               	subwf	exp@x,w,c
  1248  0010DE                     u1605:
  1249  0010DE  B0D8               	btfsc	status,0,c
  1250  0010E0  D002               	goto	u1600
  1251  0010E2  0E01               	movlw	1
  1252  0010E4  D001               	goto	u1606
  1253  0010E6                     u1600:
  1254  0010E6  0E00               	movlw	0
  1255  0010E8                     u1606:
  1256  0010E8  6E58               	movwf	exp@sign,c
  1257  0010EA  5058               	movf	exp@sign,w,c
  1258  0010EC  B4D8               	btfsc	status,2,c
  1259  0010EE  D00E               	goto	l2327
  1260  0010F0  C050  F001         	movff	exp@x,?___ftneg
  1261  0010F4  C051  F002         	movff	exp@x+1,?___ftneg+1
  1262  0010F8  C052  F003         	movff	exp@x+2,?___ftneg+2
  1263  0010FC  EC3F  F011         	call	___ftneg	;wreg free
  1264  001100  C003  F052         	movff	?___ftneg+2,exp@x+2
  1265  001104  C002  F051         	movff	?___ftneg+1,exp@x+1
  1266  001108  C001  F050         	movff	?___ftneg,exp@x
  1267  00110C                     l2327:
  1268  00110C  0E00               	movlw	high exp@x
  1269  00110E  6E2F               	movwf	?___asftmul+1,c
  1270  001110  0E50               	movlw	low exp@x
  1271  001112  6E2E               	movwf	?___asftmul,c
  1272  001114  0EAA               	movlw	170
  1273  001116  6E30               	movwf	?___asftmul+2,c
  1274  001118  0EB8               	movlw	184
  1275  00111A  6E31               	movwf	?___asftmul+3,c
  1276  00111C  0E3F               	movlw	63
  1277  00111E  6E32               	movwf	?___asftmul+4,c
  1278  001120  ECCE  F010         	call	___asftmul	;wreg free
  1279  001124  C050  F03C         	movff	exp@x,?_floor
  1280  001128  C051  F03D         	movff	exp@x+1,?_floor+1
  1281  00112C  C052  F03E         	movff	exp@x+2,?_floor+2
  1282  001130  ECCC  F00D         	call	_floor	;wreg free
  1283  001134  C03E  F055         	movff	?_floor+2,_exp$671+2
  1284  001138  C03D  F054         	movff	?_floor+1,_exp$671+1
  1285  00113C  C03C  F053         	movff	?_floor,_exp$671
  1286  001140  C053  F009         	movff	_exp$671,?___fttol
  1287  001144  C054  F00A         	movff	_exp$671+1,?___fttol+1
  1288  001148  C055  F00B         	movff	_exp$671+2,?___fttol+2
  1289  00114C  EC4B  F00D         	call	___fttol	;wreg free
  1290  001150  C009  F056         	movff	?___fttol,exp@exponent
  1291  001154  C00A  F057         	movff	?___fttol+1,exp@exponent+1
  1292  001158  0E00               	movlw	high exp@x
  1293  00115A  6E43               	movwf	?___asftsub+1,c
  1294  00115C  0E50               	movlw	low exp@x
  1295  00115E  6E42               	movwf	?___asftsub,c
  1296  001160  C056  F018         	movff	exp@exponent,?___awtoft
  1297  001164  C057  F019         	movff	exp@exponent+1,?___awtoft+1
  1298  001168  EC8E  F010         	call	___awtoft	;wreg free
  1299  00116C  C01A  F046         	movff	?___awtoft+2,?___asftsub+4
  1300  001170  C019  F045         	movff	?___awtoft+1,?___asftsub+3
  1301  001174  C018  F044         	movff	?___awtoft,?___asftsub+2
  1302  001178  ECB0  F010         	call	___asftsub	;wreg free
  1303  00117C  C050  F03C         	movff	exp@x,?_eval_poly
  1304  001180  C051  F03D         	movff	exp@x+1,?_eval_poly+1
  1305  001184  C052  F03E         	movff	exp@x+2,?_eval_poly+2
  1306  001188  0E10               	movlw	high exp@coeff
  1307  00118A  6E40               	movwf	?_eval_poly+4,c
  1308  00118C  0E00               	movlw	low exp@coeff
  1309  00118E  6E3F               	movwf	?_eval_poly+3,c
  1310  001190  0E00               	movlw	0
  1311  001192  6E42               	movwf	?_eval_poly+6,c
  1312  001194  0E09               	movlw	9
  1313  001196  6E41               	movwf	?_eval_poly+5,c
  1314  001198  ECB9  F00E         	call	_eval_poly	;wreg free
  1315  00119C  C03E  F00B         	movff	?_eval_poly+2,?_ldexp+2
  1316  0011A0  C03D  F00A         	movff	?_eval_poly+1,?_ldexp+1
  1317  0011A4  C03C  F009         	movff	?_eval_poly,?_ldexp
  1318  0011A8  C056  F00C         	movff	exp@exponent,?_ldexp+3
  1319  0011AC  C057  F00D         	movff	exp@exponent+1,?_ldexp+4
  1320  0011B0  EC44  F00E         	call	_ldexp	;wreg free
  1321  0011B4  C00B  F052         	movff	?_ldexp+2,exp@x+2
  1322  0011B8  C00A  F051         	movff	?_ldexp+1,exp@x+1
  1323  0011BC  C009  F050         	movff	?_ldexp,exp@x
  1324  0011C0  5058               	movf	exp@sign,w,c
  1325  0011C2  B4D8               	btfsc	status,2,c
  1326  0011C4  D026               	goto	l613
  1327  0011C6  0EFF               	movlw	255
  1328  0011C8  1850               	xorwf	exp@x,w,c
  1329  0011CA  0E7F               	movlw	127
  1330  0011CC  B4D8               	btfsc	status,2,c
  1331  0011CE  1851               	xorwf	exp@x+1,w,c
  1332  0011D0  0E7F               	movlw	127
  1333  0011D2  B4D8               	btfsc	status,2,c
  1334  0011D4  1852               	xorwf	exp@x+2,w,c
  1335  0011D6  A4D8               	btfss	status,2,c
  1336  0011D8  D007               	goto	l2343
  1337  0011DA  0E00               	movlw	0
  1338  0011DC  6E50               	movwf	?_exp,c
  1339  0011DE  0E00               	movlw	0
  1340  0011E0  6E51               	movwf	?_exp+1,c
  1341  0011E2  0E00               	movlw	0
  1342  0011E4  6E52               	movwf	?_exp+2,c
  1343  0011E6  0012               	return	
  1344  0011E8                     l2343:
  1345  0011E8  0E00               	movlw	0
  1346  0011EA  6E09               	movwf	?___ftdiv,c
  1347  0011EC  0E80               	movlw	128
  1348  0011EE  6E0A               	movwf	?___ftdiv+1,c
  1349  0011F0  0E3F               	movlw	63
  1350  0011F2  6E0B               	movwf	?___ftdiv+2,c
  1351  0011F4  C050  F00C         	movff	exp@x,?___ftdiv+3
  1352  0011F8  C051  F00D         	movff	exp@x+1,?___ftdiv+4
  1353  0011FC  C052  F00E         	movff	exp@x+2,?___ftdiv+5
  1354  001200  ECC6  F00C         	call	___ftdiv	;wreg free
  1355  001204  C00B  F052         	movff	?___ftdiv+2,?_exp+2
  1356  001208  C00A  F051         	movff	?___ftdiv+1,?_exp+1
  1357  00120C  C009  F050         	movff	?___ftdiv,?_exp
  1358  001210  0012               	return	
  1359  001212                     l613:
  1360  001212  C050  F050         	movff	exp@x,?_exp
  1361  001216  C051  F051         	movff	exp@x+1,?_exp+1
  1362  00121A  C052  F052         	movff	exp@x+2,?_exp+2
  1363  00121E  0012               	return	
  1364  001220                     __end_of_exp:
  1365                           	opt stack 0
  1366                           wreg	equ	0xFE8
  1367                           status	equ	0xFD8
  1368                           
  1369 ;; *************** function _ldexp *****************
  1370 ;; Defined at:
  1371 ;;		line 278 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\frexp.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;  value           3    8[COMRAM] unsigned char 
  1374 ;;  newexp          2   11[COMRAM] int 
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;		None
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  3    8[COMRAM] int 
  1379 ;; Registers used:
  1380 ;;		wreg, status,2, status,0
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1386 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1388 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1389 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1390 ;;Total ram usage:        8 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_exp
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text4
  1400  001C88                     __ptext4:
  1401                           	opt stack 0
  1402  001C88                     _ldexp:
  1403                           	opt stack 26
  1404                           
  1405                           ;incstack = 0
  1406                           ;incstack = 0
  1407  001C88  0E7F               	movlw	127
  1408  001C8A  140B               	andwf	ldexp@value+2,w,c
  1409  001C8C  100A               	iorwf	ldexp@value+1,w,c
  1410  001C8E  1009               	iorwf	ldexp@value,w,c
  1411  001C90  A4D8               	btfss	status,2,c
  1412  001C92  D007               	goto	l2087
  1413  001C94  0E00               	movlw	0
  1414  001C96  6E09               	movwf	?_ldexp,c
  1415  001C98  0E00               	movlw	0
  1416  001C9A  6E0A               	movwf	?_ldexp+1,c
  1417  001C9C  0E00               	movlw	0
  1418  001C9E  6E0B               	movwf	?_ldexp+2,c
  1419  001CA0  0012               	return	
  1420  001CA2                     l2087:
  1421  001CA2  500B               	movf	ldexp@value+2,w,c
  1422  001CA4  0B7F               	andlw	127
  1423  001CA6  6E0E               	movwf	??_ldexp& (0+255),c
  1424  001CA8  90D8               	bcf	status,0,c
  1425  001CAA  340E               	rlcf	??_ldexp,w,c
  1426  001CAC  6E0F               	movwf	(??_ldexp+1)& (0+255),c
  1427  001CAE  6A10               	clrf	(??_ldexp+2)& (0+255),c
  1428  001CB0  3610               	rlcf	(??_ldexp+2)& (0+255),f,c
  1429  001CB2  500F               	movf	??_ldexp+1,w,c
  1430  001CB4  260C               	addwf	ldexp@newexp,f,c
  1431  001CB6  5010               	movf	??_ldexp+2,w,c
  1432  001CB8  220D               	addwfc	ldexp@newexp+1,f,c
  1433  001CBA  340A               	rlcf	ldexp@value+1,w,c
  1434  001CBC  36E8               	rlcf	wreg,f,c
  1435  001CBE  0B01               	andlw	1
  1436  001CC0  6E0E               	movwf	??_ldexp& (0+255),c
  1437  001CC2  500E               	movf	??_ldexp,w,c
  1438  001CC4  260C               	addwf	ldexp@newexp,f,c
  1439  001CC6  0E00               	movlw	0
  1440  001CC8  220D               	addwfc	ldexp@newexp+1,f,c
  1441  001CCA  AE0D               	btfss	ldexp@newexp+1,7,c
  1442  001CCC  D00E               	goto	l2097
  1443  001CCE  0E00               	movlw	0
  1444  001CD0  0100               	movlb	0	; () banked
  1445  001CD2  0100               	movlb	0	; () banked
  1446  001CD4  6F7F               	movwf	(_errno+1)& (0+255),b
  1447  001CD6  0E22               	movlw	34
  1448  001CD8  0100               	movlb	0	; () banked
  1449  001CDA  6F7E               	movwf	_errno& (0+255),b
  1450  001CDC  0E00               	movlw	0
  1451  001CDE  6E09               	movwf	?_ldexp,c
  1452  001CE0  0E00               	movlw	0
  1453  001CE2  6E0A               	movwf	?_ldexp+1,c
  1454  001CE4  0E00               	movlw	0
  1455  001CE6  6E0B               	movwf	?_ldexp+2,c
  1456  001CE8  0012               	return	
  1457  001CEA                     l2097:
  1458  001CEA  500D               	movf	ldexp@newexp+1,w,c
  1459  001CEC  0A80               	xorlw	128
  1460  001CEE  0F7F               	addlw	-129
  1461  001CF0  0E00               	movlw	0
  1462  001CF2  B4D8               	btfsc	status,2,c
  1463  001CF4  5C0C               	subwf	ldexp@newexp,w,c
  1464  001CF6  A0D8               	btfss	status,0,c
  1465  001CF8  D020               	goto	l2113
  1466  001CFA  0E00               	movlw	0
  1467  001CFC  0100               	movlb	0	; () banked
  1468  001CFE  0100               	movlb	0	; () banked
  1469  001D00  6F7F               	movwf	(_errno+1)& (0+255),b
  1470  001D02  0E22               	movlw	34
  1471  001D04  0100               	movlb	0	; () banked
  1472  001D06  6F7E               	movwf	_errno& (0+255),b
  1473                           
  1474                           ; BSR set to: 0
  1475  001D08  500B               	movf	ldexp@value+2,w,c
  1476  001D0A  0A80               	xorlw	128
  1477  001D0C  0F80               	addlw	128
  1478  001D0E  E105               	bnz	u1225
  1479  001D10  0E00               	movlw	0
  1480  001D12  5C0A               	subwf	ldexp@value+1,w,c
  1481  001D14  E102               	bnz	u1225
  1482  001D16  0E00               	movlw	0
  1483  001D18  5C09               	subwf	ldexp@value,w,c
  1484  001D1A                     u1225:
  1485  001D1A  B0D8               	btfsc	status,0,c
  1486  001D1C  D007               	goto	l2109
  1487                           
  1488                           ; BSR set to: 0
  1489  001D1E  0EFF               	movlw	255
  1490  001D20  6E09               	movwf	?_ldexp,c
  1491  001D22  0E7F               	movlw	127
  1492  001D24  6E0A               	movwf	?_ldexp+1,c
  1493  001D26  0EFF               	movlw	255
  1494  001D28  6E0B               	movwf	?_ldexp+2,c
  1495  001D2A  0012               	return	
  1496  001D2C                     l2109:
  1497                           
  1498                           ; BSR set to: 0
  1499  001D2C  0EFF               	movlw	255
  1500  001D2E  6E09               	movwf	?_ldexp,c
  1501  001D30  0E7F               	movlw	127
  1502  001D32  6E0A               	movwf	?_ldexp+1,c
  1503  001D34  0E7F               	movlw	127
  1504  001D36  6E0B               	movwf	?_ldexp+2,c
  1505  001D38  0012               	return	
  1506  001D3A                     l2113:
  1507  001D3A  340D               	rlcf	ldexp@newexp+1,w,c
  1508  001D3C  300D               	rrcf	ldexp@newexp+1,w,c
  1509  001D3E  6E0F               	movwf	(??_ldexp+1)& (0+255),c
  1510  001D40  300C               	rrcf	ldexp@newexp,w,c
  1511  001D42  6E0E               	movwf	??_ldexp& (0+255),c
  1512  001D44  500B               	movf	ldexp@value+2,w,c
  1513  001D46  180E               	xorwf	??_ldexp,w,c
  1514  001D48  0B80               	andlw	-128
  1515  001D4A  180E               	xorwf	??_ldexp,w,c
  1516  001D4C  6E0B               	movwf	ldexp@value+2,c
  1517  001D4E  C00C  F00E         	movff	ldexp@newexp,??_ldexp
  1518  001D52  0E01               	movlw	1
  1519  001D54  160E               	andwf	??_ldexp,f,c
  1520  001D56  320E               	rrcf	??_ldexp,f,c
  1521  001D58  320E               	rrcf	??_ldexp,f,c
  1522  001D5A  500A               	movf	ldexp@value+1,w,c
  1523  001D5C  180E               	xorwf	??_ldexp,w,c
  1524  001D5E  0B7F               	andlw	-129
  1525  001D60  180E               	xorwf	??_ldexp,w,c
  1526  001D62  6E0A               	movwf	ldexp@value+1,c
  1527  001D64  C009  F009         	movff	ldexp@value,?_ldexp
  1528  001D68  C00A  F00A         	movff	ldexp@value+1,?_ldexp+1
  1529  001D6C  C00B  F00B         	movff	ldexp@value+2,?_ldexp+2
  1530  001D70  0012               	return	
  1531  001D72                     __end_of_ldexp:
  1532                           	opt stack 0
  1533                           wreg	equ	0xFE8
  1534                           status	equ	0xFD8
  1535                           
  1536 ;; *************** function _floor *****************
  1537 ;; Defined at:
  1538 ;;		line 14 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\floor.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;  x               3   59[COMRAM] int 
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  i               3   62[COMRAM] int 
  1543 ;;  expon           2   65[COMRAM] int 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  3   59[COMRAM] int 
  1546 ;; Registers used:
  1547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1553 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1554 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1556 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1557 ;;Total ram usage:        8 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    2
  1560 ;; This function calls:
  1561 ;;		___altoft
  1562 ;;		___ftadd
  1563 ;;		___ftge
  1564 ;;		___fttol
  1565 ;;		_frexp
  1566 ;; This function is called by:
  1567 ;;		_exp
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text5
  1572  001B98                     __ptext5:
  1573                           	opt stack 0
  1574  001B98                     _floor:
  1575                           	opt stack 24
  1576                           
  1577                           ;incstack = 0
  1578                           ;incstack = 0
  1579  001B98  C03C  F001         	movff	floor@x,?_frexp
  1580  001B9C  C03D  F002         	movff	floor@x+1,?_frexp+1
  1581  001BA0  C03E  F003         	movff	floor@x+2,?_frexp+2
  1582  001BA4  0E00               	movlw	high floor@expon
  1583  001BA6  6E05               	movwf	?_frexp+4,c
  1584  001BA8  0E42               	movlw	low floor@expon
  1585  001BAA  6E04               	movwf	?_frexp+3,c
  1586  001BAC  ECD2  F00F         	call	_frexp	;wreg free
  1587  001BB0  AE43               	btfss	floor@expon+1,7,c
  1588  001BB2  D019               	goto	l2261
  1589  001BB4  503E               	movf	floor@x+2,w,c
  1590  001BB6  0A80               	xorlw	128
  1591  001BB8  0F80               	addlw	128
  1592  001BBA  E105               	bnz	u1515
  1593  001BBC  0E00               	movlw	0
  1594  001BBE  5C3D               	subwf	floor@x+1,w,c
  1595  001BC0  E102               	bnz	u1515
  1596  001BC2  0E00               	movlw	0
  1597  001BC4  5C3C               	subwf	floor@x,w,c
  1598  001BC6                     u1515:
  1599  001BC6  B0D8               	btfsc	status,0,c
  1600  001BC8  D007               	goto	l2257
  1601  001BCA  0E00               	movlw	0
  1602  001BCC  6E3C               	movwf	?_floor,c
  1603  001BCE  0E80               	movlw	128
  1604  001BD0  6E3D               	movwf	?_floor+1,c
  1605  001BD2  0EBF               	movlw	191
  1606  001BD4  6E3E               	movwf	?_floor+2,c
  1607  001BD6  0012               	return	
  1608  001BD8                     l2257:
  1609  001BD8  0E00               	movlw	0
  1610  001BDA  6E3C               	movwf	?_floor,c
  1611  001BDC  0E00               	movlw	0
  1612  001BDE  6E3D               	movwf	?_floor+1,c
  1613  001BE0  0E00               	movlw	0
  1614  001BE2  6E3E               	movwf	?_floor+2,c
  1615  001BE4  0012               	return	
  1616  001BE6                     l2261:
  1617  001BE6  0E15               	movlw	21
  1618  001BE8  5C42               	subwf	floor@expon,w,c
  1619  001BEA  0E00               	movlw	0
  1620  001BEC  5843               	subwfb	floor@expon+1,w,c
  1621  001BEE  A0D8               	btfss	status,0,c
  1622  001BF0  D007               	goto	l2265
  1623  001BF2  C03C  F03C         	movff	floor@x,?_floor
  1624  001BF6  C03D  F03D         	movff	floor@x+1,?_floor+1
  1625  001BFA  C03E  F03E         	movff	floor@x+2,?_floor+2
  1626  001BFE  0012               	return	
  1627  001C00                     l2265:
  1628  001C00  C03C  F009         	movff	floor@x,?___fttol
  1629  001C04  C03D  F00A         	movff	floor@x+1,?___fttol+1
  1630  001C08  C03E  F00B         	movff	floor@x+2,?___fttol+2
  1631  001C0C  EC4B  F00D         	call	___fttol	;wreg free
  1632  001C10  C00C  F01B         	movff	?___fttol+3,?___altoft+3
  1633  001C14  C00B  F01A         	movff	?___fttol+2,?___altoft+2
  1634  001C18  C00A  F019         	movff	?___fttol+1,?___altoft+1
  1635  001C1C  C009  F018         	movff	?___fttol,?___altoft
  1636  001C20  EC1A  F010         	call	___altoft	;wreg free
  1637  001C24  C01A  F041         	movff	?___altoft+2,floor@i+2
  1638  001C28  C019  F040         	movff	?___altoft+1,floor@i+1
  1639  001C2C  C018  F03F         	movff	?___altoft,floor@i
  1640  001C30  C03C  F001         	movff	floor@x,?___ftge
  1641  001C34  C03D  F002         	movff	floor@x+1,?___ftge+1
  1642  001C38  C03E  F003         	movff	floor@x+2,?___ftge+2
  1643  001C3C  C03F  F004         	movff	floor@i,?___ftge+3
  1644  001C40  C040  F005         	movff	floor@i+1,?___ftge+4
  1645  001C44  C041  F006         	movff	floor@i+2,?___ftge+5
  1646  001C48  EC8A  F00F         	call	___ftge	;wreg free
  1647  001C4C  B0D8               	btfsc	status,0,c
  1648  001C4E  D015               	goto	l623
  1649  001C50  C03F  F02E         	movff	floor@i,?___ftadd
  1650  001C54  C040  F02F         	movff	floor@i+1,?___ftadd+1
  1651  001C58  C041  F030         	movff	floor@i+2,?___ftadd+2
  1652  001C5C  0E00               	movlw	0
  1653  001C5E  6E31               	movwf	?___ftadd+3,c
  1654  001C60  0E80               	movlw	128
  1655  001C62  6E32               	movwf	?___ftadd+4,c
  1656  001C64  0EBF               	movlw	191
  1657  001C66  6E33               	movwf	?___ftadd+5,c
  1658  001C68  EC10  F009         	call	___ftadd	;wreg free
  1659  001C6C  C030  F03E         	movff	?___ftadd+2,?_floor+2
  1660  001C70  C02F  F03D         	movff	?___ftadd+1,?_floor+1
  1661  001C74  C02E  F03C         	movff	?___ftadd,?_floor
  1662  001C78  0012               	return	
  1663  001C7A                     l623:
  1664  001C7A  C03F  F03C         	movff	floor@i,?_floor
  1665  001C7E  C040  F03D         	movff	floor@i+1,?_floor+1
  1666  001C82  C041  F03E         	movff	floor@i+2,?_floor+2
  1667  001C86  0012               	return	
  1668  001C88                     __end_of_floor:
  1669                           	opt stack 0
  1670                           wreg	equ	0xFE8
  1671                           status	equ	0xFD8
  1672                           
  1673 ;; *************** function ___fttol *****************
  1674 ;; Defined at:
  1675 ;;		line 45 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\fttol.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  f1              3    8[COMRAM] float 
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  lval            4   18[COMRAM] unsigned long 
  1680 ;;  exp1            1   22[COMRAM] unsigned char 
  1681 ;;  sign1           1   17[COMRAM] unsigned char 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  4    8[COMRAM] long 
  1684 ;; Registers used:
  1685 ;;		wreg, status,2, status,0
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1691 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1695 ;;Total ram usage:       15 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; This function calls:
  1698 ;;		Nothing
  1699 ;; This function is called by:
  1700 ;;		_program
  1701 ;;		_pow
  1702 ;;		_exp
  1703 ;;		_floor
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           	psect	text6
  1708  001A96                     __ptext6:
  1709                           	opt stack 0
  1710  001A96                     ___fttol:
  1711                           	opt stack 28
  1712                           
  1713                           ;incstack = 0
  1714                           ;incstack = 0
  1715  001A96  0E0F               	movlw	15
  1716  001A98  6E0D               	movwf	??___fttol& (0+255),c
  1717  001A9A  C009  F00E         	movff	___fttol@f1,??___fttol+1
  1718  001A9E  C00A  F00F         	movff	___fttol@f1+1,??___fttol+2
  1719  001AA2  C00B  F010         	movff	___fttol@f1+2,??___fttol+3
  1720  001AA6  280D               	incf	??___fttol,w,c
  1721  001AA8  6E11               	movwf	(??___fttol+4)& (0+255),c
  1722  001AAA  D004               	goto	u1100
  1723  001AAC                     u1105:
  1724  001AAC  90D8               	bcf	status,0,c
  1725  001AAE  3210               	rrcf	??___fttol+3,f,c
  1726  001AB0  320F               	rrcf	??___fttol+2,f,c
  1727  001AB2  320E               	rrcf	??___fttol+1,f,c
  1728  001AB4                     u1100:
  1729  001AB4  2E11               	decfsz	(??___fttol+4)& (0+255),f,c
  1730  001AB6  D7FA               	goto	u1105
  1731  001AB8  500E               	movf	??___fttol+1,w,c
  1732  001ABA  6E17               	movwf	___fttol@exp1,c
  1733  001ABC  6617               	tstfsz	___fttol@exp1& (0+255),c
  1734  001ABE  D009               	goto	l2031
  1735  001AC0  0E00               	movlw	0
  1736  001AC2  6E09               	movwf	?___fttol,c
  1737  001AC4  0E00               	movlw	0
  1738  001AC6  6E0A               	movwf	?___fttol+1,c
  1739  001AC8  0E00               	movlw	0
  1740  001ACA  6E0B               	movwf	?___fttol+2,c
  1741  001ACC  0E00               	movlw	0
  1742  001ACE  6E0C               	movwf	?___fttol+3,c
  1743  001AD0  0012               	return	
  1744  001AD2                     l2031:
  1745  001AD2  0E17               	movlw	23
  1746  001AD4  6E0D               	movwf	??___fttol& (0+255),c
  1747  001AD6  C009  F00E         	movff	___fttol@f1,??___fttol+1
  1748  001ADA  C00A  F00F         	movff	___fttol@f1+1,??___fttol+2
  1749  001ADE  C00B  F010         	movff	___fttol@f1+2,??___fttol+3
  1750  001AE2  280D               	incf	??___fttol,w,c
  1751  001AE4  6E11               	movwf	(??___fttol+4)& (0+255),c
  1752  001AE6  D004               	goto	u1120
  1753  001AE8                     u1125:
  1754  001AE8  90D8               	bcf	status,0,c
  1755  001AEA  3210               	rrcf	??___fttol+3,f,c
  1756  001AEC  320F               	rrcf	??___fttol+2,f,c
  1757  001AEE  320E               	rrcf	??___fttol+1,f,c
  1758  001AF0                     u1120:
  1759  001AF0  2E11               	decfsz	(??___fttol+4)& (0+255),f,c
  1760  001AF2  D7FA               	goto	u1125
  1761  001AF4  500E               	movf	??___fttol+1,w,c
  1762  001AF6  6E12               	movwf	___fttol@sign1,c
  1763  001AF8  8E0A               	bsf	___fttol@f1+1,7,c
  1764  001AFA  0EFF               	movlw	255
  1765  001AFC  1609               	andwf	___fttol@f1,f,c
  1766  001AFE  0EFF               	movlw	255
  1767  001B00  160A               	andwf	___fttol@f1+1,f,c
  1768  001B02  0E00               	movlw	0
  1769  001B04  160B               	andwf	___fttol@f1+2,f,c
  1770  001B06  5009               	movf	___fttol@f1,w,c
  1771  001B08  6E13               	movwf	___fttol@lval,c
  1772  001B0A  500A               	movf	___fttol@f1+1,w,c
  1773  001B0C  6E14               	movwf	___fttol@lval+1,c
  1774  001B0E  500B               	movf	___fttol@f1+2,w,c
  1775  001B10  6E15               	movwf	___fttol@lval+2,c
  1776  001B12  6A16               	clrf	___fttol@lval+3,c
  1777  001B14  0E8E               	movlw	142
  1778  001B16  5E17               	subwf	___fttol@exp1,f,c
  1779  001B18  AE17               	btfss	___fttol@exp1,7,c
  1780  001B1A  D016               	goto	l2053
  1781  001B1C  5017               	movf	___fttol@exp1,w,c
  1782  001B1E  0A80               	xorlw	128
  1783  001B20  0F8F               	addlw	143
  1784  001B22  B0D8               	btfsc	status,0,c
  1785  001B24  D009               	goto	l2049
  1786  001B26  0E00               	movlw	0
  1787  001B28  6E09               	movwf	?___fttol,c
  1788  001B2A  0E00               	movlw	0
  1789  001B2C  6E0A               	movwf	?___fttol+1,c
  1790  001B2E  0E00               	movlw	0
  1791  001B30  6E0B               	movwf	?___fttol+2,c
  1792  001B32  0E00               	movlw	0
  1793  001B34  6E0C               	movwf	?___fttol+3,c
  1794  001B36  0012               	return	
  1795  001B38                     l2049:
  1796  001B38  90D8               	bcf	status,0,c
  1797  001B3A  3216               	rrcf	___fttol@lval+3,f,c
  1798  001B3C  3215               	rrcf	___fttol@lval+2,f,c
  1799  001B3E  3214               	rrcf	___fttol@lval+1,f,c
  1800  001B40  3213               	rrcf	___fttol@lval,f,c
  1801  001B42  3E17               	incfsz	___fttol@exp1,f,c
  1802  001B44  D7F9               	goto	l2049
  1803  001B46  D014               	goto	l2063
  1804  001B48                     l2053:
  1805  001B48  0E17               	movlw	23
  1806  001B4A  6417               	cpfsgt	___fttol@exp1,c
  1807  001B4C  D00F               	goto	l2061
  1808  001B4E  0E00               	movlw	0
  1809  001B50  6E09               	movwf	?___fttol,c
  1810  001B52  0E00               	movlw	0
  1811  001B54  6E0A               	movwf	?___fttol+1,c
  1812  001B56  0E00               	movlw	0
  1813  001B58  6E0B               	movwf	?___fttol+2,c
  1814  001B5A  0E00               	movlw	0
  1815  001B5C  6E0C               	movwf	?___fttol+3,c
  1816  001B5E  0012               	return	
  1817  001B60                     l2059:
  1818  001B60  90D8               	bcf	status,0,c
  1819  001B62  3613               	rlcf	___fttol@lval,f,c
  1820  001B64  3614               	rlcf	___fttol@lval+1,f,c
  1821  001B66  3615               	rlcf	___fttol@lval+2,f,c
  1822  001B68  3616               	rlcf	___fttol@lval+3,f,c
  1823  001B6A  0617               	decf	___fttol@exp1,f,c
  1824  001B6C                     l2061:
  1825  001B6C  6617               	tstfsz	___fttol@exp1,c
  1826  001B6E  D7F8               	goto	l2059
  1827  001B70                     l2063:
  1828  001B70  5012               	movf	___fttol@sign1,w,c
  1829  001B72  B4D8               	btfsc	status,2,c
  1830  001B74  D008               	goto	l2067
  1831  001B76  1E16               	comf	___fttol@lval+3,f,c
  1832  001B78  1E15               	comf	___fttol@lval+2,f,c
  1833  001B7A  1E14               	comf	___fttol@lval+1,f,c
  1834  001B7C  6C13               	negf	___fttol@lval,c
  1835  001B7E  0E00               	movlw	0
  1836  001B80  2214               	addwfc	___fttol@lval+1,f,c
  1837  001B82  2215               	addwfc	___fttol@lval+2,f,c
  1838  001B84  2216               	addwfc	___fttol@lval+3,f,c
  1839  001B86                     l2067:
  1840  001B86  C013  F009         	movff	___fttol@lval,?___fttol
  1841  001B8A  C014  F00A         	movff	___fttol@lval+1,?___fttol+1
  1842  001B8E  C015  F00B         	movff	___fttol@lval+2,?___fttol+2
  1843  001B92  C016  F00C         	movff	___fttol@lval+3,?___fttol+3
  1844  001B96  0012               	return	
  1845  001B98                     __end_of___fttol:
  1846                           	opt stack 0
  1847                           wreg	equ	0xFE8
  1848                           status	equ	0xFD8
  1849                           
  1850 ;; *************** function ___ftge *****************
  1851 ;; Defined at:
  1852 ;;		line 5 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\ftge.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  ff1             3    0[COMRAM] float 
  1855 ;;  ff2             3    3[COMRAM] float 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;		None
  1858 ;; Return value:  Size  Location     Type
  1859 ;;		None               void
  1860 ;; Registers used:
  1861 ;;		wreg, status,2, status,0
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1867 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1869 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1870 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1871 ;;Total ram usage:        9 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; This function calls:
  1874 ;;		Nothing
  1875 ;; This function is called by:
  1876 ;;		_pow
  1877 ;;		_exp
  1878 ;;		_floor
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text7
  1883  001F14                     __ptext7:
  1884                           	opt stack 0
  1885  001F14                     ___ftge:
  1886                           	opt stack 25
  1887                           
  1888                           ;incstack = 0
  1889                           ;incstack = 0
  1890  001F14  AE03               	btfss	___ftge@ff1+2,7,c
  1891  001F16  D016               	goto	l1909
  1892  001F18  C001  F007         	movff	___ftge@ff1,??___ftge
  1893  001F1C  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  1894  001F20  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  1895  001F24  1E07               	comf	??___ftge,f,c
  1896  001F26  1E08               	comf	??___ftge+1,f,c
  1897  001F28  1E09               	comf	??___ftge+2,f,c
  1898  001F2A  2A07               	incf	??___ftge,f,c
  1899  001F2C  0E00               	movlw	0
  1900  001F2E  2208               	addwfc	??___ftge+1,f,c
  1901  001F30  2209               	addwfc	??___ftge+2,f,c
  1902  001F32  0E00               	movlw	0
  1903  001F34  2407               	addwf	??___ftge,w,c
  1904  001F36  6E01               	movwf	___ftge@ff1,c
  1905  001F38  0E00               	movlw	0
  1906  001F3A  2008               	addwfc	??___ftge+1,w,c
  1907  001F3C  6E02               	movwf	___ftge@ff1+1,c
  1908  001F3E  0E80               	movlw	128
  1909  001F40  2009               	addwfc	??___ftge+2,w,c
  1910  001F42  6E03               	movwf	___ftge@ff1+2,c
  1911  001F44                     l1909:
  1912  001F44  AE06               	btfss	___ftge@ff2+2,7,c
  1913  001F46  D016               	goto	l1913
  1914  001F48  C004  F007         	movff	___ftge@ff2,??___ftge
  1915  001F4C  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  1916  001F50  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  1917  001F54  1E07               	comf	??___ftge,f,c
  1918  001F56  1E08               	comf	??___ftge+1,f,c
  1919  001F58  1E09               	comf	??___ftge+2,f,c
  1920  001F5A  2A07               	incf	??___ftge,f,c
  1921  001F5C  0E00               	movlw	0
  1922  001F5E  2208               	addwfc	??___ftge+1,f,c
  1923  001F60  2209               	addwfc	??___ftge+2,f,c
  1924  001F62  0E00               	movlw	0
  1925  001F64  2407               	addwf	??___ftge,w,c
  1926  001F66  6E04               	movwf	___ftge@ff2,c
  1927  001F68  0E00               	movlw	0
  1928  001F6A  2008               	addwfc	??___ftge+1,w,c
  1929  001F6C  6E05               	movwf	___ftge@ff2+1,c
  1930  001F6E  0E80               	movlw	128
  1931  001F70  2009               	addwfc	??___ftge+2,w,c
  1932  001F72  6E06               	movwf	___ftge@ff2+2,c
  1933  001F74                     l1913:
  1934  001F74  0E00               	movlw	0
  1935  001F76  1A01               	xorwf	___ftge@ff1,f,c
  1936  001F78  0E00               	movlw	0
  1937  001F7A  1A02               	xorwf	___ftge@ff1+1,f,c
  1938  001F7C  0E80               	movlw	128
  1939  001F7E  1A03               	xorwf	___ftge@ff1+2,f,c
  1940  001F80  0E00               	movlw	0
  1941  001F82  1A04               	xorwf	___ftge@ff2,f,c
  1942  001F84  0E00               	movlw	0
  1943  001F86  1A05               	xorwf	___ftge@ff2+1,f,c
  1944  001F88  0E80               	movlw	128
  1945  001F8A  1A06               	xorwf	___ftge@ff2+2,f,c
  1946  001F8C  5004               	movf	___ftge@ff2,w,c
  1947  001F8E  5C01               	subwf	___ftge@ff1,w,c
  1948  001F90  5005               	movf	___ftge@ff2+1,w,c
  1949  001F92  5802               	subwfb	___ftge@ff1+1,w,c
  1950  001F94  5006               	movf	___ftge@ff2+2,w,c
  1951  001F96  5803               	subwfb	___ftge@ff1+2,w,c
  1952  001F98  B0D8               	btfsc	status,0,c
  1953  001F9A  D002               	goto	l1919
  1954  001F9C  90D8               	bcf	status,0,c
  1955  001F9E  0012               	return	
  1956  001FA0                     l1919:
  1957  001FA0  80D8               	bsf	status,0,c
  1958  001FA2  0012               	return	
  1959  001FA4                     __end_of___ftge:
  1960                           	opt stack 0
  1961                           wreg	equ	0xFE8
  1962                           status	equ	0xFD8
  1963                           
  1964 ;; *************** function ___altoft *****************
  1965 ;; Defined at:
  1966 ;;		line 43 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\altoft.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;  c               4   23[COMRAM] long 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;  sign            1   32[COMRAM] unsigned char 
  1971 ;;  exp             1   31[COMRAM] unsigned char 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  3   23[COMRAM] float 
  1974 ;; Registers used:
  1975 ;;		wreg, status,2, status,0, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1981 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1982 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1983 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1984 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1985 ;;Total ram usage:       10 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    1
  1988 ;; This function calls:
  1989 ;;		___ftpack
  1990 ;; This function is called by:
  1991 ;;		_floor
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           	psect	text8
  1996  002034                     __ptext8:
  1997                           	opt stack 0
  1998  002034                     ___altoft:
  1999                           	opt stack 24
  2000                           
  2001                           ;incstack = 0
  2002                           ;incstack = 0
  2003  002034  6E1C               	movwf	??___altoft& (0+255),c
  2004  002036  0E00               	movlw	0
  2005  002038  6E21               	movwf	___altoft@sign,c
  2006  00203A  501C               	movf	??___altoft& (0+255),w,c
  2007  00203C  6E1C               	movwf	??___altoft& (0+255),c
  2008  00203E  0E8E               	movlw	142
  2009  002040  6E20               	movwf	___altoft@exp,c
  2010  002042  501C               	movf	??___altoft& (0+255),w,c
  2011  002044  AE1B               	btfss	___altoft@c+3,7,c
  2012  002046  D013               	goto	l1963
  2013  002048  1E1B               	comf	___altoft@c+3,f,c
  2014  00204A  1E1A               	comf	___altoft@c+2,f,c
  2015  00204C  1E19               	comf	___altoft@c+1,f,c
  2016  00204E  6C18               	negf	___altoft@c,c
  2017  002050  0E00               	movlw	0
  2018  002052  2219               	addwfc	___altoft@c+1,f,c
  2019  002054  221A               	addwfc	___altoft@c+2,f,c
  2020  002056  221B               	addwfc	___altoft@c+3,f,c
  2021  002058  6E1C               	movwf	??___altoft& (0+255),c
  2022  00205A  0E01               	movlw	1
  2023  00205C  6E21               	movwf	___altoft@sign,c
  2024  00205E  501C               	movf	??___altoft& (0+255),w,c
  2025  002060  D006               	goto	l1963
  2026  002062                     l1961:
  2027  002062  90D8               	bcf	status,0,c
  2028  002064  321B               	rrcf	___altoft@c+3,f,c
  2029  002066  321A               	rrcf	___altoft@c+2,f,c
  2030  002068  3219               	rrcf	___altoft@c+1,f,c
  2031  00206A  3218               	rrcf	___altoft@c,f,c
  2032  00206C  2A20               	incf	___altoft@exp,f,c
  2033  00206E                     l1963:
  2034  00206E  0E00               	movlw	0
  2035  002070  1418               	andwf	___altoft@c,w,c
  2036  002072  6E1C               	movwf	??___altoft& (0+255),c
  2037  002074  0E00               	movlw	0
  2038  002076  1419               	andwf	___altoft@c+1,w,c
  2039  002078  6E1D               	movwf	(??___altoft+1)& (0+255),c
  2040  00207A  0E00               	movlw	0
  2041  00207C  141A               	andwf	___altoft@c+2,w,c
  2042  00207E  6E1E               	movwf	(??___altoft+2)& (0+255),c
  2043  002080  0EFF               	movlw	255
  2044  002082  141B               	andwf	___altoft@c+3,w,c
  2045  002084  6E1F               	movwf	(??___altoft+3)& (0+255),c
  2046  002086  501F               	movf	??___altoft+3,w,c
  2047  002088  101C               	iorwf	??___altoft,w,c
  2048  00208A  101D               	iorwf	??___altoft+1,w,c
  2049  00208C  101E               	iorwf	??___altoft+2,w,c
  2050  00208E  A4D8               	btfss	status,2,c
  2051  002090  D7E8               	goto	l1961
  2052  002092  C018  F001         	movff	___altoft@c,?___ftpack
  2053  002096  C019  F002         	movff	___altoft@c+1,?___ftpack+1
  2054  00209A  C01A  F003         	movff	___altoft@c+2,?___ftpack+2
  2055  00209E  C020  F004         	movff	___altoft@exp,?___ftpack+3
  2056  0020A2  C021  F005         	movff	___altoft@sign,?___ftpack+4
  2057  0020A6  EC2E  F00F         	call	___ftpack	;wreg free
  2058  0020AA  C003  F01A         	movff	?___ftpack+2,?___altoft+2
  2059  0020AE  C002  F019         	movff	?___ftpack+1,?___altoft+1
  2060  0020B2  C001  F018         	movff	?___ftpack,?___altoft
  2061  0020B6  0012               	return	
  2062  0020B8                     __end_of___altoft:
  2063                           	opt stack 0
  2064                           wreg	equ	0xFE8
  2065                           status	equ	0xFD8
  2066                           
  2067 ;; *************** function ___ftneg *****************
  2068 ;; Defined at:
  2069 ;;		line 16 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\ftneg.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  f1              3    0[COMRAM] float 
  2072 ;; Auto vars:     Size  Location     Type
  2073 ;;		None
  2074 ;; Return value:  Size  Location     Type
  2075 ;;                  3    0[COMRAM] float 
  2076 ;; Registers used:
  2077 ;;		wreg, status,2, status,0
  2078 ;; Tracked objects:
  2079 ;;		On entry : 0/0
  2080 ;;		On exit  : 0/0
  2081 ;;		Unchanged: 0/0
  2082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2083 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2086 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2087 ;;Total ram usage:        3 bytes
  2088 ;; Hardware stack levels used:    1
  2089 ;; This function calls:
  2090 ;;		Nothing
  2091 ;; This function is called by:
  2092 ;;		_pow
  2093 ;;		_exp
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           	psect	text9
  2098  00227E                     __ptext9:
  2099                           	opt stack 0
  2100  00227E                     ___ftneg:
  2101                           	opt stack 26
  2102                           
  2103                           ;incstack = 0
  2104                           ;incstack = 0
  2105  00227E  0E7F               	movlw	127
  2106  002280  1403               	andwf	___ftneg@f1+2,w,c
  2107  002282  1002               	iorwf	___ftneg@f1+1,w,c
  2108  002284  1001               	iorwf	___ftneg@f1,w,c
  2109  002286  B4D8               	btfsc	status,2,c
  2110  002288  D006               	goto	l424
  2111  00228A  0E00               	movlw	0
  2112  00228C  1A01               	xorwf	___ftneg@f1,f,c
  2113  00228E  0E00               	movlw	0
  2114  002290  1A02               	xorwf	___ftneg@f1+1,f,c
  2115  002292  0E80               	movlw	128
  2116  002294  1A03               	xorwf	___ftneg@f1+2,f,c
  2117  002296                     l424:
  2118  002296  C001  F001         	movff	___ftneg@f1,?___ftneg
  2119  00229A  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  2120  00229E  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  2121  0022A2  0012               	return	
  2122  0022A4                     __end_of___ftneg:
  2123                           	opt stack 0
  2124                           wreg	equ	0xFE8
  2125                           status	equ	0xFD8
  2126                           
  2127 ;; *************** function ___asftsub *****************
  2128 ;; Defined at:
  2129 ;;		line 5 in file "C:\PRG\Microchip\xc8\v1.20\sources\pic18\asftsub.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;  f1p             2   65[COMRAM] PTR float 
  2132 ;;		 -> exp@x(3), 
  2133 ;;  f2              3   67[COMRAM] float 
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;		None
  2136 ;; Return value:  Size  Location     Type
  2137 ;;                  3   65[COMRAM] float 
  2138 ;; Registers used:
  2139 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2140 ;; Tracked objects:
  2141 ;;		On entry : 0/0
  2142 ;;		On exit  : 0/0
  2143 ;;		Unchanged: 0/0
  2144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2145 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2148 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2149 ;;Total ram usage:        5 bytes
  2150 ;; Hardware stack levels used:    1
  2151 ;; Hardware stack levels required when called:    3
  2152 ;; This function calls:
  2153 ;;		___ftsub
  2154 ;; This function is called by:
  2155 ;;		_exp
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159                           	psect	text10
  2160  002160                     __ptext10:
  2161                           	opt stack 0
  2162  002160                     ___asftsub:
  2163                           	opt stack 23
  2164                           
  2165                           ;	Return value of ___asftsub is never used
  2166                           
  2167                           ;incstack = 0
  2168                           ;incstack = 0
  2169  002160  C042  FFD9         	movff	___asftsub@f1p,fsr2l
  2170  002164  C043  FFDA         	movff	___asftsub@f1p+1,fsr2h
  2171  002168  CFDE F03C          	movff	postinc2,?___ftsub
  2172  00216C  CFDE F03D          	movff	postinc2,?___ftsub+1
  2173  002170  CFDD F03E          	movff	postdec2,?___ftsub+2
  2174  002174  C044  F03F         	movff	___asftsub@f2,?___ftsub+3
  2175  002178  C045  F040         	movff	___asftsub@f2+1,?___ftsub+4
  2176  00217C  C046  F041         	movff	___asftsub@f2+2,?___ftsub+5
  2177  002180  EC09  F011         	call	___ftsub	;wreg free
  2178  002184  C042  FFD9         	movff	___asftsub@f1p,fsr2l
  2179  002188  C043  FFDA         	movff	___asftsub@f1p+1,fsr2h
  2180  00218C  C03C  FFDE         	movff	?___ftsub,postinc2
  2181  002190  C03D  FFDE         	movff	?___ftsub+1,postinc2
  2182  002194  C03E  FFDD         	movff	?___ftsub+2,postdec2
  2183  002198  52DD               	movf	postdec2,f,c
  2184  00219A  0012               	return	
  2185  00219C                     __end_of___asftsub:
  2186                           	opt stack 0
  2187                           wreg	equ	0xFE8
  2188                           postinc2	equ	0xFDE
  2189                           postdec2	equ	0xFDD
  2190                           fsr2h	equ	0xFDA
  2191                           fsr2l	equ	0xFD9
  2192                           status	equ	0xFD8
  2193                           
  2194 ;; *************** function ___ftsub *****************
  2195 ;; Defined at:
  2196 ;;		line 22 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\ftsub.c"
  2197 ;; Parameters:    Size  Location     Type
  2198 ;;  f1              3   59[COMRAM] float 
  2199 ;;  f2              3   62[COMRAM] float 
  2200 ;; Auto vars:     Size  Location     Type
  2201 ;;		None
  2202 ;; Return value:  Size  Location     Type
  2203 ;;                  3   59[COMRAM] float 
  2204 ;; Registers used:
  2205 ;;		wreg, status,2, status,0, cstack
  2206 ;; Tracked objects:
  2207 ;;		On entry : 0/0
  2208 ;;		On exit  : 0/0
  2209 ;;		Unchanged: 0/0
  2210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2211 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2214 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2215 ;;Total ram usage:        6 bytes
  2216 ;; Hardware stack levels used:    1
  2217 ;; Hardware stack levels required when called:    2
  2218 ;; This function calls:
  2219 ;;		___ftadd
  2220 ;; This function is called by:
  2221 ;;		___asftsub
  2222 ;; This function uses a non-reentrant model
  2223 ;;
  2224                           
  2225                           	psect	text11
  2226  002212                     __ptext11:
  2227                           	opt stack 0
  2228  002212                     ___ftsub:
  2229                           	opt stack 23
  2230                           
  2231                           ;incstack = 0
  2232                           ;incstack = 0
  2233  002212  0E00               	movlw	0
  2234  002214  1A3F               	xorwf	___ftsub@f2,f,c
  2235  002216  0E00               	movlw	0
  2236  002218  1A40               	xorwf	___ftsub@f2+1,f,c
  2237  00221A  0E80               	movlw	128
  2238  00221C  1A41               	xorwf	___ftsub@f2+2,f,c
  2239  00221E  C03C  F02E         	movff	___ftsub@f1,?___ftadd
  2240  002222  C03D  F02F         	movff	___ftsub@f1+1,?___ftadd+1
  2241  002226  C03E  F030         	movff	___ftsub@f1+2,?___ftadd+2
  2242  00222A  C03F  F031         	movff	___ftsub@f2,?___ftadd+3
  2243  00222E  C040  F032         	movff	___ftsub@f2+1,?___ftadd+4
  2244  002232  C041  F033         	movff	___ftsub@f2+2,?___ftadd+5
  2245  002236  EC10  F009         	call	___ftadd	;wreg free
  2246  00223A  C030  F03E         	movff	?___ftadd+2,?___ftsub+2
  2247  00223E  C02F  F03D         	movff	?___ftadd+1,?___ftsub+1
  2248  002242  C02E  F03C         	movff	?___ftadd,?___ftsub
  2249  002246  0012               	return	
  2250  002248                     __end_of___ftsub:
  2251                           	opt stack 0
  2252                           wreg	equ	0xFE8
  2253                           postinc2	equ	0xFDE
  2254                           postdec2	equ	0xFDD
  2255                           fsr2h	equ	0xFDA
  2256                           fsr2l	equ	0xFD9
  2257                           status	equ	0xFD8
  2258                           
  2259 ;; *************** function ___asftmul *****************
  2260 ;; Defined at:
  2261 ;;		line 5 in file "C:\PRG\Microchip\xc8\v1.20\sources\pic18\asftmul.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  f1p             2   45[COMRAM] PTR float 
  2264 ;;		 -> exp@x(3), 
  2265 ;;  f2              3   47[COMRAM] float 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;		None
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  3   45[COMRAM] float 
  2270 ;; Registers used:
  2271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2277 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2280 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2281 ;;Total ram usage:        5 bytes
  2282 ;; Hardware stack levels used:    1
  2283 ;; Hardware stack levels required when called:    2
  2284 ;; This function calls:
  2285 ;;		___ftmul
  2286 ;; This function is called by:
  2287 ;;		_exp
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           	psect	text12
  2292  00219C                     __ptext12:
  2293                           	opt stack 0
  2294  00219C                     ___asftmul:
  2295                           	opt stack 24
  2296                           
  2297                           ;	Return value of ___asftmul is never used
  2298                           
  2299                           ;incstack = 0
  2300                           ;incstack = 0
  2301  00219C  C02E  FFD9         	movff	___asftmul@f1p,fsr2l
  2302  0021A0  C02F  FFDA         	movff	___asftmul@f1p+1,fsr2h
  2303  0021A4  CFDE F01D          	movff	postinc2,?___ftmul
  2304  0021A8  CFDE F01E          	movff	postinc2,?___ftmul+1
  2305  0021AC  CFDD F01F          	movff	postdec2,?___ftmul+2
  2306  0021B0  C030  F020         	movff	___asftmul@f2,?___ftmul+3
  2307  0021B4  C031  F021         	movff	___asftmul@f2+1,?___ftmul+4
  2308  0021B8  C032  F022         	movff	___asftmul@f2+2,?___ftmul+5
  2309  0021BC  EC38  F00C         	call	___ftmul	;wreg free
  2310  0021C0  C02E  FFD9         	movff	___asftmul@f1p,fsr2l
  2311  0021C4  C02F  FFDA         	movff	___asftmul@f1p+1,fsr2h
  2312  0021C8  C01D  FFDE         	movff	?___ftmul,postinc2
  2313  0021CC  C01E  FFDE         	movff	?___ftmul+1,postinc2
  2314  0021D0  C01F  FFDD         	movff	?___ftmul+2,postdec2
  2315  0021D4  52DD               	movf	postdec2,f,c
  2316  0021D6  0012               	return	
  2317  0021D8                     __end_of___asftmul:
  2318                           	opt stack 0
  2319                           wreg	equ	0xFE8
  2320                           postinc2	equ	0xFDE
  2321                           postdec2	equ	0xFDD
  2322                           fsr2h	equ	0xFDA
  2323                           fsr2l	equ	0xFD9
  2324                           status	equ	0xFD8
  2325                           
  2326 ;; *************** function ___ftdiv *****************
  2327 ;; Defined at:
  2328 ;;		line 50 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\ftdiv.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  f1              3    8[COMRAM] float 
  2331 ;;  f2              3   11[COMRAM] float 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  f3              3   20[COMRAM] float 
  2334 ;;  sign            1   24[COMRAM] unsigned char 
  2335 ;;  exp             1   23[COMRAM] unsigned char 
  2336 ;;  cntr            1   19[COMRAM] unsigned char 
  2337 ;; Return value:  Size  Location     Type
  2338 ;;                  3    8[COMRAM] float 
  2339 ;; Registers used:
  2340 ;;		wreg, status,2, status,0, cstack
  2341 ;; Tracked objects:
  2342 ;;		On entry : 0/0
  2343 ;;		On exit  : 0/0
  2344 ;;		Unchanged: 0/0
  2345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2346 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2347 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2348 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2349 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2350 ;;Total ram usage:       17 bytes
  2351 ;; Hardware stack levels used:    1
  2352 ;; Hardware stack levels required when called:    1
  2353 ;; This function calls:
  2354 ;;		___ftpack
  2355 ;; This function is called by:
  2356 ;;		_exp
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           	psect	text13
  2361  00198C                     __ptext13:
  2362                           	opt stack 0
  2363  00198C                     ___ftdiv:
  2364                           	opt stack 25
  2365                           
  2366                           ;incstack = 0
  2367                           ;incstack = 0
  2368  00198C  0E0F               	movlw	15
  2369  00198E  6E0F               	movwf	??___ftdiv& (0+255),c
  2370  001990  C009  F010         	movff	___ftdiv@f1,??___ftdiv+1
  2371  001994  C00A  F011         	movff	___ftdiv@f1+1,??___ftdiv+2
  2372  001998  C00B  F012         	movff	___ftdiv@f1+2,??___ftdiv+3
  2373  00199C  280F               	incf	??___ftdiv,w,c
  2374  00199E  6E13               	movwf	(??___ftdiv+4)& (0+255),c
  2375  0019A0  D004               	goto	u1040
  2376  0019A2                     u1045:
  2377  0019A2  90D8               	bcf	status,0,c
  2378  0019A4  3212               	rrcf	??___ftdiv+3,f,c
  2379  0019A6  3211               	rrcf	??___ftdiv+2,f,c
  2380  0019A8  3210               	rrcf	??___ftdiv+1,f,c
  2381  0019AA                     u1040:
  2382  0019AA  2E13               	decfsz	(??___ftdiv+4)& (0+255),f,c
  2383  0019AC  D7FA               	goto	u1045
  2384  0019AE  5010               	movf	??___ftdiv+1,w,c
  2385  0019B0  6E18               	movwf	___ftdiv@exp,c
  2386  0019B2  6618               	tstfsz	___ftdiv@exp& (0+255),c
  2387  0019B4  D007               	goto	l1975
  2388  0019B6  0E00               	movlw	0
  2389  0019B8  6E09               	movwf	?___ftdiv,c
  2390  0019BA  0E00               	movlw	0
  2391  0019BC  6E0A               	movwf	?___ftdiv+1,c
  2392  0019BE  0E00               	movlw	0
  2393  0019C0  6E0B               	movwf	?___ftdiv+2,c
  2394  0019C2  0012               	return	
  2395  0019C4                     l1975:
  2396  0019C4  0E0F               	movlw	15
  2397  0019C6  6E0F               	movwf	??___ftdiv& (0+255),c
  2398  0019C8  C00C  F010         	movff	___ftdiv@f2,??___ftdiv+1
  2399  0019CC  C00D  F011         	movff	___ftdiv@f2+1,??___ftdiv+2
  2400  0019D0  C00E  F012         	movff	___ftdiv@f2+2,??___ftdiv+3
  2401  0019D4  280F               	incf	??___ftdiv,w,c
  2402  0019D6  6E13               	movwf	(??___ftdiv+4)& (0+255),c
  2403  0019D8  D004               	goto	u1060
  2404  0019DA                     u1065:
  2405  0019DA  90D8               	bcf	status,0,c
  2406  0019DC  3212               	rrcf	??___ftdiv+3,f,c
  2407  0019DE  3211               	rrcf	??___ftdiv+2,f,c
  2408  0019E0  3210               	rrcf	??___ftdiv+1,f,c
  2409  0019E2                     u1060:
  2410  0019E2  2E13               	decfsz	(??___ftdiv+4)& (0+255),f,c
  2411  0019E4  D7FA               	goto	u1065
  2412  0019E6  5010               	movf	??___ftdiv+1,w,c
  2413  0019E8  6E19               	movwf	___ftdiv@sign,c
  2414  0019EA  6619               	tstfsz	___ftdiv@sign& (0+255),c
  2415  0019EC  D007               	goto	l1981
  2416  0019EE  0E00               	movlw	0
  2417  0019F0  6E09               	movwf	?___ftdiv,c
  2418  0019F2  0E00               	movlw	0
  2419  0019F4  6E0A               	movwf	?___ftdiv+1,c
  2420  0019F6  0E00               	movlw	0
  2421  0019F8  6E0B               	movwf	?___ftdiv+2,c
  2422  0019FA  0012               	return	
  2423  0019FC                     l1981:
  2424  0019FC  0E00               	movlw	0
  2425  0019FE  6E15               	movwf	___ftdiv@f3,c
  2426  001A00  0E00               	movlw	0
  2427  001A02  6E16               	movwf	___ftdiv@f3+1,c
  2428  001A04  0E00               	movlw	0
  2429  001A06  6E17               	movwf	___ftdiv@f3+2,c
  2430  001A08  5019               	movf	___ftdiv@sign,w,c
  2431  001A0A  0F89               	addlw	137
  2432  001A0C  5E18               	subwf	___ftdiv@exp,f,c
  2433  001A0E  C00B  F019         	movff	___ftdiv@f1+2,___ftdiv@sign
  2434  001A12  500E               	movf	(___ftdiv@f2+2)& (0+255),w,c
  2435  001A14  1A19               	xorwf	___ftdiv@sign,f,c
  2436  001A16  0E80               	movlw	128
  2437  001A18  1619               	andwf	___ftdiv@sign,f,c
  2438  001A1A  8E0A               	bsf	___ftdiv@f1+1,7,c
  2439  001A1C  0EFF               	movlw	255
  2440  001A1E  1609               	andwf	___ftdiv@f1,f,c
  2441  001A20  0EFF               	movlw	255
  2442  001A22  160A               	andwf	___ftdiv@f1+1,f,c
  2443  001A24  0E00               	movlw	0
  2444  001A26  160B               	andwf	___ftdiv@f1+2,f,c
  2445  001A28  8E0D               	bsf	___ftdiv@f2+1,7,c
  2446  001A2A  0EFF               	movlw	255
  2447  001A2C  160C               	andwf	___ftdiv@f2,f,c
  2448  001A2E  0EFF               	movlw	255
  2449  001A30  160D               	andwf	___ftdiv@f2+1,f,c
  2450  001A32  0E00               	movlw	0
  2451  001A34  160E               	andwf	___ftdiv@f2+2,f,c
  2452  001A36  6E0F               	movwf	??___ftdiv& (0+255),c
  2453  001A38  0E18               	movlw	24
  2454  001A3A  6E14               	movwf	___ftdiv@cntr,c
  2455  001A3C  500F               	movf	??___ftdiv& (0+255),w,c
  2456  001A3E                     l401:
  2457  001A3E  90D8               	bcf	status,0,c
  2458  001A40  3615               	rlcf	___ftdiv@f3,f,c
  2459  001A42  3616               	rlcf	___ftdiv@f3+1,f,c
  2460  001A44  3617               	rlcf	___ftdiv@f3+2,f,c
  2461  001A46  500C               	movf	___ftdiv@f2,w,c
  2462  001A48  5C09               	subwf	___ftdiv@f1,w,c
  2463  001A4A  500D               	movf	___ftdiv@f2+1,w,c
  2464  001A4C  580A               	subwfb	___ftdiv@f1+1,w,c
  2465  001A4E  500E               	movf	___ftdiv@f2+2,w,c
  2466  001A50  580B               	subwfb	___ftdiv@f1+2,w,c
  2467  001A52  A0D8               	btfss	status,0,c
  2468  001A54  D007               	goto	l402
  2469  001A56  500C               	movf	___ftdiv@f2,w,c
  2470  001A58  5E09               	subwf	___ftdiv@f1,f,c
  2471  001A5A  500D               	movf	___ftdiv@f2+1,w,c
  2472  001A5C  5A0A               	subwfb	___ftdiv@f1+1,f,c
  2473  001A5E  500E               	movf	___ftdiv@f2+2,w,c
  2474  001A60  5A0B               	subwfb	___ftdiv@f1+2,f,c
  2475  001A62  8015               	bsf	___ftdiv@f3,0,c
  2476  001A64                     l402:
  2477  001A64  90D8               	bcf	status,0,c
  2478  001A66  3609               	rlcf	___ftdiv@f1,f,c
  2479  001A68  360A               	rlcf	___ftdiv@f1+1,f,c
  2480  001A6A  360B               	rlcf	___ftdiv@f1+2,f,c
  2481  001A6C  2E14               	decfsz	___ftdiv@cntr,f,c
  2482  001A6E  D7E7               	goto	l401
  2483  001A70  C015  F001         	movff	___ftdiv@f3,?___ftpack
  2484  001A74  C016  F002         	movff	___ftdiv@f3+1,?___ftpack+1
  2485  001A78  C017  F003         	movff	___ftdiv@f3+2,?___ftpack+2
  2486  001A7C  C018  F004         	movff	___ftdiv@exp,?___ftpack+3
  2487  001A80  C019  F005         	movff	___ftdiv@sign,?___ftpack+4
  2488  001A84  EC2E  F00F         	call	___ftpack	;wreg free
  2489  001A88  C003  F00B         	movff	?___ftpack+2,?___ftdiv+2
  2490  001A8C  C002  F00A         	movff	?___ftpack+1,?___ftdiv+1
  2491  001A90  C001  F009         	movff	?___ftpack,?___ftdiv
  2492  001A94  0012               	return	
  2493  001A96                     __end_of___ftdiv:
  2494                           	opt stack 0
  2495                           wreg	equ	0xFE8
  2496                           postinc2	equ	0xFDE
  2497                           postdec2	equ	0xFDD
  2498                           fsr2h	equ	0xFDA
  2499                           fsr2l	equ	0xFD9
  2500                           status	equ	0xFD8
  2501                           
  2502 ;; *************** function _log *****************
  2503 ;; Defined at:
  2504 ;;		line 6 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\log.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;  x               3   74[COMRAM] float 
  2507 ;; Auto vars:     Size  Location     Type
  2508 ;;  exponent        2   77[COMRAM] int 
  2509 ;; Return value:  Size  Location     Type
  2510 ;;                  3   74[COMRAM] int 
  2511 ;; Registers used:
  2512 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2513 ;; Tracked objects:
  2514 ;;		On entry : 0/0
  2515 ;;		On exit  : 0/0
  2516 ;;		Unchanged: 0/0
  2517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2518 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;Total ram usage:        5 bytes
  2523 ;; Hardware stack levels used:    1
  2524 ;; Hardware stack levels required when called:    3
  2525 ;; This function calls:
  2526 ;;		___ftadd
  2527 ;;		___ftmul
  2528 ;;		___awtoft
  2529 ;;		_eval_poly
  2530 ;;		_frexp
  2531 ;; This function is called by:
  2532 ;;		_pow
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text14
  2537  001736                     __ptext14:
  2538                           	opt stack 0
  2539  001736                     _log:
  2540                           	opt stack 24
  2541                           
  2542                           ;incstack = 0
  2543                           ;incstack = 0
  2544  001736  504D               	movf	log@x+2,w,c
  2545  001738  0A80               	xorlw	128
  2546  00173A  0F80               	addlw	128
  2547  00173C  E105               	bnz	u1555
  2548  00173E  0E00               	movlw	0
  2549  001740  5C4C               	subwf	log@x+1,w,c
  2550  001742  E102               	bnz	u1555
  2551  001744  0E00               	movlw	0
  2552  001746  5C4B               	subwf	log@x,w,c
  2553  001748                     u1555:
  2554  001748  B0D8               	btfsc	status,0,c
  2555  00174A  D00E               	goto	l2287
  2556  00174C  0E00               	movlw	0
  2557  00174E  0100               	movlb	0	; () banked
  2558  001750  0100               	movlb	0	; () banked
  2559  001752  6F7F               	movwf	(_errno+1)& (0+255),b
  2560  001754  0E21               	movlw	33
  2561  001756  0100               	movlb	0	; () banked
  2562  001758  6F7E               	movwf	_errno& (0+255),b
  2563  00175A  0E00               	movlw	0
  2564  00175C  6E4B               	movwf	?_log,c
  2565  00175E  0E00               	movlw	0
  2566  001760  6E4C               	movwf	?_log+1,c
  2567  001762  0E00               	movlw	0
  2568  001764  6E4D               	movwf	?_log+2,c
  2569  001766  0012               	return	
  2570  001768                     l2287:
  2571  001768  0E7F               	movlw	127
  2572  00176A  144D               	andwf	log@x+2,w,c
  2573  00176C  104C               	iorwf	log@x+1,w,c
  2574  00176E  104B               	iorwf	log@x,w,c
  2575  001770  A4D8               	btfss	status,2,c
  2576  001772  D00E               	goto	l2293
  2577  001774  0E00               	movlw	0
  2578  001776  0100               	movlb	0	; () banked
  2579  001778  0100               	movlb	0	; () banked
  2580  00177A  6F7F               	movwf	(_errno+1)& (0+255),b
  2581  00177C  0E22               	movlw	34
  2582  00177E  0100               	movlb	0	; () banked
  2583  001780  6F7E               	movwf	_errno& (0+255),b
  2584  001782  0E00               	movlw	0
  2585  001784  6E4B               	movwf	?_log,c
  2586  001786  0E00               	movlw	0
  2587  001788  6E4C               	movwf	?_log+1,c
  2588  00178A  0E00               	movlw	0
  2589  00178C  6E4D               	movwf	?_log+2,c
  2590  00178E  0012               	return	
  2591  001790                     l2293:
  2592  001790  0E00               	movlw	0
  2593  001792  6E20               	movwf	?___ftmul+3,c
  2594  001794  0E00               	movlw	0
  2595  001796  6E21               	movwf	?___ftmul+4,c
  2596  001798  0E40               	movlw	64
  2597  00179A  6E22               	movwf	?___ftmul+5,c
  2598  00179C  0E00               	movlw	high log@exponent
  2599  00179E  6E05               	movwf	?_frexp+4,c
  2600  0017A0  0E4E               	movlw	low log@exponent
  2601  0017A2  6E04               	movwf	?_frexp+3,c
  2602  0017A4  C04B  F001         	movff	log@x,?_frexp
  2603  0017A8  C04C  F002         	movff	log@x+1,?_frexp+1
  2604  0017AC  C04D  F003         	movff	log@x+2,?_frexp+2
  2605  0017B0  ECD2  F00F         	call	_frexp	;wreg free
  2606  0017B4  C003  F01F         	movff	?_frexp+2,?___ftmul+2
  2607  0017B8  C002  F01E         	movff	?_frexp+1,?___ftmul+1
  2608  0017BC  C001  F01D         	movff	?_frexp,?___ftmul
  2609  0017C0  EC38  F00C         	call	___ftmul	;wreg free
  2610  0017C4  C01F  F030         	movff	?___ftmul+2,?___ftadd+2
  2611  0017C8  C01E  F02F         	movff	?___ftmul+1,?___ftadd+1
  2612  0017CC  C01D  F02E         	movff	?___ftmul,?___ftadd
  2613  0017D0  0E00               	movlw	0
  2614  0017D2  6E31               	movwf	?___ftadd+3,c
  2615  0017D4  0E80               	movlw	128
  2616  0017D6  6E32               	movwf	?___ftadd+4,c
  2617  0017D8  0EBF               	movlw	191
  2618  0017DA  6E33               	movwf	?___ftadd+5,c
  2619  0017DC  EC10  F009         	call	___ftadd	;wreg free
  2620  0017E0  C030  F04D         	movff	?___ftadd+2,log@x+2
  2621  0017E4  C02F  F04C         	movff	?___ftadd+1,log@x+1
  2622  0017E8  C02E  F04B         	movff	?___ftadd,log@x
  2623  0017EC  064E               	decf	log@exponent,f,c
  2624  0017EE  A0D8               	btfss	status,0,c
  2625  0017F0  064F               	decf	log@exponent+1,f,c
  2626  0017F2  C04B  F03C         	movff	log@x,?_eval_poly
  2627  0017F6  C04C  F03D         	movff	log@x+1,?_eval_poly+1
  2628  0017FA  C04D  F03E         	movff	log@x+2,?_eval_poly+2
  2629  0017FE  0E10               	movlw	high log@coeff
  2630  001800  6E40               	movwf	?_eval_poly+4,c
  2631  001802  0E1E               	movlw	low log@coeff
  2632  001804  6E3F               	movwf	?_eval_poly+3,c
  2633  001806  0E00               	movlw	0
  2634  001808  6E42               	movwf	?_eval_poly+6,c
  2635  00180A  0E08               	movlw	8
  2636  00180C  6E41               	movwf	?_eval_poly+5,c
  2637  00180E  ECB9  F00E         	call	_eval_poly	;wreg free
  2638  001812  C03E  F04D         	movff	?_eval_poly+2,log@x+2
  2639  001816  C03D  F04C         	movff	?_eval_poly+1,log@x+1
  2640  00181A  C03C  F04B         	movff	?_eval_poly,log@x
  2641  00181E  0E72               	movlw	114
  2642  001820  6E20               	movwf	?___ftmul+3,c
  2643  001822  0E31               	movlw	49
  2644  001824  6E21               	movwf	?___ftmul+4,c
  2645  001826  0E3F               	movlw	63
  2646  001828  6E22               	movwf	?___ftmul+5,c
  2647  00182A  C04E  F018         	movff	log@exponent,?___awtoft
  2648  00182E  C04F  F019         	movff	log@exponent+1,?___awtoft+1
  2649  001832  EC8E  F010         	call	___awtoft	;wreg free
  2650  001836  C01A  F01F         	movff	?___awtoft+2,?___ftmul+2
  2651  00183A  C019  F01E         	movff	?___awtoft+1,?___ftmul+1
  2652  00183E  C018  F01D         	movff	?___awtoft,?___ftmul
  2653  001842  EC38  F00C         	call	___ftmul	;wreg free
  2654  001846  C01F  F030         	movff	?___ftmul+2,?___ftadd+2
  2655  00184A  C01E  F02F         	movff	?___ftmul+1,?___ftadd+1
  2656  00184E  C01D  F02E         	movff	?___ftmul,?___ftadd
  2657  001852  C04B  F031         	movff	log@x,?___ftadd+3
  2658  001856  C04C  F032         	movff	log@x+1,?___ftadd+4
  2659  00185A  C04D  F033         	movff	log@x+2,?___ftadd+5
  2660  00185E  EC10  F009         	call	___ftadd	;wreg free
  2661  001862  C030  F04D         	movff	?___ftadd+2,?_log+2
  2662  001866  C02F  F04C         	movff	?___ftadd+1,?_log+1
  2663  00186A  C02E  F04B         	movff	?___ftadd,?_log
  2664  00186E  0012               	return	
  2665  001870                     __end_of_log:
  2666                           	opt stack 0
  2667                           wreg	equ	0xFE8
  2668                           postinc2	equ	0xFDE
  2669                           postdec2	equ	0xFDD
  2670                           fsr2h	equ	0xFDA
  2671                           fsr2l	equ	0xFD9
  2672                           status	equ	0xFD8
  2673                           
  2674 ;; *************** function _frexp *****************
  2675 ;; Defined at:
  2676 ;;		line 255 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\frexp.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;  value           3    0[COMRAM] int 
  2679 ;;  eptr            2    3[COMRAM] PTR int 
  2680 ;;		 -> log@exponent(2), floor@expon(2), 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;		None
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  3    0[COMRAM] PTR int 
  2685 ;; Registers used:
  2686 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2692 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;Total ram usage:        8 bytes
  2697 ;; Hardware stack levels used:    1
  2698 ;; This function calls:
  2699 ;;		Nothing
  2700 ;; This function is called by:
  2701 ;;		_floor
  2702 ;;		_log
  2703 ;; This function uses a non-reentrant model
  2704 ;;
  2705                           
  2706                           	psect	text15
  2707  001FA4                     __ptext15:
  2708                           	opt stack 0
  2709  001FA4                     _frexp:
  2710                           	opt stack 25
  2711                           
  2712                           ;incstack = 0
  2713                           ;incstack = 0
  2714  001FA4  0E7F               	movlw	127
  2715  001FA6  1403               	andwf	frexp@value+2,w,c
  2716  001FA8  1002               	iorwf	frexp@value+1,w,c
  2717  001FAA  1001               	iorwf	frexp@value,w,c
  2718  001FAC  A4D8               	btfss	status,2,c
  2719  001FAE  D00F               	goto	l1941
  2720  001FB0  C004  FFD9         	movff	frexp@eptr,fsr2l
  2721  001FB4  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  2722  001FB8  0E00               	movlw	0
  2723  001FBA  6EDE               	movwf	postinc2,c
  2724  001FBC  0E00               	movlw	0
  2725  001FBE  6EDD               	movwf	postdec2,c
  2726  001FC0  0E00               	movlw	0
  2727  001FC2  6E01               	movwf	?_frexp,c
  2728  001FC4  0E00               	movlw	0
  2729  001FC6  6E02               	movwf	?_frexp+1,c
  2730  001FC8  0E00               	movlw	0
  2731  001FCA  6E03               	movwf	?_frexp+2,c
  2732  001FCC  0012               	return	
  2733  001FCE                     l1941:
  2734  001FCE  5003               	movf	frexp@value+2,w,c
  2735  001FD0  0B7F               	andlw	127
  2736  001FD2  6E06               	movwf	??_frexp& (0+255),c
  2737  001FD4  90D8               	bcf	status,0,c
  2738  001FD6  3406               	rlcf	??_frexp,w,c
  2739  001FD8  6E07               	movwf	(??_frexp+1)& (0+255),c
  2740  001FDA  6A08               	clrf	(??_frexp+2)& (0+255),c
  2741  001FDC  3608               	rlcf	(??_frexp+2)& (0+255),f,c
  2742  001FDE  C004  FFD9         	movff	frexp@eptr,fsr2l
  2743  001FE2  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  2744  001FE6  C007  FFDE         	movff	??_frexp+1,postinc2
  2745  001FEA  C008  FFDD         	movff	??_frexp+2,postdec2
  2746  001FEE  3402               	rlcf	frexp@value+1,w,c
  2747  001FF0  36E8               	rlcf	wreg,f,c
  2748  001FF2  0B01               	andlw	1
  2749  001FF4  6E06               	movwf	??_frexp& (0+255),c
  2750  001FF6  5006               	movf	??_frexp,w,c
  2751  001FF8  C004  FFD9         	movff	frexp@eptr,fsr2l
  2752  001FFC  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  2753  002000  12DE               	iorwf	postinc2,f,c
  2754  002002  0E00               	movlw	0
  2755  002004  12DD               	iorwf	postdec2,f,c
  2756  002006  C004  FFD9         	movff	frexp@eptr,fsr2l
  2757  00200A  C005  FFDA         	movff	frexp@eptr+1,fsr2h
  2758  00200E  0E82               	movlw	130
  2759  002010  26DE               	addwf	postinc2,f,c
  2760  002012  0EFF               	movlw	255
  2761  002014  22DD               	addwfc	postdec2,f,c
  2762  002016  8003               	bsf	frexp@value+2,0,c
  2763  002018  8203               	bsf	frexp@value+2,1,c
  2764  00201A  8403               	bsf	frexp@value+2,2,c
  2765  00201C  8603               	bsf	frexp@value+2,3,c
  2766  00201E  8803               	bsf	frexp@value+2,4,c
  2767  002020  8A03               	bsf	frexp@value+2,5,c
  2768  002022  9C03               	bcf	frexp@value+2,6,c
  2769  002024  9E02               	bcf	frexp@value+1,7,c
  2770  002026  C001  F001         	movff	frexp@value,?_frexp
  2771  00202A  C002  F002         	movff	frexp@value+1,?_frexp+1
  2772  00202E  C003  F003         	movff	frexp@value+2,?_frexp+2
  2773  002032  0012               	return	
  2774  002034                     __end_of_frexp:
  2775                           	opt stack 0
  2776                           wreg	equ	0xFE8
  2777                           postinc2	equ	0xFDE
  2778                           postdec2	equ	0xFDD
  2779                           fsr2h	equ	0xFDA
  2780                           fsr2l	equ	0xFD9
  2781                           status	equ	0xFD8
  2782                           
  2783 ;; *************** function _eval_poly *****************
  2784 ;; Defined at:
  2785 ;;		line 5 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\evalpoly.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;  x               3   59[COMRAM] PTR int 
  2788 ;;  d               2   62[COMRAM] PTR const 
  2789 ;;		 -> log@coeff(27), exp@coeff(30), 
  2790 ;;  n               2   64[COMRAM] int 
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;  res             3   71[COMRAM] int 
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  3   59[COMRAM] int 
  2795 ;; Registers used:
  2796 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2802 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2803 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2804 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2805 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2806 ;;Total ram usage:       15 bytes
  2807 ;; Hardware stack levels used:    1
  2808 ;; Hardware stack levels required when called:    2
  2809 ;; This function calls:
  2810 ;;		___ftadd
  2811 ;;		___ftmul
  2812 ;;		___wmul
  2813 ;; This function is called by:
  2814 ;;		_exp
  2815 ;;		_log
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text16
  2820  001D72                     __ptext16:
  2821                           	opt stack 0
  2822  001D72                     _eval_poly:
  2823                           	opt stack 24
  2824                           
  2825                           ;incstack = 0
  2826                           ;incstack = 0
  2827  001D72  C041  F001         	movff	eval_poly@n,?___wmul
  2828  001D76  C042  F002         	movff	eval_poly@n+1,?___wmul+1
  2829  001D7A  0E00               	movlw	0
  2830  001D7C  6E04               	movwf	?___wmul+3,c
  2831  001D7E  0E03               	movlw	3
  2832  001D80  6E03               	movwf	?___wmul+2,c
  2833  001D82  ECEC  F010         	call	___wmul	;wreg free
  2834  001D86  5001               	movf	?___wmul,w,c
  2835  001D88  243F               	addwf	eval_poly@d,w,c
  2836  001D8A  6E43               	movwf	??_eval_poly& (0+255),c
  2837  001D8C  5002               	movf	?___wmul+1,w,c
  2838  001D8E  2040               	addwfc	eval_poly@d+1,w,c
  2839  001D90  6E44               	movwf	(??_eval_poly+1)& (0+255),c
  2840  001D92  C043  FFF6         	movff	??_eval_poly,tblptrl
  2841  001D96  C044  FFF7         	movff	??_eval_poly+1,tblptrh
  2842  001D9A  0E00               	movlw	low (__mediumconst shr (0+16))
  2843  001D9C  6EF8               	movwf	tblptru,c
  2844  001D9E  0009               	tblrd		*+
  2845  001DA0  CFF5 F045          	movff	tablat,??_eval_poly+2
  2846  001DA4  0009               	tblrd		*+
  2847  001DA6  CFF5 F046          	movff	tablat,??_eval_poly+3
  2848  001DAA  0009               	tblrd		*+
  2849  001DAC  CFF5 F047          	movff	tablat,??_eval_poly+4
  2850  001DB0  C047  F04A         	movff	??_eval_poly+4,eval_poly@res+2
  2851  001DB4  C046  F049         	movff	??_eval_poly+3,eval_poly@res+1
  2852  001DB8  C045  F048         	movff	??_eval_poly+2,eval_poly@res
  2853  001DBC  D044               	goto	l2275
  2854  001DBE                     l2273:
  2855  001DBE  C048  F020         	movff	eval_poly@res,?___ftmul+3
  2856  001DC2  C049  F021         	movff	eval_poly@res+1,?___ftmul+4
  2857  001DC6  C04A  F022         	movff	eval_poly@res+2,?___ftmul+5
  2858  001DCA  C03C  F01D         	movff	eval_poly@x,?___ftmul
  2859  001DCE  C03D  F01E         	movff	eval_poly@x+1,?___ftmul+1
  2860  001DD2  C03E  F01F         	movff	eval_poly@x+2,?___ftmul+2
  2861  001DD6  EC38  F00C         	call	___ftmul	;wreg free
  2862  001DDA  C01F  F030         	movff	?___ftmul+2,?___ftadd+2
  2863  001DDE  C01E  F02F         	movff	?___ftmul+1,?___ftadd+1
  2864  001DE2  C01D  F02E         	movff	?___ftmul,?___ftadd
  2865  001DE6  0E00               	movlw	0
  2866  001DE8  6E04               	movwf	?___wmul+3,c
  2867  001DEA  0E03               	movlw	3
  2868  001DEC  6E03               	movwf	?___wmul+2,c
  2869  001DEE  0641               	decf	eval_poly@n,f,c
  2870  001DF0  A0D8               	btfss	status,0,c
  2871  001DF2  0642               	decf	eval_poly@n+1,f,c
  2872  001DF4  C041  F001         	movff	eval_poly@n,?___wmul
  2873  001DF8  C042  F002         	movff	eval_poly@n+1,?___wmul+1
  2874  001DFC  ECEC  F010         	call	___wmul	;wreg free
  2875  001E00  5001               	movf	?___wmul,w,c
  2876  001E02  243F               	addwf	eval_poly@d,w,c
  2877  001E04  6E43               	movwf	??_eval_poly& (0+255),c
  2878  001E06  5002               	movf	?___wmul+1,w,c
  2879  001E08  2040               	addwfc	eval_poly@d+1,w,c
  2880  001E0A  6E44               	movwf	(??_eval_poly+1)& (0+255),c
  2881  001E0C  C043  FFF6         	movff	??_eval_poly,tblptrl
  2882  001E10  C044  FFF7         	movff	??_eval_poly+1,tblptrh
  2883  001E14  0E00               	movlw	low (__mediumconst shr (0+16))
  2884  001E16  6EF8               	movwf	tblptru,c
  2885  001E18  0009               	tblrd		*+
  2886  001E1A  CFF5 F045          	movff	tablat,??_eval_poly+2
  2887  001E1E  0009               	tblrd		*+
  2888  001E20  CFF5 F046          	movff	tablat,??_eval_poly+3
  2889  001E24  0009               	tblrd		*+
  2890  001E26  CFF5 F047          	movff	tablat,??_eval_poly+4
  2891  001E2A  C047  F033         	movff	??_eval_poly+4,?___ftadd+5
  2892  001E2E  C046  F032         	movff	??_eval_poly+3,?___ftadd+4
  2893  001E32  C045  F031         	movff	??_eval_poly+2,?___ftadd+3
  2894  001E36  EC10  F009         	call	___ftadd	;wreg free
  2895  001E3A  C030  F04A         	movff	?___ftadd+2,eval_poly@res+2
  2896  001E3E  C02F  F049         	movff	?___ftadd+1,eval_poly@res+1
  2897  001E42  C02E  F048         	movff	?___ftadd,eval_poly@res
  2898  001E46                     l2275:
  2899  001E46  5042               	movf	eval_poly@n+1,w,c
  2900  001E48  1041               	iorwf	eval_poly@n,w,c
  2901  001E4A  A4D8               	btfss	status,2,c
  2902  001E4C  D7B8               	goto	l2273
  2903  001E4E  C048  F03C         	movff	eval_poly@res,?_eval_poly
  2904  001E52  C049  F03D         	movff	eval_poly@res+1,?_eval_poly+1
  2905  001E56  C04A  F03E         	movff	eval_poly@res+2,?_eval_poly+2
  2906  001E5A  0012               	return	
  2907  001E5C                     __end_of_eval_poly:
  2908                           	opt stack 0
  2909                           tblptru	equ	0xFF8
  2910                           tblptrh	equ	0xFF7
  2911                           tblptrl	equ	0xFF6
  2912                           tablat	equ	0xFF5
  2913                           wreg	equ	0xFE8
  2914                           postinc2	equ	0xFDE
  2915                           postdec2	equ	0xFDD
  2916                           fsr2h	equ	0xFDA
  2917                           fsr2l	equ	0xFD9
  2918                           status	equ	0xFD8
  2919                           
  2920 ;; *************** function ___ftmul *****************
  2921 ;; Defined at:
  2922 ;;		line 52 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\ftmul.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  f1              3   28[COMRAM] float 
  2925 ;;  f2              3   31[COMRAM] float 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;  f3_as_produc    3   40[COMRAM] unsigned um
  2928 ;;  sign            1   44[COMRAM] unsigned char 
  2929 ;;  cntr            1   43[COMRAM] unsigned char 
  2930 ;;  exp             1   39[COMRAM] unsigned char 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  3   28[COMRAM] float 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0, cstack
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2940 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2942 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2943 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2944 ;;Total ram usage:       17 bytes
  2945 ;; Hardware stack levels used:    1
  2946 ;; Hardware stack levels required when called:    1
  2947 ;; This function calls:
  2948 ;;		___ftpack
  2949 ;; This function is called by:
  2950 ;;		___asftmul
  2951 ;;		_pow
  2952 ;;		_log
  2953 ;;		_eval_poly
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           	psect	text17
  2958  001870                     __ptext17:
  2959                           	opt stack 0
  2960  001870                     ___ftmul:
  2961                           	opt stack 24
  2962                           
  2963                           ;incstack = 0
  2964                           ;incstack = 0
  2965  001870  0E0F               	movlw	15
  2966  001872  6E23               	movwf	??___ftmul& (0+255),c
  2967  001874  C01D  F024         	movff	___ftmul@f1,??___ftmul+1
  2968  001878  C01E  F025         	movff	___ftmul@f1+1,??___ftmul+2
  2969  00187C  C01F  F026         	movff	___ftmul@f1+2,??___ftmul+3
  2970  001880  2823               	incf	??___ftmul,w,c
  2971  001882  6E27               	movwf	(??___ftmul+4)& (0+255),c
  2972  001884  D004               	goto	u1440
  2973  001886                     u1445:
  2974  001886  90D8               	bcf	status,0,c
  2975  001888  3226               	rrcf	??___ftmul+3,f,c
  2976  00188A  3225               	rrcf	??___ftmul+2,f,c
  2977  00188C  3224               	rrcf	??___ftmul+1,f,c
  2978  00188E                     u1440:
  2979  00188E  2E27               	decfsz	(??___ftmul+4)& (0+255),f,c
  2980  001890  D7FA               	goto	u1445
  2981  001892  5024               	movf	??___ftmul+1,w,c
  2982  001894  6E28               	movwf	___ftmul@exp,c
  2983  001896  6628               	tstfsz	___ftmul@exp& (0+255),c
  2984  001898  D007               	goto	l2195
  2985  00189A  0E00               	movlw	0
  2986  00189C  6E1D               	movwf	?___ftmul,c
  2987  00189E  0E00               	movlw	0
  2988  0018A0  6E1E               	movwf	?___ftmul+1,c
  2989  0018A2  0E00               	movlw	0
  2990  0018A4  6E1F               	movwf	?___ftmul+2,c
  2991  0018A6  0012               	return	
  2992  0018A8                     l2195:
  2993  0018A8  0E0F               	movlw	15
  2994  0018AA  6E23               	movwf	??___ftmul& (0+255),c
  2995  0018AC  C020  F024         	movff	___ftmul@f2,??___ftmul+1
  2996  0018B0  C021  F025         	movff	___ftmul@f2+1,??___ftmul+2
  2997  0018B4  C022  F026         	movff	___ftmul@f2+2,??___ftmul+3
  2998  0018B8  2823               	incf	??___ftmul,w,c
  2999  0018BA  6E27               	movwf	(??___ftmul+4)& (0+255),c
  3000  0018BC  D004               	goto	u1460
  3001  0018BE                     u1465:
  3002  0018BE  90D8               	bcf	status,0,c
  3003  0018C0  3226               	rrcf	??___ftmul+3,f,c
  3004  0018C2  3225               	rrcf	??___ftmul+2,f,c
  3005  0018C4  3224               	rrcf	??___ftmul+1,f,c
  3006  0018C6                     u1460:
  3007  0018C6  2E27               	decfsz	(??___ftmul+4)& (0+255),f,c
  3008  0018C8  D7FA               	goto	u1465
  3009  0018CA  5024               	movf	??___ftmul+1,w,c
  3010  0018CC  6E2D               	movwf	___ftmul@sign,c
  3011  0018CE  662D               	tstfsz	___ftmul@sign& (0+255),c
  3012  0018D0  D007               	goto	l2201
  3013  0018D2  0E00               	movlw	0
  3014  0018D4  6E1D               	movwf	?___ftmul,c
  3015  0018D6  0E00               	movlw	0
  3016  0018D8  6E1E               	movwf	?___ftmul+1,c
  3017  0018DA  0E00               	movlw	0
  3018  0018DC  6E1F               	movwf	?___ftmul+2,c
  3019  0018DE  0012               	return	
  3020  0018E0                     l2201:
  3021  0018E0  502D               	movf	___ftmul@sign,w,c
  3022  0018E2  0F7B               	addlw	123
  3023  0018E4  2628               	addwf	___ftmul@exp,f,c
  3024  0018E6  C01F  F02D         	movff	___ftmul@f1+2,___ftmul@sign
  3025  0018EA  5022               	movf	(___ftmul@f2+2)& (0+255),w,c
  3026  0018EC  1A2D               	xorwf	___ftmul@sign,f,c
  3027  0018EE  0E80               	movlw	128
  3028  0018F0  162D               	andwf	___ftmul@sign,f,c
  3029  0018F2  8E1E               	bsf	___ftmul@f1+1,7,c
  3030  0018F4  8E21               	bsf	___ftmul@f2+1,7,c
  3031  0018F6  0EFF               	movlw	255
  3032  0018F8  1620               	andwf	___ftmul@f2,f,c
  3033  0018FA  0EFF               	movlw	255
  3034  0018FC  1621               	andwf	___ftmul@f2+1,f,c
  3035  0018FE  0E00               	movlw	0
  3036  001900  1622               	andwf	___ftmul@f2+2,f,c
  3037  001902  0E00               	movlw	0
  3038  001904  6E29               	movwf	___ftmul@f3_as_product,c
  3039  001906  0E00               	movlw	0
  3040  001908  6E2A               	movwf	___ftmul@f3_as_product+1,c
  3041  00190A  0E00               	movlw	0
  3042  00190C  6E2B               	movwf	___ftmul@f3_as_product+2,c
  3043  00190E  6E23               	movwf	??___ftmul& (0+255),c
  3044  001910  0E07               	movlw	7
  3045  001912  6E2C               	movwf	___ftmul@cntr,c
  3046  001914  5023               	movf	??___ftmul& (0+255),w,c
  3047  001916                     l2215:
  3048  001916  A01D               	btfss	___ftmul@f1,0,c
  3049  001918  D006               	goto	l2219
  3050  00191A  5020               	movf	___ftmul@f2,w,c
  3051  00191C  2629               	addwf	___ftmul@f3_as_product,f,c
  3052  00191E  5021               	movf	___ftmul@f2+1,w,c
  3053  001920  222A               	addwfc	___ftmul@f3_as_product+1,f,c
  3054  001922  5022               	movf	___ftmul@f2+2,w,c
  3055  001924  222B               	addwfc	___ftmul@f3_as_product+2,f,c
  3056  001926                     l2219:
  3057  001926  90D8               	bcf	status,0,c
  3058  001928  321F               	rrcf	___ftmul@f1+2,f,c
  3059  00192A  321E               	rrcf	___ftmul@f1+1,f,c
  3060  00192C  321D               	rrcf	___ftmul@f1,f,c
  3061  00192E  90D8               	bcf	status,0,c
  3062  001930  3620               	rlcf	___ftmul@f2,f,c
  3063  001932  3621               	rlcf	___ftmul@f2+1,f,c
  3064  001934  3622               	rlcf	___ftmul@f2+2,f,c
  3065  001936  2E2C               	decfsz	___ftmul@cntr,f,c
  3066  001938  D7EE               	goto	l2215
  3067  00193A  6E23               	movwf	??___ftmul& (0+255),c
  3068  00193C  0E09               	movlw	9
  3069  00193E  6E2C               	movwf	___ftmul@cntr,c
  3070  001940  5023               	movf	??___ftmul& (0+255),w,c
  3071  001942                     l2225:
  3072  001942  A01D               	btfss	___ftmul@f1,0,c
  3073  001944  D006               	goto	l2229
  3074  001946  5020               	movf	___ftmul@f2,w,c
  3075  001948  2629               	addwf	___ftmul@f3_as_product,f,c
  3076  00194A  5021               	movf	___ftmul@f2+1,w,c
  3077  00194C  222A               	addwfc	___ftmul@f3_as_product+1,f,c
  3078  00194E  5022               	movf	___ftmul@f2+2,w,c
  3079  001950  222B               	addwfc	___ftmul@f3_as_product+2,f,c
  3080  001952                     l2229:
  3081  001952  90D8               	bcf	status,0,c
  3082  001954  321F               	rrcf	___ftmul@f1+2,f,c
  3083  001956  321E               	rrcf	___ftmul@f1+1,f,c
  3084  001958  321D               	rrcf	___ftmul@f1,f,c
  3085  00195A  90D8               	bcf	status,0,c
  3086  00195C  322B               	rrcf	___ftmul@f3_as_product+2,f,c
  3087  00195E  322A               	rrcf	___ftmul@f3_as_product+1,f,c
  3088  001960  3229               	rrcf	___ftmul@f3_as_product,f,c
  3089  001962  2E2C               	decfsz	___ftmul@cntr,f,c
  3090  001964  D7EE               	goto	l2225
  3091  001966  C029  F001         	movff	___ftmul@f3_as_product,?___ftpack
  3092  00196A  C02A  F002         	movff	___ftmul@f3_as_product+1,?___ftpack+1
  3093  00196E  C02B  F003         	movff	___ftmul@f3_as_product+2,?___ftpack+2
  3094  001972  C028  F004         	movff	___ftmul@exp,?___ftpack+3
  3095  001976  C02D  F005         	movff	___ftmul@sign,?___ftpack+4
  3096  00197A  EC2E  F00F         	call	___ftpack	;wreg free
  3097  00197E  C003  F01F         	movff	?___ftpack+2,?___ftmul+2
  3098  001982  C002  F01E         	movff	?___ftpack+1,?___ftmul+1
  3099  001986  C001  F01D         	movff	?___ftpack,?___ftmul
  3100  00198A  0012               	return	
  3101  00198C                     __end_of___ftmul:
  3102                           	opt stack 0
  3103                           tblptru	equ	0xFF8
  3104                           tblptrh	equ	0xFF7
  3105                           tblptrl	equ	0xFF6
  3106                           tablat	equ	0xFF5
  3107                           wreg	equ	0xFE8
  3108                           postinc2	equ	0xFDE
  3109                           postdec2	equ	0xFDD
  3110                           fsr2h	equ	0xFDA
  3111                           fsr2l	equ	0xFD9
  3112                           status	equ	0xFD8
  3113                           
  3114 ;; *************** function ___ftadd *****************
  3115 ;; Defined at:
  3116 ;;		line 87 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\ftadd.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  f1              3   45[COMRAM] float 
  3119 ;;  f2              3   48[COMRAM] float 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  exp1            1   58[COMRAM] unsigned char 
  3122 ;;  exp2            1   57[COMRAM] unsigned char 
  3123 ;;  sign            1   56[COMRAM] unsigned char 
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  3   45[COMRAM] float 
  3126 ;; Registers used:
  3127 ;;		wreg, status,2, status,0, cstack
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3133 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3136 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3137 ;;Total ram usage:       14 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; Hardware stack levels required when called:    1
  3140 ;; This function calls:
  3141 ;;		___ftpack
  3142 ;; This function is called by:
  3143 ;;		___ftsub
  3144 ;;		_floor
  3145 ;;		_log
  3146 ;;		_eval_poly
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text18
  3151  001220                     __ptext18:
  3152                           	opt stack 0
  3153  001220                     ___ftadd:
  3154                           	opt stack 24
  3155                           
  3156                           ;incstack = 0
  3157                           ;incstack = 0
  3158  001220  0E0F               	movlw	15
  3159  001222  6E34               	movwf	??___ftadd& (0+255),c
  3160  001224  C02E  F035         	movff	___ftadd@f1,??___ftadd+1
  3161  001228  C02F  F036         	movff	___ftadd@f1+1,??___ftadd+2
  3162  00122C  C030  F037         	movff	___ftadd@f1+2,??___ftadd+3
  3163  001230  2834               	incf	??___ftadd,w,c
  3164  001232  6E38               	movwf	(??___ftadd+4)& (0+255),c
  3165  001234  D004               	goto	u1230
  3166  001236                     u1235:
  3167  001236  90D8               	bcf	status,0,c
  3168  001238  3237               	rrcf	??___ftadd+3,f,c
  3169  00123A  3236               	rrcf	??___ftadd+2,f,c
  3170  00123C  3235               	rrcf	??___ftadd+1,f,c
  3171  00123E                     u1230:
  3172  00123E  2E38               	decfsz	(??___ftadd+4)& (0+255),f,c
  3173  001240  D7FA               	goto	u1235
  3174  001242  5035               	movf	??___ftadd+1,w,c
  3175  001244  6E3B               	movwf	___ftadd@exp1,c
  3176  001246  0E0F               	movlw	15
  3177  001248  6E34               	movwf	??___ftadd& (0+255),c
  3178  00124A  C031  F035         	movff	___ftadd@f2,??___ftadd+1
  3179  00124E  C032  F036         	movff	___ftadd@f2+1,??___ftadd+2
  3180  001252  C033  F037         	movff	___ftadd@f2+2,??___ftadd+3
  3181  001256  2834               	incf	??___ftadd,w,c
  3182  001258  6E38               	movwf	(??___ftadd+4)& (0+255),c
  3183  00125A  D004               	goto	u1240
  3184  00125C                     u1245:
  3185  00125C  90D8               	bcf	status,0,c
  3186  00125E  3237               	rrcf	??___ftadd+3,f,c
  3187  001260  3236               	rrcf	??___ftadd+2,f,c
  3188  001262  3235               	rrcf	??___ftadd+1,f,c
  3189  001264                     u1240:
  3190  001264  2E38               	decfsz	(??___ftadd+4)& (0+255),f,c
  3191  001266  D7FA               	goto	u1245
  3192  001268  5035               	movf	??___ftadd+1,w,c
  3193  00126A  6E3A               	movwf	___ftadd@exp2,c
  3194  00126C  503B               	movf	___ftadd@exp1,w,c
  3195  00126E  B4D8               	btfsc	status,2,c
  3196  001270  D00B               	goto	l367
  3197  001272  503A               	movf	___ftadd@exp2,w,c
  3198  001274  603B               	cpfslt	___ftadd@exp1,c
  3199  001276  D00F               	goto	l2127
  3200  001278  503B               	movf	___ftadd@exp1,w,c
  3201  00127A  0800               	sublw	0
  3202  00127C  243A               	addwf	___ftadd@exp2,w,c
  3203  00127E  6E34               	movwf	??___ftadd& (0+255),c
  3204  001280  0E19               	movlw	25
  3205  001282  5C34               	subwf	??___ftadd,w,c
  3206  001284  A0D8               	btfss	status,0,c
  3207  001286  D007               	goto	l2127
  3208  001288                     l367:
  3209  001288  C031  F02E         	movff	___ftadd@f2,?___ftadd
  3210  00128C  C032  F02F         	movff	___ftadd@f2+1,?___ftadd+1
  3211  001290  C033  F030         	movff	___ftadd@f2+2,?___ftadd+2
  3212  001294  0012               	return	
  3213  001296                     l2127:
  3214  001296  503A               	movf	___ftadd@exp2,w,c
  3215  001298  B4D8               	btfsc	status,2,c
  3216  00129A  D00B               	goto	l371
  3217  00129C  503B               	movf	___ftadd@exp1,w,c
  3218  00129E  603A               	cpfslt	___ftadd@exp2,c
  3219  0012A0  D00F               	goto	l2133
  3220  0012A2  503A               	movf	___ftadd@exp2,w,c
  3221  0012A4  0800               	sublw	0
  3222  0012A6  243B               	addwf	___ftadd@exp1,w,c
  3223  0012A8  6E34               	movwf	??___ftadd& (0+255),c
  3224  0012AA  0E19               	movlw	25
  3225  0012AC  5C34               	subwf	??___ftadd,w,c
  3226  0012AE  A0D8               	btfss	status,0,c
  3227  0012B0  D007               	goto	l2133
  3228  0012B2                     l371:
  3229  0012B2  C02E  F02E         	movff	___ftadd@f1,?___ftadd
  3230  0012B6  C02F  F02F         	movff	___ftadd@f1+1,?___ftadd+1
  3231  0012BA  C030  F030         	movff	___ftadd@f1+2,?___ftadd+2
  3232  0012BE  0012               	return	
  3233  0012C0                     l2133:
  3234  0012C0  6E34               	movwf	??___ftadd& (0+255),c
  3235  0012C2  0E06               	movlw	6
  3236  0012C4  6E39               	movwf	___ftadd@sign,c
  3237  0012C6  5034               	movf	??___ftadd& (0+255),w,c
  3238  0012C8  BE30               	btfsc	___ftadd@f1+2,7,c
  3239  0012CA  8E39               	bsf	___ftadd@sign,7,c
  3240  0012CC  BE33               	btfsc	___ftadd@f2+2,7,c
  3241  0012CE  8C39               	bsf	___ftadd@sign,6,c
  3242  0012D0  8E2F               	bsf	___ftadd@f1+1,7,c
  3243  0012D2  0EFF               	movlw	255
  3244  0012D4  162E               	andwf	___ftadd@f1,f,c
  3245  0012D6  0EFF               	movlw	255
  3246  0012D8  162F               	andwf	___ftadd@f1+1,f,c
  3247  0012DA  0E00               	movlw	0
  3248  0012DC  1630               	andwf	___ftadd@f1+2,f,c
  3249  0012DE  8E32               	bsf	___ftadd@f2+1,7,c
  3250  0012E0  0EFF               	movlw	255
  3251  0012E2  1631               	andwf	___ftadd@f2,f,c
  3252  0012E4  0EFF               	movlw	255
  3253  0012E6  1632               	andwf	___ftadd@f2+1,f,c
  3254  0012E8  0E00               	movlw	0
  3255  0012EA  1633               	andwf	___ftadd@f2+2,f,c
  3256  0012EC  503A               	movf	___ftadd@exp2,w,c
  3257  0012EE  603B               	cpfslt	___ftadd@exp1,c
  3258  0012F0  D018               	goto	l2159
  3259  0012F2                     l2149:
  3260  0012F2  90D8               	bcf	status,0,c
  3261  0012F4  3631               	rlcf	___ftadd@f2,f,c
  3262  0012F6  3632               	rlcf	___ftadd@f2+1,f,c
  3263  0012F8  3633               	rlcf	___ftadd@f2+2,f,c
  3264  0012FA  063A               	decf	___ftadd@exp2,f,c
  3265  0012FC  503A               	movf	___ftadd@exp2,w,c
  3266  0012FE  183B               	xorwf	___ftadd@exp1,w,c
  3267  001300  B4D8               	btfsc	status,2,c
  3268  001302  D00B               	goto	l2157
  3269  001304  0639               	decf	___ftadd@sign,f,c
  3270  001306  5039               	movf	___ftadd@sign& (0+255),w,c
  3271  001308  0B07               	andlw	7
  3272  00130A  B4D8               	btfsc	status,2,c
  3273  00130C  D006               	goto	l2157
  3274  00130E  D7F1               	goto	l2149
  3275  001310                     l2155:
  3276  001310  90D8               	bcf	status,0,c
  3277  001312  3230               	rrcf	___ftadd@f1+2,f,c
  3278  001314  322F               	rrcf	___ftadd@f1+1,f,c
  3279  001316  322E               	rrcf	___ftadd@f1,f,c
  3280  001318  2A3B               	incf	___ftadd@exp1,f,c
  3281  00131A                     l2157:
  3282  00131A  503A               	movf	___ftadd@exp2,w,c
  3283  00131C  623B               	cpfseq	___ftadd@exp1,c
  3284  00131E  D7F8               	goto	l2155
  3285  001320  D01A               	goto	l382
  3286  001322                     l2159:
  3287  001322  503B               	movf	___ftadd@exp1,w,c
  3288  001324  603A               	cpfslt	___ftadd@exp2,c
  3289  001326  D017               	goto	l382
  3290  001328                     l2161:
  3291  001328  90D8               	bcf	status,0,c
  3292  00132A  362E               	rlcf	___ftadd@f1,f,c
  3293  00132C  362F               	rlcf	___ftadd@f1+1,f,c
  3294  00132E  3630               	rlcf	___ftadd@f1+2,f,c
  3295  001330  063B               	decf	___ftadd@exp1,f,c
  3296  001332  503A               	movf	___ftadd@exp2,w,c
  3297  001334  183B               	xorwf	___ftadd@exp1,w,c
  3298  001336  B4D8               	btfsc	status,2,c
  3299  001338  D00B               	goto	l2169
  3300  00133A  0639               	decf	___ftadd@sign,f,c
  3301  00133C  5039               	movf	___ftadd@sign& (0+255),w,c
  3302  00133E  0B07               	andlw	7
  3303  001340  B4D8               	btfsc	status,2,c
  3304  001342  D006               	goto	l2169
  3305  001344  D7F1               	goto	l2161
  3306  001346                     l2167:
  3307  001346  90D8               	bcf	status,0,c
  3308  001348  3233               	rrcf	___ftadd@f2+2,f,c
  3309  00134A  3232               	rrcf	___ftadd@f2+1,f,c
  3310  00134C  3231               	rrcf	___ftadd@f2,f,c
  3311  00134E  2A3A               	incf	___ftadd@exp2,f,c
  3312  001350                     l2169:
  3313  001350  503A               	movf	___ftadd@exp2,w,c
  3314  001352  623B               	cpfseq	___ftadd@exp1,c
  3315  001354  D7F8               	goto	l2167
  3316  001356                     l382:
  3317  001356  AE39               	btfss	___ftadd@sign,7,c
  3318  001358  D00C               	goto	l391
  3319  00135A  0EFF               	movlw	255
  3320  00135C  1A2E               	xorwf	___ftadd@f1,f,c
  3321  00135E  0EFF               	movlw	255
  3322  001360  1A2F               	xorwf	___ftadd@f1+1,f,c
  3323  001362  0EFF               	movlw	255
  3324  001364  1A30               	xorwf	___ftadd@f1+2,f,c
  3325  001366  0E01               	movlw	1
  3326  001368  262E               	addwf	___ftadd@f1,f,c
  3327  00136A  0E00               	movlw	0
  3328  00136C  222F               	addwfc	___ftadd@f1+1,f,c
  3329  00136E  0E00               	movlw	0
  3330  001370  2230               	addwfc	___ftadd@f1+2,f,c
  3331  001372                     l391:
  3332  001372  AC39               	btfss	___ftadd@sign,6,c
  3333  001374  D00C               	goto	l2175
  3334  001376  0EFF               	movlw	255
  3335  001378  1A31               	xorwf	___ftadd@f2,f,c
  3336  00137A  0EFF               	movlw	255
  3337  00137C  1A32               	xorwf	___ftadd@f2+1,f,c
  3338  00137E  0EFF               	movlw	255
  3339  001380  1A33               	xorwf	___ftadd@f2+2,f,c
  3340  001382  0E01               	movlw	1
  3341  001384  2631               	addwf	___ftadd@f2,f,c
  3342  001386  0E00               	movlw	0
  3343  001388  2232               	addwfc	___ftadd@f2+1,f,c
  3344  00138A  0E00               	movlw	0
  3345  00138C  2233               	addwfc	___ftadd@f2+2,f,c
  3346  00138E                     l2175:
  3347  00138E  6E34               	movwf	??___ftadd& (0+255),c
  3348  001390  0E00               	movlw	0
  3349  001392  6E39               	movwf	___ftadd@sign,c
  3350  001394  5034               	movf	??___ftadd& (0+255),w,c
  3351  001396  502E               	movf	___ftadd@f1,w,c
  3352  001398  2631               	addwf	___ftadd@f2,f,c
  3353  00139A  502F               	movf	___ftadd@f1+1,w,c
  3354  00139C  2232               	addwfc	___ftadd@f2+1,f,c
  3355  00139E  5030               	movf	___ftadd@f1+2,w,c
  3356  0013A0  2233               	addwfc	___ftadd@f2+2,f,c
  3357  0013A2  AE33               	btfss	___ftadd@f2+2,7,c
  3358  0013A4  D010               	goto	l2185
  3359  0013A6  0EFF               	movlw	255
  3360  0013A8  1A31               	xorwf	___ftadd@f2,f,c
  3361  0013AA  0EFF               	movlw	255
  3362  0013AC  1A32               	xorwf	___ftadd@f2+1,f,c
  3363  0013AE  0EFF               	movlw	255
  3364  0013B0  1A33               	xorwf	___ftadd@f2+2,f,c
  3365  0013B2  0E01               	movlw	1
  3366  0013B4  2631               	addwf	___ftadd@f2,f,c
  3367  0013B6  0E00               	movlw	0
  3368  0013B8  2232               	addwfc	___ftadd@f2+1,f,c
  3369  0013BA  0E00               	movlw	0
  3370  0013BC  2233               	addwfc	___ftadd@f2+2,f,c
  3371  0013BE  6E34               	movwf	??___ftadd& (0+255),c
  3372  0013C0  0E01               	movlw	1
  3373  0013C2  6E39               	movwf	___ftadd@sign,c
  3374  0013C4  5034               	movf	??___ftadd& (0+255),w,c
  3375  0013C6                     l2185:
  3376  0013C6  C031  F001         	movff	___ftadd@f2,?___ftpack
  3377  0013CA  C032  F002         	movff	___ftadd@f2+1,?___ftpack+1
  3378  0013CE  C033  F003         	movff	___ftadd@f2+2,?___ftpack+2
  3379  0013D2  C03B  F004         	movff	___ftadd@exp1,?___ftpack+3
  3380  0013D6  C039  F005         	movff	___ftadd@sign,?___ftpack+4
  3381  0013DA  EC2E  F00F         	call	___ftpack	;wreg free
  3382  0013DE  C003  F030         	movff	?___ftpack+2,?___ftadd+2
  3383  0013E2  C002  F02F         	movff	?___ftpack+1,?___ftadd+1
  3384  0013E6  C001  F02E         	movff	?___ftpack,?___ftadd
  3385  0013EA  0012               	return	
  3386  0013EC                     __end_of___ftadd:
  3387                           	opt stack 0
  3388                           tblptru	equ	0xFF8
  3389                           tblptrh	equ	0xFF7
  3390                           tblptrl	equ	0xFF6
  3391                           tablat	equ	0xFF5
  3392                           wreg	equ	0xFE8
  3393                           postinc2	equ	0xFDE
  3394                           postdec2	equ	0xFDD
  3395                           fsr2h	equ	0xFDA
  3396                           fsr2l	equ	0xFD9
  3397                           status	equ	0xFD8
  3398                           
  3399 ;; *************** function ___ftpack *****************
  3400 ;; Defined at:
  3401 ;;		line 63 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\float.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;  arg             3    0[COMRAM] unsigned um
  3404 ;;  exp             1    3[COMRAM] unsigned char 
  3405 ;;  sign            1    4[COMRAM] unsigned char 
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;		None
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  3    0[COMRAM] float 
  3410 ;; Registers used:
  3411 ;;		wreg, status,2, status,0
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3417 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3419 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3420 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3421 ;;Total ram usage:        8 bytes
  3422 ;; Hardware stack levels used:    1
  3423 ;; This function calls:
  3424 ;;		Nothing
  3425 ;; This function is called by:
  3426 ;;		___altoft
  3427 ;;		___awtoft
  3428 ;;		___ftadd
  3429 ;;		___ftdiv
  3430 ;;		___ftmul
  3431 ;;		___lltoft
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           	psect	text19
  3436  001E5C                     __ptext19:
  3437                           	opt stack 0
  3438  001E5C                     ___ftpack:
  3439                           	opt stack 27
  3440                           
  3441                           ;incstack = 0
  3442                           ;incstack = 0
  3443  001E5C  5004               	movf	___ftpack@exp,w,c
  3444  001E5E  B4D8               	btfsc	status,2,c
  3445  001E60  D005               	goto	l1875
  3446  001E62  5001               	movf	___ftpack@arg,w,c
  3447  001E64  1002               	iorwf	___ftpack@arg+1,w,c
  3448  001E66  1003               	iorwf	___ftpack@arg+2,w,c
  3449  001E68  A4D8               	btfss	status,2,c
  3450  001E6A  D00C               	goto	l1881
  3451  001E6C                     l1875:
  3452  001E6C  0E00               	movlw	0
  3453  001E6E  6E01               	movwf	?___ftpack,c
  3454  001E70  0E00               	movlw	0
  3455  001E72  6E02               	movwf	?___ftpack+1,c
  3456  001E74  0E00               	movlw	0
  3457  001E76  6E03               	movwf	?___ftpack+2,c
  3458  001E78  0012               	return	
  3459  001E7A                     l1879:
  3460  001E7A  2A04               	incf	___ftpack@exp,f,c
  3461  001E7C  90D8               	bcf	status,0,c
  3462  001E7E  3203               	rrcf	___ftpack@arg+2,f,c
  3463  001E80  3202               	rrcf	___ftpack@arg+1,f,c
  3464  001E82  3201               	rrcf	___ftpack@arg,f,c
  3465  001E84                     l1881:
  3466  001E84  0E00               	movlw	0
  3467  001E86  1401               	andwf	___ftpack@arg,w,c
  3468  001E88  6E06               	movwf	??___ftpack& (0+255),c
  3469  001E8A  0E00               	movlw	0
  3470  001E8C  1402               	andwf	___ftpack@arg+1,w,c
  3471  001E8E  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3472  001E90  0EFE               	movlw	254
  3473  001E92  1403               	andwf	___ftpack@arg+2,w,c
  3474  001E94  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3475  001E96  5006               	movf	??___ftpack,w,c
  3476  001E98  1007               	iorwf	??___ftpack+1,w,c
  3477  001E9A  1008               	iorwf	??___ftpack+2,w,c
  3478  001E9C  B4D8               	btfsc	status,2,c
  3479  001E9E  D00C               	goto	l1887
  3480  001EA0  D7EC               	goto	l1879
  3481  001EA2                     l1883:
  3482  001EA2  2A04               	incf	___ftpack@exp,f,c
  3483  001EA4  0E01               	movlw	1
  3484  001EA6  2601               	addwf	___ftpack@arg,f,c
  3485  001EA8  0E00               	movlw	0
  3486  001EAA  2202               	addwfc	___ftpack@arg+1,f,c
  3487  001EAC  0E00               	movlw	0
  3488  001EAE  2203               	addwfc	___ftpack@arg+2,f,c
  3489  001EB0  90D8               	bcf	status,0,c
  3490  001EB2  3203               	rrcf	___ftpack@arg+2,f,c
  3491  001EB4  3202               	rrcf	___ftpack@arg+1,f,c
  3492  001EB6  3201               	rrcf	___ftpack@arg,f,c
  3493  001EB8                     l1887:
  3494  001EB8  0E00               	movlw	0
  3495  001EBA  1401               	andwf	___ftpack@arg,w,c
  3496  001EBC  6E06               	movwf	??___ftpack& (0+255),c
  3497  001EBE  0E00               	movlw	0
  3498  001EC0  1402               	andwf	___ftpack@arg+1,w,c
  3499  001EC2  6E07               	movwf	(??___ftpack+1)& (0+255),c
  3500  001EC4  0EFF               	movlw	255
  3501  001EC6  1403               	andwf	___ftpack@arg+2,w,c
  3502  001EC8  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3503  001ECA  5006               	movf	??___ftpack,w,c
  3504  001ECC  1007               	iorwf	??___ftpack+1,w,c
  3505  001ECE  1008               	iorwf	??___ftpack+2,w,c
  3506  001ED0  B4D8               	btfsc	status,2,c
  3507  001ED2  D006               	goto	l1891
  3508  001ED4  D7E6               	goto	l1883
  3509  001ED6                     l1889:
  3510  001ED6  0604               	decf	___ftpack@exp,f,c
  3511  001ED8  90D8               	bcf	status,0,c
  3512  001EDA  3601               	rlcf	___ftpack@arg,f,c
  3513  001EDC  3602               	rlcf	___ftpack@arg+1,f,c
  3514  001EDE  3603               	rlcf	___ftpack@arg+2,f,c
  3515  001EE0                     l1891:
  3516  001EE0  AE02               	btfss	___ftpack@arg+1,7,c
  3517  001EE2  D7F9               	goto	l1889
  3518  001EE4  A004               	btfss	___ftpack@exp,0,c
  3519  001EE6  9E02               	bcf	___ftpack@arg+1,7,c
  3520  001EE8  90D8               	bcf	status,0,c
  3521  001EEA  3204               	rrcf	___ftpack@exp,f,c
  3522  001EEC  5004               	movf	___ftpack@exp,w,c
  3523  001EEE  6E08               	movwf	(??___ftpack+2)& (0+255),c
  3524  001EF0  6A07               	clrf	(??___ftpack+1)& (0+255),c
  3525  001EF2  6A06               	clrf	??___ftpack& (0+255),c
  3526  001EF4  5006               	movf	??___ftpack,w,c
  3527  001EF6  1201               	iorwf	___ftpack@arg,f,c
  3528  001EF8  5007               	movf	??___ftpack+1,w,c
  3529  001EFA  1202               	iorwf	___ftpack@arg+1,f,c
  3530  001EFC  5008               	movf	??___ftpack+2,w,c
  3531  001EFE  1203               	iorwf	___ftpack@arg+2,f,c
  3532  001F00  5005               	movf	___ftpack@sign,w,c
  3533  001F02  A4D8               	btfss	status,2,c
  3534  001F04  8E03               	bsf	___ftpack@arg+2,7,c
  3535  001F06  C001  F001         	movff	___ftpack@arg,?___ftpack
  3536  001F0A  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  3537  001F0E  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  3538  001F12  0012               	return	
  3539  001F14                     __end_of___ftpack:
  3540                           	opt stack 0
  3541                           tblptru	equ	0xFF8
  3542                           tblptrh	equ	0xFF7
  3543                           tblptrl	equ	0xFF6
  3544                           tablat	equ	0xFF5
  3545                           wreg	equ	0xFE8
  3546                           postinc2	equ	0xFDE
  3547                           postdec2	equ	0xFDD
  3548                           fsr2h	equ	0xFDA
  3549                           fsr2l	equ	0xFD9
  3550                           status	equ	0xFD8
  3551                           
  3552 ;; *************** function ___lltoft *****************
  3553 ;; Defined at:
  3554 ;;		line 36 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\lltoft.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  c               4    8[COMRAM] unsigned long 
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;  exp             1   16[COMRAM] unsigned char 
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  3    8[COMRAM] float 
  3561 ;; Registers used:
  3562 ;;		wreg, status,2, status,0, cstack
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3568 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3569 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3570 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3571 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3572 ;;Total ram usage:        9 bytes
  3573 ;; Hardware stack levels used:    1
  3574 ;; Hardware stack levels required when called:    1
  3575 ;; This function calls:
  3576 ;;		___ftpack
  3577 ;; This function is called by:
  3578 ;;		_pow
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text20
  3583  0020B8                     __ptext20:
  3584                           	opt stack 0
  3585  0020B8                     ___lltoft:
  3586                           	opt stack 26
  3587                           
  3588                           ;incstack = 0
  3589                           ;incstack = 0
  3590  0020B8  6E0D               	movwf	??___lltoft& (0+255),c
  3591  0020BA  0E8E               	movlw	142
  3592  0020BC  6E11               	movwf	___lltoft@exp,c
  3593  0020BE  500D               	movf	??___lltoft& (0+255),w,c
  3594  0020C0  D006               	goto	l2075
  3595  0020C2                     l2073:
  3596  0020C2  90D8               	bcf	status,0,c
  3597  0020C4  320C               	rrcf	___lltoft@c+3,f,c
  3598  0020C6  320B               	rrcf	___lltoft@c+2,f,c
  3599  0020C8  320A               	rrcf	___lltoft@c+1,f,c
  3600  0020CA  3209               	rrcf	___lltoft@c,f,c
  3601  0020CC  2A11               	incf	___lltoft@exp,f,c
  3602  0020CE                     l2075:
  3603  0020CE  0E00               	movlw	0
  3604  0020D0  1409               	andwf	___lltoft@c,w,c
  3605  0020D2  6E0D               	movwf	??___lltoft& (0+255),c
  3606  0020D4  0E00               	movlw	0
  3607  0020D6  140A               	andwf	___lltoft@c+1,w,c
  3608  0020D8  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  3609  0020DA  0E00               	movlw	0
  3610  0020DC  140B               	andwf	___lltoft@c+2,w,c
  3611  0020DE  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  3612  0020E0  0EFF               	movlw	255
  3613  0020E2  140C               	andwf	___lltoft@c+3,w,c
  3614  0020E4  6E10               	movwf	(??___lltoft+3)& (0+255),c
  3615  0020E6  5010               	movf	??___lltoft+3,w,c
  3616  0020E8  100D               	iorwf	??___lltoft,w,c
  3617  0020EA  100E               	iorwf	??___lltoft+1,w,c
  3618  0020EC  100F               	iorwf	??___lltoft+2,w,c
  3619  0020EE  A4D8               	btfss	status,2,c
  3620  0020F0  D7E8               	goto	l2073
  3621  0020F2  C009  F001         	movff	___lltoft@c,?___ftpack
  3622  0020F6  C00A  F002         	movff	___lltoft@c+1,?___ftpack+1
  3623  0020FA  C00B  F003         	movff	___lltoft@c+2,?___ftpack+2
  3624  0020FE  C011  F004         	movff	___lltoft@exp,?___ftpack+3
  3625  002102  6E0D               	movwf	??___lltoft& (0+255),c
  3626  002104  0E00               	movlw	0
  3627  002106  6E05               	movwf	?___ftpack+4,c
  3628  002108  500D               	movf	??___lltoft& (0+255),w,c
  3629  00210A  EC2E  F00F         	call	___ftpack	;wreg free
  3630  00210E  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  3631  002112  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  3632  002116  C001  F009         	movff	?___ftpack,?___lltoft
  3633  00211A  0012               	return	
  3634  00211C                     __end_of___lltoft:
  3635                           	opt stack 0
  3636                           tblptru	equ	0xFF8
  3637                           tblptrh	equ	0xFF7
  3638                           tblptrl	equ	0xFF6
  3639                           tablat	equ	0xFF5
  3640                           wreg	equ	0xFE8
  3641                           postinc2	equ	0xFDE
  3642                           postdec2	equ	0xFDD
  3643                           fsr2h	equ	0xFDA
  3644                           fsr2l	equ	0xFD9
  3645                           status	equ	0xFD8
  3646                           
  3647 ;; *************** function _leds *****************
  3648 ;; Defined at:
  3649 ;;		line 22 in file "main.c"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;  port            1    0[COMRAM] unsigned char 
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;		None
  3654 ;; Return value:  Size  Location     Type
  3655 ;;		None               void
  3656 ;; Registers used:
  3657 ;;		wreg, status,2, status,0
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3663 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3665 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3666 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3667 ;;Total ram usage:        2 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; This function calls:
  3670 ;;		Nothing
  3671 ;; This function is called by:
  3672 ;;		_program
  3673 ;; This function uses a non-reentrant model
  3674 ;;
  3675                           
  3676                           	psect	text21
  3677  002248                     __ptext21:
  3678                           	opt stack 0
  3679  002248                     _leds:
  3680                           	opt stack 28
  3681                           
  3682                           ;main.c: 23: LATA=~port;
  3683                           
  3684                           ;incstack = 0
  3685                           ;incstack = 0
  3686  002248  5001               	movf	leds@port,w,c
  3687  00224A  0AFF               	xorlw	255
  3688  00224C  6E89               	movwf	3977,c	;volatile
  3689                           
  3690                           ;main.c: 24: if(~port & 0x40){
  3691  00224E  5001               	movf	leds@port,w,c
  3692  002250  0AFF               	xorlw	255
  3693  002252  6E02               	movwf	??_leds& (0+255),c
  3694  002254  AC02               	btfss	??_leds,6,c
  3695  002256  D003               	goto	l1865
  3696                           
  3697                           ;main.c: 25: LATE=LATE | 0x01;
  3698  002258  508D               	movf	3981,w,c	;volatile
  3699  00225A  0901               	iorlw	1
  3700  00225C  D002               	goto	L4
  3701  00225E                     l1865:
  3702                           
  3703                           ;main.c: 27: else LATE=LATE & ~0x01;
  3704  00225E  508D               	movf	3981,w,c	;volatile
  3705  002260  0BFE               	andlw	254
  3706  002262                     L4:
  3707  002262  6E8D               	movwf	3981,c	;volatile
  3708                           
  3709                           ;main.c: 28: if(~port & 0x80){
  3710  002264  5001               	movf	leds@port,w,c
  3711  002266  0AFF               	xorlw	255
  3712  002268  6E02               	movwf	??_leds& (0+255),c
  3713  00226A  AE02               	btfss	??_leds,7,c
  3714  00226C  D004               	goto	l1869
  3715                           
  3716                           ;main.c: 29: LATE=LATE | 0x02;
  3717  00226E  508D               	movf	3981,w,c	;volatile
  3718  002270  0902               	iorlw	2
  3719  002272  6E8D               	movwf	3981,c	;volatile
  3720                           
  3721                           ;main.c: 30: } else LATE=LATE & ~0x02;
  3722  002274  0012               	return	
  3723  002276                     l1869:
  3724  002276  508D               	movf	3981,w,c	;volatile
  3725  002278  0BFD               	andlw	253
  3726  00227A  6E8D               	movwf	3981,c	;volatile
  3727  00227C  0012               	return	
  3728  00227E                     __end_of_leds:
  3729                           	opt stack 0
  3730                           tblptru	equ	0xFF8
  3731                           tblptrh	equ	0xFF7
  3732                           tblptrl	equ	0xFF6
  3733                           tablat	equ	0xFF5
  3734                           wreg	equ	0xFE8
  3735                           postinc2	equ	0xFDE
  3736                           postdec2	equ	0xFDD
  3737                           fsr2h	equ	0xFDA
  3738                           fsr2l	equ	0xFD9
  3739                           status	equ	0xFD8
  3740                           
  3741 ;; *************** function _setup *****************
  3742 ;; Defined at:
  3743 ;;		line 18 in file "main.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;		None
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;		None
  3748 ;; Return value:  Size  Location     Type
  3749 ;;		None               void
  3750 ;; Registers used:
  3751 ;;		wreg, status,2
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3761 ;;Total ram usage:        0 bytes
  3762 ;; Hardware stack levels used:    1
  3763 ;; This function calls:
  3764 ;;		Nothing
  3765 ;; This function is called by:
  3766 ;;		_main
  3767 ;; This function uses a non-reentrant model
  3768 ;;
  3769                           
  3770                           	psect	text22
  3771  0022BA                     __ptext22:
  3772                           	opt stack 0
  3773  0022BA                     _setup:
  3774                           	opt stack 29
  3775                           
  3776                           ;main.c: 19: TRISA=0x00;
  3777                           
  3778                           ;incstack = 0
  3779                           ;incstack = 0
  3780  0022BA  0E00               	movlw	0
  3781  0022BC  6E92               	movwf	3986,c	;volatile
  3782                           
  3783                           ;main.c: 20: TRISE=0x00;
  3784  0022BE  0E00               	movlw	0
  3785  0022C0  6E96               	movwf	3990,c	;volatile
  3786  0022C2  0012               	return	
  3787  0022C4                     __end_of_setup:
  3788                           	opt stack 0
  3789                           tblptru	equ	0xFF8
  3790                           tblptrh	equ	0xFF7
  3791                           tblptrl	equ	0xFF6
  3792                           tablat	equ	0xFF5
  3793                           wreg	equ	0xFE8
  3794                           postinc2	equ	0xFDE
  3795                           postdec2	equ	0xFDD
  3796                           fsr2h	equ	0xFDA
  3797                           fsr2l	equ	0xFD9
  3798                           status	equ	0xFD8
  3799                           
  3800 ;; *************** function ___wmul *****************
  3801 ;; Defined at:
  3802 ;;		line 5 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\wmul.c"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;  multiplier      2    0[COMRAM] unsigned int 
  3805 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;  product         2    4[COMRAM] unsigned int 
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  2    0[COMRAM] unsigned int 
  3810 ;; Registers used:
  3811 ;;		wreg, status,2, status,0, prodl, prodh
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3817 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3818 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3820 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3821 ;;Total ram usage:        6 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; This function calls:
  3824 ;;		Nothing
  3825 ;; This function is called by:
  3826 ;;		_eval_poly
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           	psect	text23
  3831  0021D8                     __ptext23:
  3832                           	opt stack 0
  3833  0021D8                     ___wmul:
  3834                           	opt stack 25
  3835                           
  3836                           ;incstack = 0
  3837                           ;incstack = 0
  3838  0021D8  5001               	movf	___wmul@multiplier,w,c
  3839  0021DA  0203               	mulwf	___wmul@multiplicand,c
  3840  0021DC  CFF3 F005          	movff	prodl,___wmul@product
  3841  0021E0  CFF4 F006          	movff	prodh,___wmul@product+1
  3842  0021E4  5001               	movf	___wmul@multiplier,w,c
  3843  0021E6  0204               	mulwf	___wmul@multiplicand+1,c
  3844  0021E8  CFF3 FFF4          	movff	prodl,prodh
  3845  0021EC  6AF3               	clrf	prodl,c
  3846  0021EE  50F3               	movf	prodl,w,c
  3847  0021F0  2605               	addwf	___wmul@product,f,c
  3848  0021F2  50F4               	movf	prodh,w,c
  3849  0021F4  2206               	addwfc	___wmul@product+1,f,c
  3850  0021F6  5002               	movf	___wmul@multiplier+1,w,c
  3851  0021F8  0203               	mulwf	___wmul@multiplicand,c
  3852  0021FA  CFF3 FFF4          	movff	prodl,prodh
  3853  0021FE  6AF3               	clrf	prodl,c
  3854  002200  50F3               	movf	prodl,w,c
  3855  002202  2605               	addwf	___wmul@product,f,c
  3856  002204  50F4               	movf	prodh,w,c
  3857  002206  2206               	addwfc	___wmul@product+1,f,c
  3858  002208  C005  F001         	movff	___wmul@product,?___wmul
  3859  00220C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3860  002210  0012               	return	
  3861  002212                     __end_of___wmul:
  3862                           	opt stack 0
  3863                           tblptru	equ	0xFF8
  3864                           tblptrh	equ	0xFF7
  3865                           tblptrl	equ	0xFF6
  3866                           tablat	equ	0xFF5
  3867                           prodh	equ	0xFF4
  3868                           prodl	equ	0xFF3
  3869                           wreg	equ	0xFE8
  3870                           postinc2	equ	0xFDE
  3871                           postdec2	equ	0xFDD
  3872                           fsr2h	equ	0xFDA
  3873                           fsr2l	equ	0xFD9
  3874                           status	equ	0xFD8
  3875                           
  3876 ;; *************** function ___awtoft *****************
  3877 ;; Defined at:
  3878 ;;		line 33 in file "C:\PRG\Microchip\xc8\v1.20\sources\common\awtoft.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;  c               2   23[COMRAM] int 
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;  sign            1   27[COMRAM] unsigned char 
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  3   23[COMRAM] float 
  3885 ;; Registers used:
  3886 ;;		wreg, status,2, status,0, cstack
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3892 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3893 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3894 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3895 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3896 ;;Total ram usage:        5 bytes
  3897 ;; Hardware stack levels used:    1
  3898 ;; Hardware stack levels required when called:    1
  3899 ;; This function calls:
  3900 ;;		___ftpack
  3901 ;; This function is called by:
  3902 ;;		_program
  3903 ;;		_exp
  3904 ;;		_log
  3905 ;; This function uses a non-reentrant model
  3906 ;;
  3907                           
  3908                           	psect	text24
  3909  00211C                     __ptext24:
  3910                           	opt stack 0
  3911  00211C                     ___awtoft:
  3912                           	opt stack 27
  3913                           
  3914                           ;incstack = 0
  3915                           ;incstack = 0
  3916  00211C  6E1B               	movwf	??___awtoft& (0+255),c
  3917  00211E  0E00               	movlw	0
  3918  002120  6E1C               	movwf	___awtoft@sign,c
  3919  002122  501B               	movf	??___awtoft& (0+255),w,c
  3920  002124  AE19               	btfss	___awtoft@c+1,7,c
  3921  002126  D008               	goto	l2021
  3922  002128  6C18               	negf	___awtoft@c,c
  3923  00212A  1E19               	comf	___awtoft@c+1,f,c
  3924  00212C  B0D8               	btfsc	status,0,c
  3925  00212E  2A19               	incf	___awtoft@c+1,f,c
  3926  002130  6E1B               	movwf	??___awtoft& (0+255),c
  3927  002132  0E01               	movlw	1
  3928  002134  6E1C               	movwf	___awtoft@sign,c
  3929  002136  501B               	movf	??___awtoft& (0+255),w,c
  3930  002138                     l2021:
  3931  002138  C018  F001         	movff	___awtoft@c,?___ftpack
  3932  00213C  C019  F002         	movff	___awtoft@c+1,?___ftpack+1
  3933  002140  6A03               	clrf	?___ftpack+2,c
  3934  002142  6E1B               	movwf	??___awtoft& (0+255),c
  3935  002144  0E8E               	movlw	142
  3936  002146  6E04               	movwf	?___ftpack+3,c
  3937  002148  501B               	movf	??___awtoft& (0+255),w,c
  3938  00214A  C01C  F005         	movff	___awtoft@sign,?___ftpack+4
  3939  00214E  EC2E  F00F         	call	___ftpack	;wreg free
  3940  002152  C003  F01A         	movff	?___ftpack+2,?___awtoft+2
  3941  002156  C002  F019         	movff	?___ftpack+1,?___awtoft+1
  3942  00215A  C001  F018         	movff	?___ftpack,?___awtoft
  3943  00215E  0012               	return	
  3944  002160                     __end_of___awtoft:
  3945                           	opt stack 0
  3946                           tblptru	equ	0xFF8
  3947                           tblptrh	equ	0xFF7
  3948                           tblptrl	equ	0xFF6
  3949                           tablat	equ	0xFF5
  3950                           prodh	equ	0xFF4
  3951                           prodl	equ	0xFF3
  3952                           wreg	equ	0xFE8
  3953                           postinc2	equ	0xFDE
  3954                           postdec2	equ	0xFDD
  3955                           fsr2h	equ	0xFDA
  3956                           fsr2l	equ	0xFD9
  3957                           status	equ	0xFD8
  3958                           tblptru	equ	0xFF8
  3959                           tblptrh	equ	0xFF7
  3960                           tblptrl	equ	0xFF6
  3961                           tablat	equ	0xFF5
  3962                           prodh	equ	0xFF4
  3963                           prodl	equ	0xFF3
  3964                           wreg	equ	0xFE8
  3965                           postinc2	equ	0xFDE
  3966                           postdec2	equ	0xFDD
  3967                           fsr2h	equ	0xFDA
  3968                           fsr2l	equ	0xFD9
  3969                           status	equ	0xFD8
  3970                           
  3971                           	psect	rparam
  3972  0000                     tblptru	equ	0xFF8
  3973                           tblptrh	equ	0xFF7
  3974                           tblptrl	equ	0xFF6
  3975                           tablat	equ	0xFF5
  3976                           prodh	equ	0xFF4
  3977                           prodl	equ	0xFF3
  3978                           wreg	equ	0xFE8
  3979                           postinc2	equ	0xFDE
  3980                           postdec2	equ	0xFDD
  3981                           fsr2h	equ	0xFDA
  3982                           fsr2l	equ	0xFD9
  3983                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    57
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     30      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    ?_frexp	 size(2) Largest target is 0

    ?_ldexp	 size(2) Largest target is 0

    ?_eval_poly	 size(2) Largest target is 0

    ?_floor	 size(2) Largest target is 0

    ?___wmul	unsigned int  size(2) Largest target is 0

    ?_exp	unsigned int  size(2) Largest target is 0

    ?_log	unsigned int  size(2) Largest target is 0

    ?___lltoft	float  size(2) Largest target is 0

    ?___ftneg	float  size(2) Largest target is 0

    ?___asftsub	float  size(2) Largest target is 0

    ?___ftsub	float  size(2) Largest target is 0

    ?___asftmul	float  size(2) Largest target is 0

    ?___ftmul	float  size(2) Largest target is 0

    ?___ftdiv	float  size(2) Largest target is 0

    ?___ftadd	float  size(2) Largest target is 0

    ?___altoft	float  size(2) Largest target is 0

    ?___ftpack	float  size(2) Largest target is 0

    ?___awtoft	float  size(2) Largest target is 0

    ?___fttol	long  size(2) Largest target is 0

    ?_pow	long  size(2) Largest target is 0

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(COMRAM[2]), 

    __asftsub@f1p	PTR float  size(2) Largest target is 3
		 -> exp@x(COMRAM[3]), 

    __asftmul@f1p	PTR float  size(2) Largest target is 3
		 -> exp@x(COMRAM[3]), 


Critical Paths under _main in COMRAM

    _program->_pow
    _pow->_exp
    _exp->_log
    _ldexp->___ftpack
    _floor->___ftadd
    ___fttol->___ftpack
    ___altoft->___fttol
    ___asftsub->___ftsub
    ___ftsub->___ftadd
    ___asftmul->___ftmul
    ___ftdiv->___ftpack
    _log->_eval_poly
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftadd->___ftmul
    ___lltoft->___ftpack
    ___awtoft->___fttol

Critical Paths under _main in BANK0

    _main->_program
    _program->_pow

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5   14650
                                             25 BANK0      5     0      5
                              _setup
                            _program
 ---------------------------------------------------------------------------------
 (1) _program                                             20    20      0   14650
                                             11 BANK0     14    14      0
                               _leds
                                _pow
                           ___awtoft
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) _pow                                                 18    12      6   13595
                                             88 COMRAM     7     1      6
                                              0 BANK0     11    11      0
                            ___ftmul
                             ___ftge
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _log
                                _exp
 ---------------------------------------------------------------------------------
 (3) _exp                                                  9     6      3    7796
                                             79 COMRAM     9     6      3
                            ___ftdiv
                          ___asftmul
                          ___asftsub
                           ___awtoft
                             ___ftge
                            ___ftneg
                            ___fttol
                                _log (ARG)
                              _floor
                          _eval_poly
                              _ldexp
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                8     3      5     248
                                              8 COMRAM     8     3      5
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                                8     5      3    2259
                                             59 COMRAM     8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     252
                                              8 COMRAM    15    11      4
                           ___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6     136
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) ___altoft                                            10     6      4     347
                                             23 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3      45
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) ___asftsub                                            5     0      5    1160
                                             65 COMRAM     5     0      5
                            ___ftsub
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftsub                                              6     0      6    1094
                                             59 COMRAM     6     0      6
                            ___ftadd
 ---------------------------------------------------------------------------------
 (4) ___asftmul                                            5     0      5     601
                                             45 COMRAM     5     0      5
                            ___ftmul
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             17    11      6     489
                                              8 COMRAM    17    11      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _log                                                  5     2      3    4194
                                             74 COMRAM     5     2      3
                            ___ftadd
                            ___ftmul
                           ___awtoft
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                8     3      5     224
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           15     8      7    1921
                                             59 COMRAM    15     8      7
                            ___ftadd
                            ___ftmul
                             ___wmul
                              _ldexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             17    11      6     535
                                             28 COMRAM    17    11      6
                           ___ftpack
                           ___awtoft (ARG)
                              _ldexp (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             14     8      6    1049
                                             45 COMRAM    14     8      6
                           ___ftpack
                            ___ftmul (ARG)
                           ___awtoft (ARG)
                             ___wmul (ARG)
                              _ldexp (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5     209
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4     278
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _leds                                                 2     1      1      66
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     159
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             5     2      3     300
                                             23 COMRAM     5     2      3
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _program
     _leds
     _pow
       ___ftmul
         ___ftpack
         ___awtoft (ARG)
           ___ftpack
           ___fttol (ARG)
             ___ftpack (ARG)
         _ldexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       ___ftneg
       ___fttol
         ___ftpack (ARG)
       ___lltoft
         ___ftpack
       _log
         ___ftadd
           ___ftpack
           ___ftmul (ARG)
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftpack (ARG)
             _ldexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___ftpack (ARG)
           ___wmul (ARG)
           _ldexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___ftpack
           ___awtoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___ftpack (ARG)
           _ldexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
           _frexp (ARG)
         ___awtoft
           ___ftpack
           ___fttol (ARG)
             ___ftpack (ARG)
         _eval_poly
           ___ftadd
             ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___ftpack (ARG)
               _ldexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftpack (ARG)
             ___wmul (ARG)
             _ldexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftpack (ARG)
             _ldexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___wmul
           _ldexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
         _frexp
       _exp
         ___ftdiv
           ___ftpack
         ___asftmul
           ___ftmul
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftpack (ARG)
             _ldexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             _frexp (ARG)
         ___asftsub
           ___ftsub
             ___ftadd
               ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___ftpack (ARG)
                 _ldexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___ftpack (ARG)
               ___wmul (ARG)
               _ldexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
           ___awtoft (ARG)
             ___ftpack
             ___fttol (ARG)
               ___ftpack (ARG)
         ___awtoft
           ___ftpack
           ___fttol (ARG)
             ___ftpack (ARG)
         ___ftge
         ___ftneg
         ___fttol
           ___ftpack (ARG)
         _log (ARG)
           ___ftadd
             ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___ftpack (ARG)
               _ldexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftpack (ARG)
             ___wmul (ARG)
             _ldexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftpack (ARG)
             _ldexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___awtoft
             ___ftpack
             ___fttol (ARG)
               ___ftpack (ARG)
           _eval_poly
             ___ftadd
               ___ftpack
               ___ftmul (ARG)
                 ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   ___fttol (ARG)
                     ___ftpack (ARG)
                 _ldexp (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___ftpack (ARG)
               ___wmul (ARG)
               _ldexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___ftpack (ARG)
               _ldexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___wmul
             _ldexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
           _frexp
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftpack (ARG)
           ___ftadd
             ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___ftpack (ARG)
               _ldexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftpack (ARG)
             ___wmul (ARG)
             _ldexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___ftge
           ___fttol
             ___ftpack (ARG)
           _frexp
         _eval_poly (ARG)
           ___ftadd
             ___ftpack
             ___ftmul (ARG)
               ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 ___fttol (ARG)
                   ___ftpack (ARG)
               _ldexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___awtoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftpack (ARG)
             ___wmul (ARG)
             _ldexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___ftpack
             ___awtoft (ARG)
               ___ftpack
               ___fttol (ARG)
                 ___ftpack (ARG)
             _ldexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___wmul
           _ldexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
         _ldexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
     ___awtoft
       ___ftpack
       ___fttol (ARG)
         ___ftpack (ARG)
     ___fttol
       ___ftpack (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1E      20       5       20.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       7       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7F      12        0.0%
DATA                 0      0      86       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.20 build 52243 
Symbol Table                                                                                   Thu Jan 30 18:02:30 2014

           ___altoft@exp 0020            ___altoft@sign 0021      ___wmul@multiplicand 0003  
           ___asftmul@f2 0030             __CFG_CP0$OFF 000000             ___asftsub@f2 0044  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
           ___ftadd@exp1 003B             ___ftadd@exp2 003A              __CFG_LVP$ON 000000  
           ___ftadd@sign 0039                      l401 1A3E                      l402 1A64  
                    l424 2296                      l371 12B2                      l613 1212  
                    l382 1356                      l391 1372                      l367 1288  
                    l623 1C7A                      l584 1586                      l579 1432  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000                      _exp 103A  
                    _log 1736                      _pow 13EC                      wreg 000FE8  
           __CFG_FOSC$XT 000000            ___asftmul@f1p 002E            ___asftsub@f1p 0042  
           ___ftdiv@cntr 0014             ___ftdiv@sign 0019                     l2021 2138  
                   l2031 1AD2                     l2201 18E0                     l2113 1D3A  
                   l2133 12C0                     l2061 1B6C                     l2053 1B48  
                   l2109 1D2C                     l2127 1296                     l2215 1916  
                   l2063 1B70                     l2073 20C2                     l2161 1328  
                   l2225 1942                     l2049 1B38                     l2321 10CC  
                   l2075 20CE                     l2155 1310                     l2219 1926  
                   l2067 1B86                     l2059 1B60                     l2315 1090  
                   l2157 131A                     l2149 12F2                     l2229 1952  
                   l2261 1BE6                     l2309 1054                     l2175 138E  
                   l2167 1346                     l2159 1322                     l2087 1CA2  
                   l2343 11E8                     l2327 110C                     l2185 13C6  
                   l2169 1350                     l2273 1DBE                     l2265 1C00  
                   l2257 1BD8                     l2097 1CEA                     l2195 18A8  
                   l2275 1E46                     l2371 14D4                     l2363 145A  
                   l2435 22B4                     l2293 1790                     l2357 1440  
                   l2429 172C                     l2287 1768                     l2375 14FE  
                   l1913 1F74                     l1941 1FCE                     l1909 1F44  
                   l1919 1FA0                     l1865 225E                     l1881 1E84  
                   l1961 2062                     l1891 1EE0                     l1883 1EA2  
                   l1875 1E6C                     l1963 206E                     l1869 2276  
                   l1981 19FC                     l1887 1EB8                     l1879 1E7A  
                   l1975 19C4                     l1889 1ED6                     ?_exp 0050  
                   ?_log 004B                     ?_pow 0059                     u1100 1AB4  
                   u1040 19AA                     u1120 1AF0                     u1105 1AAC  
                   u1060 19E2                     u1045 19A2                     u1125 1AE8  
                   u1230 123E                     u1240 1264                     u1065 19DA  
                   u1225 1D1A                     u1235 1236                     u1245 125C  
                   _LATA 000F89                     u1440 188E                     u1600 10E6  
                   _LATE 000F8D                     u1515 1BC6                     u1460 18C6  
                   u1445 1886                     u1605 10DE                     u1606 10E8  
                   u1465 18BE                     u1555 1748                     u1675 146C  
                   u1685 14B4                     u1757 1670                     u1767 1716  
                   _main 22B0                     _leds 2248             ___ftpack@arg 0001  
           ___ftpack@exp 0004                     fsr2h 000FDA                     fsr2l 000FD9  
          __CFG_BORV$190 000000                     exp@x 0050                     log@x 004B  
                   pow@x 0059                     pow@y 005C                     prodh 000FF4  
                   prodl 000FF3                     start 0002            __CFG_IESO$OFF 000000  
           ___ftmul@cntr 002C             ___ftmul@sign 002D             ___fttol@exp1 0017  
                  ??_exp 0053                    ??_log 004E             ___fttol@lval 0013  
                  ??_pow 005F             program@imLed 0078                    ?_main 0079  
                  ?_leds 0001          __end_of___ftadd 13EC          __end_of___ftdiv 1A96  
        __end_of___ftneg 22A4          __end_of___ftmul 198C          __end_of___ftsub 2248  
        __end_of___fttol 1B98                    _TRISA 000F92                    _TRISE 000F96  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000             ___lltoft@exp 0011           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000            ___awtoft@sign 001C  
                  _floor 1B98                    _ldexp 1C88                    _frexp 1FA4  
                  _errno 007E       __CFG_MCLRE$EXTMCLR 000000            ___ftpack@sign 0005  
                  _setup 22BA                    tablat 000FF5                    pow@yi 0067  
        __end_of_program 1736                    status 000FD8           __CFG_HFOFST$ON 000000  
         __CFG_PBADEN$ON 000000              exp@exponent 0056              ldexp@newexp 000C  
        __initialization 22A4              log@exponent 004E             __end_of_main 22BA  
           __end_of_leds 227E                   ??_main 0060                   ??_leds 0002  
          ___fttol@sign1 0012            __activetblptr 000003                   ?_floor 003C  
                 ?_ldexp 0009                   ?_frexp 0001         __end_of___altoft 20B8  
                 ?_setup 0001         __end_of___awtoft 2160         __end_of___ftpack 1F14  
       __end_of___lltoft 211C           __CFG_WDTEN$OFF 000000           __CFG_XINST$OFF 000000  
                 ___ftge 1F14                   ___wmul 21D8                ??___ftadd 0034  
         __CFG_STVREN$ON 000000                ??___ftdiv 000F                ??___ftneg 0004  
              ??___ftmul 0023                ??___ftsub 0042                ??___fttol 000D  
                 floor@i 003F                   floor@x 003C    ___ftmul@f3_as_product 0029  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_program 006B       __size_of___asftmul 003C  
     __size_of___asftsub 003C         __end_ofexp@coeff 101E         __end_oflog@coeff 1039  
             __accesstop 0060  __end_of__initialization 22AA               ___altoft@c 0018  
             ___ftadd@f1 002E               ___ftadd@f2 0031               ___ftge@ff1 0001  
             ___ftge@ff2 0004             eval_poly@res 0048               ___ftdiv@f1 0009  
             ___ftdiv@f2 000C               ___ftdiv@f3 0015               ___ftneg@f1 0001  
             ___awtoft@c 0018               ___ftmul@f1 001D               ___ftmul@f2 0020  
             ___ftsub@f1 003C               ___ftsub@f2 003F               ___fttol@f1 0009  
         __pcstackCOMRAM 0001               ___lltoft@c 0009            __end_of_floor 1C88  
          __end_of_ldexp 1D72            __end_of_frexp 2034            __end_of_setup 22C4  
                ??_floor 003F                  ??_ldexp 000E                  ??_frexp 0006  
                ??_setup 0001               __pbssBANK0 007E       __size_of_eval_poly 00EA  
        __CFG_PLLCFG$OFF 000000       __CFG_CCP2MX$PORTC1 000000                  ?___ftge 0001  
                ?___wmul 0001       __CFG_CCP3MX$PORTB5 000000                ?___altoft 0018  
      __end_of___asftmul 21D8        __end_of___asftsub 219C                ?___awtoft 0018  
              ?___ftpack 0001                ?___lltoft 0009          __CFG_PWRTEN$OFF 000000  
                __Hparam 0000                  __Lparam 0000          __size_of___ftge 0090  
                ___ftadd 1220                  ___ftdiv 198C                  ___ftneg 227E  
        __size_of___wmul 003A                  ___ftmul 1870                  ___ftsub 2212  
                ___fttol 1A96             __psmallconst 1000               ??___altoft 001C  
                _exp$671 0053                  __pcinit 22A4               ??___awtoft 001B  
             ??___ftpack 0006        __end_of_eval_poly 1E5C                  __ramtop 1000  
             ??___lltoft 000D                  __ptext0 22B0                  __ptext1 1594  
                __ptext2 13EC                  __ptext3 103A                  __ptext4 1C88  
                __ptext5 1B98                  __ptext6 1A96                  __ptext7 1F14  
                __ptext8 2034                  __ptext9 227E                  _pow$670 0063  
                _pow$669 0060             __size_of_exp 01E6             __size_of_log 013A  
           __size_of_pow 01A8                  _program 1594     end_of_initialization 22AA  
                exp@sign 0058                  pow@sign 0066                  postdec2 000FDD  
                postinc2 000FDE              ___ftdiv@exp 0018              ___ftmul@exp 0028  
            program@Leds 006C              program@Sens 006D           __end_of___ftge 1FA4  
         __end_of___wmul 2212               floor@expon 0042      start_initialization 22A4  
             eval_poly@d 003F               eval_poly@n 0041               eval_poly@x 003C  
             ldexp@value 0009              __end_of_exp 1220              __end_of_log 1870  
            __end_of_pow 1594               frexp@value 0001                 ??___ftge 0007  
               ??___wmul 0005        __size_of___altoft 0084        __size_of___awtoft 0044  
      __size_of___ftpack 00B8                ___asftmul 219C                ___asftsub 2160  
      __size_of___lltoft 0064            __pcstackBANK0 0060                 ?___ftadd 002E  
               ?___ftdiv 0009                 ?___ftneg 0001                 ?___ftmul 001D  
               ?___ftsub 003C                 ?___fttol 0009         __CFG_PRICLKEN$ON 000000  
            __smallconst 1000               ?___asftmul 002E               ?___asftsub 0042  
              _eval_poly 1D72                 ?_program 0001           __size_of_floor 00F0  
         __size_of_ldexp 00EA           __size_of_frexp 0090           __size_of_setup 000A  
         ___wmul@product 0005         __CFG_WDTPS$32768 000000        ___wmul@multiplier 0001  
             ?_eval_poly 003C                frexp@eptr 0004                 __Hrparam 0000  
               __Lrparam 0000       __CFG_BOREN$SBORDIS 000000        __CFG_P2BMX$PORTD2 000000  
       __size_of___ftadd 01CC         __size_of___ftdiv 010A         __size_of___ftneg 0026  
               ___altoft 2034         __size_of___ftmul 011C         __size_of___ftsub 0036  
       __size_of___fttol 0102                 ___awtoft 211C                 ___ftpack 1E5C  
               ___lltoft 20B8              ??___asftmul 0033              ??___asftsub 0047  
               __ptext10 2160                 __ptext11 2212                 __ptext20 20B8  
               __ptext12 219C                 __ptext21 2248                 __ptext13 198C  
               __ptext22 22BA                 __ptext14 1736                 __ptext23 21D8  
               __ptext15 1FA4                 __ptext24 211C                 __ptext16 1D72  
               __ptext17 1870                 __ptext18 1220                 __ptext19 1E5C  
       __size_of_program 01A2            __size_of_main 000A            __size_of_leds 0036  
               main@argc 0079                 main@argv 007B                 leds@port 0001  
               exp@coeff 1000                 log@coeff 101E              ??_eval_poly 0043  
               program@i 0074                 program@j 0076        __CFG_T3CMX$PORTC0 000000  
            _program$667 006E              _program$668 0071  
